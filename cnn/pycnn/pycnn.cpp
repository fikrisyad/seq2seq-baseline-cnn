/* Generated by Cython 0.24 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_24"
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if !defined(CYTHON_USE_PYLONG_INTERNALS) && CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
  #define CYTHON_USE_PYLONG_INTERNALS 1
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if PY_VERSION_HEX >= 0x030500B1
#define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
} __Pyx_PyAsyncMethodsStruct;
#define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
#else
#define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #define CYTHON_INLINE inline
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__pycnn
#define __PYX_HAVE_API__pycnn
#include <vector>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include "string.h"
#include <string>
#include "cnn/init.h"
#include "cnn/dim.h"
#include "cnn/tensor.h"
#include "cnn/model.h"
#include "cnn/cnn.h"
#include "cnn/training.h"
#include "cnn/expr.h"
#include "cnn/rnn.h"
#include "cnn/lstm.h"
#include "stdlib.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "pycnn.pyx",
  "stringsource",
};

/* "pycnn.pxd":4
 * from libcpp.string cimport string
 * 
 * ctypedef float real             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "cnn/init.h" namespace "cnn":
 */
typedef float __pyx_t_5pycnn_real;

/*--- Type declarations ---*/
struct __pyx_obj_5pycnn_Parameters;
struct __pyx_obj_5pycnn_LookupParameters;
struct __pyx_obj_5pycnn_Model;
struct __pyx_obj_5pycnn_UnsignedValue;
struct __pyx_obj_5pycnn_FloatValue;
struct __pyx_obj_5pycnn_UnsignedVectorValue;
struct __pyx_obj_5pycnn_FloatVectorValue;
struct __pyx_obj_5pycnn_ComputationGraph;
struct __pyx_obj_5pycnn_Expression;
struct __pyx_obj_5pycnn__inputExpression;
struct __pyx_obj_5pycnn__vecInputExpression;
struct __pyx_obj_5pycnn__lookupExpression;
struct __pyx_obj_5pycnn__lookupBatchExpression;
struct __pyx_obj_5pycnn__pickerExpression;
struct __pyx_obj_5pycnn__pickerBatchExpression;
struct __pyx_obj_5pycnn__hingeExpression;
struct __pyx_obj_5pycnn_RNNBuilder;
struct __pyx_obj_5pycnn_SimpleRNNBuilder;
struct __pyx_obj_5pycnn_LSTMBuilder;
struct __pyx_obj_5pycnn_RNNState;
struct __pyx_obj_5pycnn_StackedRNNState;
struct __pyx_obj_5pycnn_SimpleSGDTrainer;
struct __pyx_obj_5pycnn_MomentumSGDTrainer;
struct __pyx_obj_5pycnn_AdagradTrainer;
struct __pyx_obj_5pycnn_AdadeltaTrainer;
struct __pyx_obj_5pycnn_AdamTrainer;
struct __pyx_opt_args_5pycnn_init;
struct __pyx_opt_args_5pycnn_16ComputationGraph_inputValue;
struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup;
struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup_batch;
struct __pyx_opt_args_5pycnn_16ComputationGraph_outputPicker;
struct __pyx_opt_args_5pycnn_10Expression_scalar_value;
struct __pyx_opt_args_5pycnn_10Expression_vec_value;
struct __pyx_opt_args_5pycnn_10Expression_npvalue;
struct __pyx_opt_args_5pycnn_10Expression_value;
struct __pyx_opt_args_5pycnn_10Expression_forward;
struct __pyx_opt_args_5pycnn_log_softmax;
struct __pyx_opt_args_5pycnn_fold_rows;
struct __pyx_opt_args_5pycnn_pairwise_rank_loss;
struct __pyx_opt_args_5pycnn_huber_distance;
struct __pyx_opt_args_5pycnn_10RNNBuilder_start_new_sequence;
struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state;
struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state_from_raw_vectors;
struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update;
struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update_epoch;
struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update;
struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update_epoch;
struct __pyx_opt_args_5pycnn_14AdagradTrainer_update;
struct __pyx_opt_args_5pycnn_14AdagradTrainer_update_epoch;
struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update;
struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update_epoch;
struct __pyx_opt_args_5pycnn_11AdamTrainer_update;
struct __pyx_opt_args_5pycnn_11AdamTrainer_update_epoch;

/* "pycnn.pyx":35
 * 
 * 
 * cdef init(random_seed=None):             # <<<<<<<<<<<<<<
 *     cdef int argc = len(sys.argv)
 *     cdef char** c_argv
 */
struct __pyx_opt_args_5pycnn_init {
  int __pyx_n;
  PyObject *random_seed;
};

/* "pycnn.pyx":338
 *     # We have the classes UnsignedValue, FloatValue and FloatVectorValue for
 *     # this purpose.
 *     cdef inputValue(self, float v = 0.0):             # <<<<<<<<<<<<<<
 *         return _inputExpression(self, v)
 *     cdef inputVector(self, int dim):
 */
struct __pyx_opt_args_5pycnn_16ComputationGraph_inputValue {
  int __pyx_n;
  float v;
};

/* "pycnn.pyx":344
 *     cdef inputMatrix(self, int d1, int d2):
 *         return _vecInputExpression(self, vector[float](d1*d2), (d1,d2))
 *     cdef lookup(self, LookupParameters p, unsigned v = 0, update=True):             # <<<<<<<<<<<<<<
 *         return _lookupExpression(self, p, v, update)
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):
 */
struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup {
  int __pyx_n;
  unsigned int v;
  PyObject *update;
};

/* "pycnn.pyx":346
 *     cdef lookup(self, LookupParameters p, unsigned v = 0, update=True):
 *         return _lookupExpression(self, p, v, update)
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):             # <<<<<<<<<<<<<<
 *         return _lookupBatchExpression(self, p, vs, update)
 *     cdef outputPicker(self, Expression e, unsigned v=0):
 */
struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup_batch {
  int __pyx_n;
  PyObject *update;
};

/* "pycnn.pyx":348
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):
 *         return _lookupBatchExpression(self, p, vs, update)
 *     cdef outputPicker(self, Expression e, unsigned v=0):             # <<<<<<<<<<<<<<
 *         r = _pickerExpression(self, e, v)
 *         return r
 */
struct __pyx_opt_args_5pycnn_16ComputationGraph_outputPicker {
  int __pyx_n;
  unsigned int v;
};

/* "pycnn.pyx":406
 *         return pickrange(self, i, j)
 * 
 *     cpdef scalar_value(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 */
struct __pyx_opt_args_5pycnn_10Expression_scalar_value {
  int __pyx_n;
  PyObject *recalculate;
};

/* "pycnn.pyx":411
 *         return c_as_scalar(self.cgp().get_value(self.vindex))
 * 
 *     cpdef vec_value(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 */
struct __pyx_opt_args_5pycnn_10Expression_vec_value {
  int __pyx_n;
  PyObject *recalculate;
};

/* "pycnn.pyx":416
 *         return c_as_vector(self.cgp().get_value(self.vindex))
 * 
 *     cpdef npvalue(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         cdef CTensor t
 */
struct __pyx_opt_args_5pycnn_10Expression_npvalue {
  int __pyx_n;
  PyObject *recalculate;
};

/* "pycnn.pyx":428
 *         return arr
 * 
 *     cpdef value(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         cdef CTensor t
 */
struct __pyx_opt_args_5pycnn_10Expression_value {
  int __pyx_n;
  PyObject *recalculate;
};

/* "pycnn.pyx":440
 * 
 *     # TODO this runs incremental forward on the entire graph, may not be optimal in terms of efficiency.
 *     cpdef forward(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 */
struct __pyx_opt_args_5pycnn_10Expression_forward {
  int __pyx_n;
  PyObject *recalculate;
};

/* "pycnn.pyx":635
 * cpdef Expression logistic(Expression x): return Expression.from_cexpr(x.cg_version, c_logistic(x.c()))
 * cpdef Expression rectify(Expression x): return Expression.from_cexpr(x.cg_version, c_rectify(x.c()))
 * cpdef Expression log_softmax(Expression x, list restrict=None):             # <<<<<<<<<<<<<<
 *     if restrict is None:
 *         return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c()))
 */
struct __pyx_opt_args_5pycnn_log_softmax {
  int __pyx_n;
  PyObject *__pyx_restrict;
};

/* "pycnn.pyx":650
 * 
 * #expr-opt
 * cpdef Expression fold_rows(Expression x, unsigned nrows=2): return Expression.from_cexpr(x.cg_version, c_fold_rows(x.c(),nrows))             # <<<<<<<<<<<<<<
 * #expr-expr-opt
 * # x is scalar or row vector
 */
struct __pyx_opt_args_5pycnn_fold_rows {
  int __pyx_n;
  unsigned int nrows;
};

/* "pycnn.pyx":655
 * # y is scalar or row vector
 * # res = max(0, m - x + y)
 * cpdef Expression pairwise_rank_loss(Expression x, Expression y, float m=1.0): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_pairwise_rank_loss(x.c(), y.c(), m))             # <<<<<<<<<<<<<<
 * cpdef Expression poisson_loss(Expression x, unsigned y): return Expression.from_cexpr(x.cg_version, c_poisson_loss(x.c(), y))
 * cpdef Expression huber_distance(Expression x, Expression y, float c=1.345): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_huber_distance(x.c(), y.c(), c))
 */
struct __pyx_opt_args_5pycnn_pairwise_rank_loss {
  int __pyx_n;
  float m;
};

/* "pycnn.pyx":657
 * cpdef Expression pairwise_rank_loss(Expression x, Expression y, float m=1.0): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_pairwise_rank_loss(x.c(), y.c(), m))
 * cpdef Expression poisson_loss(Expression x, unsigned y): return Expression.from_cexpr(x.cg_version, c_poisson_loss(x.c(), y))
 * cpdef Expression huber_distance(Expression x, Expression y, float c=1.345): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_huber_distance(x.c(), y.c(), c))             # <<<<<<<<<<<<<<
 * #expr-unsigned
 * cpdef Expression kmax_pooling(Expression x, unsigned k): return Expression.from_cexpr(x.cg_version, c_kmax_pooling(x.c(), k))
 */
struct __pyx_opt_args_5pycnn_huber_distance {
  int __pyx_n;
  float c;
};

/* "pycnn.pyx":750
 *         self.cg_version = _cg.version()
 * 
 *     cdef start_new_sequence(self, es=None):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef vector[CExpression] ces = vector[CExpression]()
 */
struct __pyx_opt_args_5pycnn_10RNNBuilder_start_new_sequence {
  int __pyx_n;
  PyObject *es;
};

/* "pycnn.pyx":814
 *         return res
 * 
 *     cpdef RNNState initial_state(self,vecs=None):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version():
 *             self.new_graph()
 */
struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state {
  int __pyx_n;
  PyObject *vecs;
};

/* "pycnn.pyx":824
 *         return self._init_state
 * 
 *     cpdef RNNState initial_state_from_raw_vectors(self,vecs=None):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version():
 *             self.new_graph()
 */
struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state_from_raw_vectors {
  int __pyx_n;
  PyObject *vecs;
};

/* "pycnn.pyx":1000
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */
struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update {
  int __pyx_n;
  float s;
};

/* "pycnn.pyx":1002
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */
struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update_epoch {
  int __pyx_n;
  float r;
};

/* "pycnn.pyx":1013
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */
struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update {
  int __pyx_n;
  float s;
};

/* "pycnn.pyx":1015
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */
struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update_epoch {
  int __pyx_n;
  float r;
};

/* "pycnn.pyx":1026
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */
struct __pyx_opt_args_5pycnn_14AdagradTrainer_update {
  int __pyx_n;
  float s;
};

/* "pycnn.pyx":1028
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */
struct __pyx_opt_args_5pycnn_14AdagradTrainer_update_epoch {
  int __pyx_n;
  float r;
};

/* "pycnn.pyx":1039
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */
struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update {
  int __pyx_n;
  float s;
};

/* "pycnn.pyx":1041
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */
struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update_epoch {
  int __pyx_n;
  float r;
};

/* "pycnn.pyx":1052
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */
struct __pyx_opt_args_5pycnn_11AdamTrainer_update {
  int __pyx_n;
  float s;
};

/* "pycnn.pyx":1054
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */
struct __pyx_opt_args_5pycnn_11AdamTrainer_update_epoch {
  int __pyx_n;
  float r;
};

/* "pycnn.pyx":78
 * 
 * # {{{ Model / Parameters
 * cdef class Parameters:             # <<<<<<<<<<<<<<
 *     cdef CParameters *thisptr
 *     def __cinit__(self):
 */
struct __pyx_obj_5pycnn_Parameters {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_Parameters *__pyx_vtab;
  cnn::Parameters *thisptr;
};


/* "pycnn.pyx":116
 * 
 * 
 * cdef class LookupParameters:             # <<<<<<<<<<<<<<
 *     cdef CLookupParameters *thisptr
 *     def __cinit__(self):
 */
struct __pyx_obj_5pycnn_LookupParameters {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_LookupParameters *__pyx_vtab;
  cnn::LookupParameters *thisptr;
};


/* "pycnn.pyx":158
 * 
 * 
 * cdef class Model:             # <<<<<<<<<<<<<<
 *     cdef CModel *thisptr
 *     cdef object named_params
 */
struct __pyx_obj_5pycnn_Model {
  PyObject_HEAD
  cnn::Model *thisptr;
  PyObject *named_params;
  PyObject *lookups;
  PyObject *regular;
};


/* "pycnn.pyx":215
 * # {{{ "Pointers"
 * 
 * cdef class UnsignedValue:             # <<<<<<<<<<<<<<
 *     cdef unsigned val
 *     def __cinit__(self, val = 0): self.val = val
 */
struct __pyx_obj_5pycnn_UnsignedValue {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_UnsignedValue *__pyx_vtab;
  unsigned int val;
};


/* "pycnn.pyx":222
 *     cdef unsigned* addr(self): return &(self.val)
 * 
 * cdef class FloatValue:             # <<<<<<<<<<<<<<
 *     cdef float val
 *     def __cinit__(self, val = 0): self.val = val
 */
struct __pyx_obj_5pycnn_FloatValue {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_FloatValue *__pyx_vtab;
  float val;
};


/* "pycnn.pyx":229
 *     cdef float* addr(self): return &(self.val)
 * 
 * cdef class UnsignedVectorValue:             # <<<<<<<<<<<<<<
 *     cdef vector[unsigned] *vals
 *     def __cinit__(self, vals):
 */
struct __pyx_obj_5pycnn_UnsignedVectorValue {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_UnsignedVectorValue *__pyx_vtab;
  std::vector<unsigned int>  *vals;
};


/* "pycnn.pyx":243
 *     cdef vector[unsigned]* addr(self): return self.vals
 * 
 * cdef class FloatVectorValue:             # <<<<<<<<<<<<<<
 *     cdef vector[float] *vals
 *     def __cinit__(self, vals):
 */
struct __pyx_obj_5pycnn_FloatVectorValue {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_FloatVectorValue *__pyx_vtab;
  std::vector<float>  *vals;
};


/* "pycnn.pyx":269
 *     return _cg
 * 
 * cdef class ComputationGraph:             # <<<<<<<<<<<<<<
 *     cdef CComputationGraph *thisptr,
 *     cdef list _inputs
 */
struct __pyx_obj_5pycnn_ComputationGraph {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_ComputationGraph *__pyx_vtab;
  cnn::ComputationGraph *thisptr;
  PyObject *_inputs;
  int _cg_version;
};


/* "pycnn.pyx":369
 * cdef _cdiv(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_div(a.c(), b))
 * 
 * cdef class Expression: #{{{             # <<<<<<<<<<<<<<
 *     #cdef CComputationGraph* cg
 *     # cg is a singleton, so there is no need to keep it inside the expression.
 */
struct __pyx_obj_5pycnn_Expression {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_Expression *__pyx_vtab;
  cnn::VariableIndex vindex;
  int cg_version;
};


/* "pycnn.pyx":484
 * #     These depend values that can be set by the caller
 * 
 * cdef class _inputExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef FloatValue val
 *     def __cinit__(self, ComputationGraph g, float s):
 */
struct __pyx_obj_5pycnn__inputExpression {
  struct __pyx_obj_5pycnn_Expression __pyx_base;
  struct __pyx_obj_5pycnn_FloatValue *val;
};


/* "pycnn.pyx":501
 *     return _cg.inputValue(s)
 * 
 * cdef class _vecInputExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef FloatVectorValue val
 *     def __cinit__(self, ComputationGraph g, vector[float] val, dim=None):
 */
struct __pyx_obj_5pycnn__vecInputExpression {
  struct __pyx_obj_5pycnn_Expression __pyx_base;
  struct __pyx_obj_5pycnn_FloatVectorValue *val;
};


/* "pycnn.pyx":522
 *     return _cg.inputMatrix(d1, d2)
 * 
 * cdef class _lookupExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, unsigned index=0, update=True):
 */
struct __pyx_obj_5pycnn__lookupExpression {
  struct __pyx_obj_5pycnn_Expression __pyx_base;
  struct __pyx_obj_5pycnn_UnsignedValue *val;
};


/* "pycnn.pyx":539
 *         self.val.set(i)
 * 
 * cdef class _lookupBatchExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef UnsignedVectorValue val
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, vector[unsigned] indices, update=True):
 */
struct __pyx_obj_5pycnn__lookupBatchExpression {
  struct __pyx_obj_5pycnn_Expression __pyx_base;
  struct __pyx_obj_5pycnn_UnsignedVectorValue *val;
};


/* "pycnn.pyx":561
 *     return _cg.lookup_batch(p, indices, update)
 * 
 * cdef class _pickerExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, Expression e, unsigned index=0):
 */
struct __pyx_obj_5pycnn__pickerExpression {
  struct __pyx_obj_5pycnn_Expression __pyx_base;
  struct __pyx_obj_5pycnn_UnsignedValue *val;
};


/* "pycnn.pyx":578
 *     return _cg.outputPicker(e, index)
 * 
 * cdef class _pickerBatchExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef UnsignedVectorValue val
 *     def __cinit__(self, ComputationGraph g, Expression e, vector[unsigned] indices):
 */
struct __pyx_obj_5pycnn__pickerBatchExpression {
  struct __pyx_obj_5pycnn_Expression __pyx_base;
  struct __pyx_obj_5pycnn_UnsignedVectorValue *val;
};


/* "pycnn.pyx":594
 *     return _cg.outputBatchPicker(e, indices)
 * 
 * cdef class _hingeExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, Expression x, unsigned index, float m=1.0):
 */
struct __pyx_obj_5pycnn__hingeExpression {
  struct __pyx_obj_5pycnn_Expression __pyx_base;
  struct __pyx_obj_5pycnn_UnsignedValue *val;
};


/* "pycnn.pyx":732
 * # TODO: unify these with inheritance
 * 
 * cdef class RNNBuilder: # {{{             # <<<<<<<<<<<<<<
 *     cdef CRNNBuilder *thisptr
 *     cdef RNNState _init_state
 */
struct __pyx_obj_5pycnn_RNNBuilder {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_RNNBuilder *__pyx_vtab;
  cnn::RNNBuilder *thisptr;
  struct __pyx_obj_5pycnn_RNNState *_init_state;
  int cg_version;
};


/* "pycnn.pyx":840
 * #}}}
 * 
 * cdef class SimpleRNNBuilder(RNNBuilder): # {{{             # <<<<<<<<<<<<<<
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *         self.thisptr = new CSimpleRNNBuilder(layers, input_dim, hidden_dim, model.thisptr)
 */
struct __pyx_obj_5pycnn_SimpleRNNBuilder {
  struct __pyx_obj_5pycnn_RNNBuilder __pyx_base;
};


/* "pycnn.pyx":848
 * #}}}
 * 
 * cdef class LSTMBuilder(RNNBuilder): # {{{             # <<<<<<<<<<<<<<
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *         self.thisptr = new CLSTMBuilder(layers, input_dim, hidden_dim, model.thisptr)
 */
struct __pyx_obj_5pycnn_LSTMBuilder {
  struct __pyx_obj_5pycnn_RNNBuilder __pyx_base;
};


/* "pycnn.pyx":856
 * # }}}
 * 
 * cdef class RNNState: # {{{             # <<<<<<<<<<<<<<
 *     """
 *     This is the main class for working with RNNs / LSTMs / GRUs.
 */
struct __pyx_obj_5pycnn_RNNState {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_RNNState *__pyx_vtab;
  struct __pyx_obj_5pycnn_RNNBuilder *builder;
  int state_idx;
  struct __pyx_obj_5pycnn_RNNState *_prev;
  struct __pyx_obj_5pycnn_Expression *_out;
};


/* "pycnn.pyx":957
 * 
 * # StackedRNNState   TODO: do at least minimal testing for this #{{{
 * cdef class StackedRNNState:             # <<<<<<<<<<<<<<
 *     cdef list states
 *     cdef StackedRNNState prev
 */
struct __pyx_obj_5pycnn_StackedRNNState {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_StackedRNNState *__pyx_vtab;
  PyObject *states;
  struct __pyx_obj_5pycnn_StackedRNNState *prev;
};


/* "pycnn.pyx":994
 * 
 * # {{{ Training
 * cdef class SimpleSGDTrainer:             # <<<<<<<<<<<<<<
 *     cdef CSimpleSGDTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1):
 */
struct __pyx_obj_5pycnn_SimpleSGDTrainer {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_SimpleSGDTrainer *__pyx_vtab;
  cnn::SimpleSGDTrainer *thisptr;
};


/* "pycnn.pyx":1007
 *         self.thisptr.status()
 * 
 * cdef class MomentumSGDTrainer:             # <<<<<<<<<<<<<<
 *     cdef CMomentumSGDTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.01, float mom = 0.9):
 */
struct __pyx_obj_5pycnn_MomentumSGDTrainer {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_MomentumSGDTrainer *__pyx_vtab;
  cnn::MomentumSGDTrainer *thisptr;
};


/* "pycnn.pyx":1020
 *         self.thisptr.status()
 * 
 * cdef class AdagradTrainer:             # <<<<<<<<<<<<<<
 *     cdef CAdagradTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1, float eps = 1e-20):
 */
struct __pyx_obj_5pycnn_AdagradTrainer {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_AdagradTrainer *__pyx_vtab;
  cnn::AdagradTrainer *thisptr;
};


/* "pycnn.pyx":1033
 *         self.thisptr.status()
 * 
 * cdef class AdadeltaTrainer:             # <<<<<<<<<<<<<<
 *     cdef CAdadeltaTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float eps = 1e-6, float rho = 0.95):
 */
struct __pyx_obj_5pycnn_AdadeltaTrainer {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_AdadeltaTrainer *__pyx_vtab;
  cnn::AdadeltaTrainer *thisptr;
};


/* "pycnn.pyx":1046
 *         self.thisptr.status()
 * 
 * cdef class AdamTrainer:             # <<<<<<<<<<<<<<
 *     cdef CAdamTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float alpha = 0.001, float beta_1 = 0.9, float beta_2 = 0.999, eps = 1e-8 ):
 */
struct __pyx_obj_5pycnn_AdamTrainer {
  PyObject_HEAD
  struct __pyx_vtabstruct_5pycnn_AdamTrainer *__pyx_vtab;
  cnn::AdamTrainer *thisptr;
};



/* "pycnn.pyx":78
 * 
 * # {{{ Model / Parameters
 * cdef class Parameters:             # <<<<<<<<<<<<<<
 *     cdef CParameters *thisptr
 *     def __cinit__(self):
 */

struct __pyx_vtabstruct_5pycnn_Parameters {
  PyObject *(*wrap_ptr)(cnn::Parameters *);
  PyObject *(*shape)(struct __pyx_obj_5pycnn_Parameters *, int __pyx_skip_dispatch);
  PyObject *(*as_array)(struct __pyx_obj_5pycnn_Parameters *, int __pyx_skip_dispatch);
  PyObject *(*load_array)(struct __pyx_obj_5pycnn_Parameters *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5pycnn_Parameters *__pyx_vtabptr_5pycnn_Parameters;


/* "pycnn.pyx":116
 * 
 * 
 * cdef class LookupParameters:             # <<<<<<<<<<<<<<
 *     cdef CLookupParameters *thisptr
 *     def __cinit__(self):
 */

struct __pyx_vtabstruct_5pycnn_LookupParameters {
  PyObject *(*wrap_ptr)(cnn::LookupParameters *);
  PyObject *(*init_from_array)(struct __pyx_obj_5pycnn_LookupParameters *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*shape)(struct __pyx_obj_5pycnn_LookupParameters *, int __pyx_skip_dispatch);
  PyObject *(*batch)(struct __pyx_obj_5pycnn_LookupParameters *, std::vector<unsigned int> , int __pyx_skip_dispatch);
  PyObject *(*init_row)(struct __pyx_obj_5pycnn_LookupParameters *, unsigned int, std::vector<float> , int __pyx_skip_dispatch);
  PyObject *(*as_array)(struct __pyx_obj_5pycnn_LookupParameters *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5pycnn_LookupParameters *__pyx_vtabptr_5pycnn_LookupParameters;


/* "pycnn.pyx":215
 * # {{{ "Pointers"
 * 
 * cdef class UnsignedValue:             # <<<<<<<<<<<<<<
 *     cdef unsigned val
 *     def __cinit__(self, val = 0): self.val = val
 */

struct __pyx_vtabstruct_5pycnn_UnsignedValue {
  unsigned int *(*addr)(struct __pyx_obj_5pycnn_UnsignedValue *);
};
static struct __pyx_vtabstruct_5pycnn_UnsignedValue *__pyx_vtabptr_5pycnn_UnsignedValue;


/* "pycnn.pyx":222
 *     cdef unsigned* addr(self): return &(self.val)
 * 
 * cdef class FloatValue:             # <<<<<<<<<<<<<<
 *     cdef float val
 *     def __cinit__(self, val = 0): self.val = val
 */

struct __pyx_vtabstruct_5pycnn_FloatValue {
  float *(*addr)(struct __pyx_obj_5pycnn_FloatValue *);
};
static struct __pyx_vtabstruct_5pycnn_FloatValue *__pyx_vtabptr_5pycnn_FloatValue;


/* "pycnn.pyx":229
 *     cdef float* addr(self): return &(self.val)
 * 
 * cdef class UnsignedVectorValue:             # <<<<<<<<<<<<<<
 *     cdef vector[unsigned] *vals
 *     def __cinit__(self, vals):
 */

struct __pyx_vtabstruct_5pycnn_UnsignedVectorValue {
  std::vector<unsigned int>  *(*addr)(struct __pyx_obj_5pycnn_UnsignedVectorValue *);
};
static struct __pyx_vtabstruct_5pycnn_UnsignedVectorValue *__pyx_vtabptr_5pycnn_UnsignedVectorValue;


/* "pycnn.pyx":243
 *     cdef vector[unsigned]* addr(self): return self.vals
 * 
 * cdef class FloatVectorValue:             # <<<<<<<<<<<<<<
 *     cdef vector[float] *vals
 *     def __cinit__(self, vals):
 */

struct __pyx_vtabstruct_5pycnn_FloatVectorValue {
  std::vector<float>  *(*addr)(struct __pyx_obj_5pycnn_FloatVectorValue *);
};
static struct __pyx_vtabstruct_5pycnn_FloatVectorValue *__pyx_vtabptr_5pycnn_FloatVectorValue;


/* "pycnn.pyx":269
 *     return _cg
 * 
 * cdef class ComputationGraph:             # <<<<<<<<<<<<<<
 *     cdef CComputationGraph *thisptr,
 *     cdef list _inputs
 */

struct __pyx_vtabstruct_5pycnn_ComputationGraph {
  PyObject *(*renew)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch);
  PyObject *(*version)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch);
  PyObject *(*forward_scalar)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch);
  PyObject *(*inc_forward_scalar)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch);
  PyObject *(*forward_vec)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch);
  PyObject *(*inc_forward_vec)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch);
  PyObject *(*forward)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch);
  PyObject *(*inc_forward)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch);
  PyObject *(*backward)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch);
  PyObject *(*PrintGraphviz)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch);
  PyObject *(*inputValue)(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_opt_args_5pycnn_16ComputationGraph_inputValue *__pyx_optional_args);
  PyObject *(*inputVector)(struct __pyx_obj_5pycnn_ComputationGraph *, int);
  PyObject *(*inputMatrix)(struct __pyx_obj_5pycnn_ComputationGraph *, int, int);
  PyObject *(*lookup)(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_obj_5pycnn_LookupParameters *, struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup *__pyx_optional_args);
  PyObject *(*lookup_batch)(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_obj_5pycnn_LookupParameters *, std::vector<unsigned int> , struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup_batch *__pyx_optional_args);
  PyObject *(*outputPicker)(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_obj_5pycnn_Expression *, struct __pyx_opt_args_5pycnn_16ComputationGraph_outputPicker *__pyx_optional_args);
  PyObject *(*outputBatchPicker)(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_obj_5pycnn_Expression *, std::vector<unsigned int> );
};
static struct __pyx_vtabstruct_5pycnn_ComputationGraph *__pyx_vtabptr_5pycnn_ComputationGraph;


/* "pycnn.pyx":369
 * cdef _cdiv(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_div(a.c(), b))
 * 
 * cdef class Expression: #{{{             # <<<<<<<<<<<<<<
 *     #cdef CComputationGraph* cg
 *     # cg is a singleton, so there is no need to keep it inside the expression.
 */

struct __pyx_vtabstruct_5pycnn_Expression {
  struct __pyx_obj_5pycnn_ComputationGraph *(*cg)(struct __pyx_obj_5pycnn_Expression *);
  cnn::ComputationGraph *(*cgp)(struct __pyx_obj_5pycnn_Expression *);
  struct __pyx_obj_5pycnn_Expression *(*from_cexpr)(int, cnn::expr::Expression);
  cnn::expr::Expression (*c)(struct __pyx_obj_5pycnn_Expression *);
  PyObject *(*scalar_value)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_scalar_value *__pyx_optional_args);
  PyObject *(*vec_value)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_vec_value *__pyx_optional_args);
  PyObject *(*npvalue)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_npvalue *__pyx_optional_args);
  PyObject *(*value)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_value *__pyx_optional_args);
  PyObject *(*forward)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_forward *__pyx_optional_args);
  PyObject *(*backward)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5pycnn_Expression *__pyx_vtabptr_5pycnn_Expression;
static CYTHON_INLINE struct __pyx_obj_5pycnn_ComputationGraph *__pyx_f_5pycnn_10Expression_cg(struct __pyx_obj_5pycnn_Expression *);
static CYTHON_INLINE cnn::ComputationGraph *__pyx_f_5pycnn_10Expression_cgp(struct __pyx_obj_5pycnn_Expression *);


/* "pycnn.pyx":484
 * #     These depend values that can be set by the caller
 * 
 * cdef class _inputExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef FloatValue val
 *     def __cinit__(self, ComputationGraph g, float s):
 */

struct __pyx_vtabstruct_5pycnn__inputExpression {
  struct __pyx_vtabstruct_5pycnn_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5pycnn__inputExpression *__pyx_vtabptr_5pycnn__inputExpression;


/* "pycnn.pyx":501
 *     return _cg.inputValue(s)
 * 
 * cdef class _vecInputExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef FloatVectorValue val
 *     def __cinit__(self, ComputationGraph g, vector[float] val, dim=None):
 */

struct __pyx_vtabstruct_5pycnn__vecInputExpression {
  struct __pyx_vtabstruct_5pycnn_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5pycnn__vecInputExpression *__pyx_vtabptr_5pycnn__vecInputExpression;


/* "pycnn.pyx":522
 *     return _cg.inputMatrix(d1, d2)
 * 
 * cdef class _lookupExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, unsigned index=0, update=True):
 */

struct __pyx_vtabstruct_5pycnn__lookupExpression {
  struct __pyx_vtabstruct_5pycnn_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5pycnn__lookupExpression *__pyx_vtabptr_5pycnn__lookupExpression;


/* "pycnn.pyx":539
 *         self.val.set(i)
 * 
 * cdef class _lookupBatchExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef UnsignedVectorValue val
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, vector[unsigned] indices, update=True):
 */

struct __pyx_vtabstruct_5pycnn__lookupBatchExpression {
  struct __pyx_vtabstruct_5pycnn_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5pycnn__lookupBatchExpression *__pyx_vtabptr_5pycnn__lookupBatchExpression;


/* "pycnn.pyx":561
 *     return _cg.lookup_batch(p, indices, update)
 * 
 * cdef class _pickerExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, Expression e, unsigned index=0):
 */

struct __pyx_vtabstruct_5pycnn__pickerExpression {
  struct __pyx_vtabstruct_5pycnn_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5pycnn__pickerExpression *__pyx_vtabptr_5pycnn__pickerExpression;


/* "pycnn.pyx":578
 *     return _cg.outputPicker(e, index)
 * 
 * cdef class _pickerBatchExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef UnsignedVectorValue val
 *     def __cinit__(self, ComputationGraph g, Expression e, vector[unsigned] indices):
 */

struct __pyx_vtabstruct_5pycnn__pickerBatchExpression {
  struct __pyx_vtabstruct_5pycnn_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5pycnn__pickerBatchExpression *__pyx_vtabptr_5pycnn__pickerBatchExpression;


/* "pycnn.pyx":594
 *     return _cg.outputBatchPicker(e, indices)
 * 
 * cdef class _hingeExpression(Expression):             # <<<<<<<<<<<<<<
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, Expression x, unsigned index, float m=1.0):
 */

struct __pyx_vtabstruct_5pycnn__hingeExpression {
  struct __pyx_vtabstruct_5pycnn_Expression __pyx_base;
};
static struct __pyx_vtabstruct_5pycnn__hingeExpression *__pyx_vtabptr_5pycnn__hingeExpression;


/* "pycnn.pyx":732
 * # TODO: unify these with inheritance
 * 
 * cdef class RNNBuilder: # {{{             # <<<<<<<<<<<<<<
 *     cdef CRNNBuilder *thisptr
 *     cdef RNNState _init_state
 */

struct __pyx_vtabstruct_5pycnn_RNNBuilder {
  PyObject *(*new_graph)(struct __pyx_obj_5pycnn_RNNBuilder *);
  PyObject *(*start_new_sequence)(struct __pyx_obj_5pycnn_RNNBuilder *, struct __pyx_opt_args_5pycnn_10RNNBuilder_start_new_sequence *__pyx_optional_args);
  struct __pyx_obj_5pycnn_Expression *(*add_input)(struct __pyx_obj_5pycnn_RNNBuilder *, struct __pyx_obj_5pycnn_Expression *);
  struct __pyx_obj_5pycnn_Expression *(*add_input_to_prev)(struct __pyx_obj_5pycnn_RNNBuilder *, cnn::RNNPointer, struct __pyx_obj_5pycnn_Expression *);
  PyObject *(*rewind_one_step)(struct __pyx_obj_5pycnn_RNNBuilder *);
  struct __pyx_obj_5pycnn_Expression *(*back)(struct __pyx_obj_5pycnn_RNNBuilder *);
  PyObject *(*final_h)(struct __pyx_obj_5pycnn_RNNBuilder *);
  PyObject *(*final_s)(struct __pyx_obj_5pycnn_RNNBuilder *);
  PyObject *(*get_h)(struct __pyx_obj_5pycnn_RNNBuilder *, cnn::RNNPointer);
  PyObject *(*get_s)(struct __pyx_obj_5pycnn_RNNBuilder *, cnn::RNNPointer);
  struct __pyx_obj_5pycnn_RNNState *(*initial_state)(struct __pyx_obj_5pycnn_RNNBuilder *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state *__pyx_optional_args);
  struct __pyx_obj_5pycnn_RNNState *(*initial_state_from_raw_vectors)(struct __pyx_obj_5pycnn_RNNBuilder *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state_from_raw_vectors *__pyx_optional_args);
};
static struct __pyx_vtabstruct_5pycnn_RNNBuilder *__pyx_vtabptr_5pycnn_RNNBuilder;


/* "pycnn.pyx":840
 * #}}}
 * 
 * cdef class SimpleRNNBuilder(RNNBuilder): # {{{             # <<<<<<<<<<<<<<
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *         self.thisptr = new CSimpleRNNBuilder(layers, input_dim, hidden_dim, model.thisptr)
 */

struct __pyx_vtabstruct_5pycnn_SimpleRNNBuilder {
  struct __pyx_vtabstruct_5pycnn_RNNBuilder __pyx_base;
};
static struct __pyx_vtabstruct_5pycnn_SimpleRNNBuilder *__pyx_vtabptr_5pycnn_SimpleRNNBuilder;


/* "pycnn.pyx":848
 * #}}}
 * 
 * cdef class LSTMBuilder(RNNBuilder): # {{{             # <<<<<<<<<<<<<<
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *         self.thisptr = new CLSTMBuilder(layers, input_dim, hidden_dim, model.thisptr)
 */

struct __pyx_vtabstruct_5pycnn_LSTMBuilder {
  struct __pyx_vtabstruct_5pycnn_RNNBuilder __pyx_base;
};
static struct __pyx_vtabstruct_5pycnn_LSTMBuilder *__pyx_vtabptr_5pycnn_LSTMBuilder;


/* "pycnn.pyx":856
 * # }}}
 * 
 * cdef class RNNState: # {{{             # <<<<<<<<<<<<<<
 *     """
 *     This is the main class for working with RNNs / LSTMs / GRUs.
 */

struct __pyx_vtabstruct_5pycnn_RNNState {
  struct __pyx_obj_5pycnn_RNNState *(*add_input)(struct __pyx_obj_5pycnn_RNNState *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch);
  PyObject *(*transduce)(struct __pyx_obj_5pycnn_RNNState *, PyObject *, int __pyx_skip_dispatch);
  struct __pyx_obj_5pycnn_Expression *(*output)(struct __pyx_obj_5pycnn_RNNState *, int __pyx_skip_dispatch);
  PyObject *(*h)(struct __pyx_obj_5pycnn_RNNState *, int __pyx_skip_dispatch);
  PyObject *(*s)(struct __pyx_obj_5pycnn_RNNState *, int __pyx_skip_dispatch);
  struct __pyx_obj_5pycnn_RNNState *(*prev)(struct __pyx_obj_5pycnn_RNNState *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5pycnn_RNNState *__pyx_vtabptr_5pycnn_RNNState;


/* "pycnn.pyx":957
 * 
 * # StackedRNNState   TODO: do at least minimal testing for this #{{{
 * cdef class StackedRNNState:             # <<<<<<<<<<<<<<
 *     cdef list states
 *     cdef StackedRNNState prev
 */

struct __pyx_vtabstruct_5pycnn_StackedRNNState {
  struct __pyx_obj_5pycnn_StackedRNNState *(*add_input)(struct __pyx_obj_5pycnn_StackedRNNState *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5pycnn_StackedRNNState *__pyx_vtabptr_5pycnn_StackedRNNState;


/* "pycnn.pyx":994
 * 
 * # {{{ Training
 * cdef class SimpleSGDTrainer:             # <<<<<<<<<<<<<<
 *     cdef CSimpleSGDTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1):
 */

struct __pyx_vtabstruct_5pycnn_SimpleSGDTrainer {
  PyObject *(*update)(struct __pyx_obj_5pycnn_SimpleSGDTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update *__pyx_optional_args);
  PyObject *(*update_epoch)(struct __pyx_obj_5pycnn_SimpleSGDTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update_epoch *__pyx_optional_args);
  PyObject *(*status)(struct __pyx_obj_5pycnn_SimpleSGDTrainer *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5pycnn_SimpleSGDTrainer *__pyx_vtabptr_5pycnn_SimpleSGDTrainer;


/* "pycnn.pyx":1007
 *         self.thisptr.status()
 * 
 * cdef class MomentumSGDTrainer:             # <<<<<<<<<<<<<<
 *     cdef CMomentumSGDTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.01, float mom = 0.9):
 */

struct __pyx_vtabstruct_5pycnn_MomentumSGDTrainer {
  PyObject *(*update)(struct __pyx_obj_5pycnn_MomentumSGDTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update *__pyx_optional_args);
  PyObject *(*update_epoch)(struct __pyx_obj_5pycnn_MomentumSGDTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update_epoch *__pyx_optional_args);
  PyObject *(*status)(struct __pyx_obj_5pycnn_MomentumSGDTrainer *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5pycnn_MomentumSGDTrainer *__pyx_vtabptr_5pycnn_MomentumSGDTrainer;


/* "pycnn.pyx":1020
 *         self.thisptr.status()
 * 
 * cdef class AdagradTrainer:             # <<<<<<<<<<<<<<
 *     cdef CAdagradTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1, float eps = 1e-20):
 */

struct __pyx_vtabstruct_5pycnn_AdagradTrainer {
  PyObject *(*update)(struct __pyx_obj_5pycnn_AdagradTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_14AdagradTrainer_update *__pyx_optional_args);
  PyObject *(*update_epoch)(struct __pyx_obj_5pycnn_AdagradTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_14AdagradTrainer_update_epoch *__pyx_optional_args);
  PyObject *(*status)(struct __pyx_obj_5pycnn_AdagradTrainer *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5pycnn_AdagradTrainer *__pyx_vtabptr_5pycnn_AdagradTrainer;


/* "pycnn.pyx":1033
 *         self.thisptr.status()
 * 
 * cdef class AdadeltaTrainer:             # <<<<<<<<<<<<<<
 *     cdef CAdadeltaTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float eps = 1e-6, float rho = 0.95):
 */

struct __pyx_vtabstruct_5pycnn_AdadeltaTrainer {
  PyObject *(*update)(struct __pyx_obj_5pycnn_AdadeltaTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update *__pyx_optional_args);
  PyObject *(*update_epoch)(struct __pyx_obj_5pycnn_AdadeltaTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update_epoch *__pyx_optional_args);
  PyObject *(*status)(struct __pyx_obj_5pycnn_AdadeltaTrainer *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5pycnn_AdadeltaTrainer *__pyx_vtabptr_5pycnn_AdadeltaTrainer;


/* "pycnn.pyx":1046
 *         self.thisptr.status()
 * 
 * cdef class AdamTrainer:             # <<<<<<<<<<<<<<
 *     cdef CAdamTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float alpha = 0.001, float beta_1 = 0.9, float beta_2 = 0.999, eps = 1e-8 ):
 */

struct __pyx_vtabstruct_5pycnn_AdamTrainer {
  PyObject *(*update)(struct __pyx_obj_5pycnn_AdamTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_11AdamTrainer_update *__pyx_optional_args);
  PyObject *(*update_epoch)(struct __pyx_obj_5pycnn_AdamTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_11AdamTrainer_update_epoch *__pyx_optional_args);
  PyObject *(*status)(struct __pyx_obj_5pycnn_AdamTrainer *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_5pycnn_AdamTrainer *__pyx_vtabptr_5pycnn_AdamTrainer;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* GetModuleGlobalName.proto */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

/* ListCompAppend.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyIntBinop.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyIntBinop.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, int inplace);
#else
#define __Pyx_PyInt_EqObjC(op1, op2, intval, inplace)\
    PyObject_RichCompare(op1, op2, Py_EQ)
    #endif

/* PyThreadStateGet.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = PyThreadState_GET();
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* KeywordStringCheck.proto */
static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* ListAppend.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* SliceObject.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* ArgTypeTest.proto */
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

/* None.proto */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

/* PyObjectSetAttrStr.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o,n,NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* CallNextTpTraverse.proto */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

/* CallNextTpClear.proto */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_5pycnn_10Parameters_wrap_ptr(cnn::Parameters *__pyx_v_ptr); /* proto*/
static PyObject *__pyx_f_5pycnn_10Parameters_shape(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_10Parameters_as_array(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_10Parameters_load_array(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self, PyObject *__pyx_v_arr, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_wrap_ptr(cnn::LookupParameters *__pyx_v_ptr); /* proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_init_from_array(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, PyObject *__pyx_v_arr, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_shape(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_batch(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, std::vector<unsigned int>  __pyx_v_i, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_init_row(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, unsigned int __pyx_v_i, std::vector<float>  __pyx_v_row, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_as_array(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static unsigned int *__pyx_f_5pycnn_13UnsignedValue_addr(struct __pyx_obj_5pycnn_UnsignedValue *__pyx_v_self); /* proto*/
static float *__pyx_f_5pycnn_10FloatValue_addr(struct __pyx_obj_5pycnn_FloatValue *__pyx_v_self); /* proto*/
static std::vector<unsigned int>  *__pyx_f_5pycnn_19UnsignedVectorValue_addr(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self); /* proto*/
static std::vector<float>  *__pyx_f_5pycnn_16FloatVectorValue_addr(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_renew(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_version(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_forward_scalar(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_inc_forward_scalar(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_forward_vec(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_inc_forward_vec(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_forward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_inc_forward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_backward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_PrintGraphviz(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_inputValue(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_opt_args_5pycnn_16ComputationGraph_inputValue *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_inputVector(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_v_dim); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_inputMatrix(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_v_d1, int __pyx_v_d2); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_lookup(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_lookup_batch(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, std::vector<unsigned int>  __pyx_v_vs, struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup_batch *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_outputPicker(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, struct __pyx_opt_args_5pycnn_16ComputationGraph_outputPicker *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_outputBatchPicker(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, std::vector<unsigned int>  __pyx_v_vs); /* proto*/
static CYTHON_INLINE struct __pyx_obj_5pycnn_ComputationGraph *__pyx_f_5pycnn_10Expression_cg(CYTHON_UNUSED struct __pyx_obj_5pycnn_Expression *__pyx_v_self); /* proto*/
static CYTHON_INLINE cnn::ComputationGraph *__pyx_f_5pycnn_10Expression_cgp(CYTHON_UNUSED struct __pyx_obj_5pycnn_Expression *__pyx_v_self); /* proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_10Expression_from_cexpr(int __pyx_v_cgv, cnn::expr::Expression __pyx_v_cexpr); /* proto*/
static cnn::expr::Expression __pyx_f_5pycnn_10Expression_c(struct __pyx_obj_5pycnn_Expression *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5pycnn_10Expression_scalar_value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_scalar_value *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_10Expression_vec_value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_vec_value *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_10Expression_npvalue(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_npvalue *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_10Expression_value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_value *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_10Expression_forward(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_forward *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_10Expression_backward(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_10RNNBuilder_new_graph(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5pycnn_10RNNBuilder_start_new_sequence(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, struct __pyx_opt_args_5pycnn_10RNNBuilder_start_new_sequence *__pyx_optional_args); /* proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_10RNNBuilder_add_input(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_e); /* proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_10RNNBuilder_add_input_to_prev(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, cnn::RNNPointer __pyx_v_prev, struct __pyx_obj_5pycnn_Expression *__pyx_v_e); /* proto*/
static PyObject *__pyx_f_5pycnn_10RNNBuilder_rewind_one_step(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self); /* proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_10RNNBuilder_back(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5pycnn_10RNNBuilder_final_h(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5pycnn_10RNNBuilder_final_s(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_5pycnn_10RNNBuilder_get_h(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, cnn::RNNPointer __pyx_v_i); /* proto*/
static PyObject *__pyx_f_5pycnn_10RNNBuilder_get_s(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, cnn::RNNPointer __pyx_v_i); /* proto*/
static struct __pyx_obj_5pycnn_RNNState *__pyx_f_5pycnn_10RNNBuilder_initial_state(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state *__pyx_optional_args); /* proto*/
static struct __pyx_obj_5pycnn_RNNState *__pyx_f_5pycnn_10RNNBuilder_initial_state_from_raw_vectors(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state_from_raw_vectors *__pyx_optional_args); /* proto*/
static struct __pyx_obj_5pycnn_RNNState *__pyx_f_5pycnn_8RNNState_add_input(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_8RNNState_transduce(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, PyObject *__pyx_v_xs, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_8RNNState_output(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_8RNNState_h(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_8RNNState_s(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_5pycnn_RNNState *__pyx_f_5pycnn_8RNNState_prev(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static struct __pyx_obj_5pycnn_StackedRNNState *__pyx_f_5pycnn_15StackedRNNState_add_input(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_16SimpleSGDTrainer_update(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_16SimpleSGDTrainer_update_epoch(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update_epoch *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_16SimpleSGDTrainer_status(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_18MomentumSGDTrainer_update(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_18MomentumSGDTrainer_update_epoch(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update_epoch *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_18MomentumSGDTrainer_status(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_14AdagradTrainer_update(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_14AdagradTrainer_update *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_14AdagradTrainer_update_epoch(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_14AdagradTrainer_update_epoch *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_14AdagradTrainer_status(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_15AdadeltaTrainer_update(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_15AdadeltaTrainer_update_epoch(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update_epoch *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_15AdadeltaTrainer_status(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_5pycnn_11AdamTrainer_update(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_11AdamTrainer_update *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_11AdamTrainer_update_epoch(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_11AdamTrainer_update_epoch *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_5pycnn_11AdamTrainer_status(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'pycnn' */
static PyTypeObject *__pyx_ptype_5pycnn_Parameters = 0;
static PyTypeObject *__pyx_ptype_5pycnn_LookupParameters = 0;
static PyTypeObject *__pyx_ptype_5pycnn_Model = 0;
static PyTypeObject *__pyx_ptype_5pycnn_UnsignedValue = 0;
static PyTypeObject *__pyx_ptype_5pycnn_FloatValue = 0;
static PyTypeObject *__pyx_ptype_5pycnn_UnsignedVectorValue = 0;
static PyTypeObject *__pyx_ptype_5pycnn_FloatVectorValue = 0;
static PyTypeObject *__pyx_ptype_5pycnn_ComputationGraph = 0;
static PyTypeObject *__pyx_ptype_5pycnn_Expression = 0;
static PyTypeObject *__pyx_ptype_5pycnn__inputExpression = 0;
static PyTypeObject *__pyx_ptype_5pycnn__vecInputExpression = 0;
static PyTypeObject *__pyx_ptype_5pycnn__lookupExpression = 0;
static PyTypeObject *__pyx_ptype_5pycnn__lookupBatchExpression = 0;
static PyTypeObject *__pyx_ptype_5pycnn__pickerExpression = 0;
static PyTypeObject *__pyx_ptype_5pycnn__pickerBatchExpression = 0;
static PyTypeObject *__pyx_ptype_5pycnn__hingeExpression = 0;
static PyTypeObject *__pyx_ptype_5pycnn_RNNBuilder = 0;
static PyTypeObject *__pyx_ptype_5pycnn_SimpleRNNBuilder = 0;
static PyTypeObject *__pyx_ptype_5pycnn_LSTMBuilder = 0;
static PyTypeObject *__pyx_ptype_5pycnn_RNNState = 0;
static PyTypeObject *__pyx_ptype_5pycnn_StackedRNNState = 0;
static PyTypeObject *__pyx_ptype_5pycnn_SimpleSGDTrainer = 0;
static PyTypeObject *__pyx_ptype_5pycnn_MomentumSGDTrainer = 0;
static PyTypeObject *__pyx_ptype_5pycnn_AdagradTrainer = 0;
static PyTypeObject *__pyx_ptype_5pycnn_AdadeltaTrainer = 0;
static PyTypeObject *__pyx_ptype_5pycnn_AdamTrainer = 0;
static int __pyx_v_5pycnn_SECRET;
static struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_5pycnn__cg = 0;
static PyObject *__pyx_f_5pycnn_init(struct __pyx_opt_args_5pycnn_init *__pyx_optional_args); /*proto*/
static cnn::Dim __pyx_f_5pycnn_Dim(PyObject *); /*proto*/
static PyObject *__pyx_f_5pycnn_c_tensor_as_np(cnn::Tensor &); /*proto*/
static struct __pyx_obj_5pycnn_ComputationGraph *__pyx_f_5pycnn_cg(int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_5pycnn_ensure_freshness(struct __pyx_obj_5pycnn_Expression *); /*proto*/
static PyObject *__pyx_f_5pycnn__add(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *); /*proto*/
static PyObject *__pyx_f_5pycnn__mul(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *); /*proto*/
static PyObject *__pyx_f_5pycnn__neg(struct __pyx_obj_5pycnn_Expression *); /*proto*/
static PyObject *__pyx_f_5pycnn__scalarsub(float, struct __pyx_obj_5pycnn_Expression *); /*proto*/
static PyObject *__pyx_f_5pycnn__cadd(struct __pyx_obj_5pycnn_Expression *, float); /*proto*/
static PyObject *__pyx_f_5pycnn__cmul(struct __pyx_obj_5pycnn_Expression *, float); /*proto*/
static PyObject *__pyx_f_5pycnn__cdiv(struct __pyx_obj_5pycnn_Expression *, float); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn__parameter(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_obj_5pycnn_Parameters *); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_cdiv(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_colwise_add(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_trace_of_product(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_cwise_multiply(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_dot_product(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_squared_distance(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_l1_distance(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_binary_log_loss(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_conv1d_narrow(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_conv1d_wide(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_tanh(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_exp(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_square(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_cube(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_log(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_logistic(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_rectify(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_log_softmax(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_log_softmax *__pyx_optional_args); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_softmax(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_softsign(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_bmin(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_bmax(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_transpose(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_sum_cols(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_sum_batches(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_fold_rows(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_fold_rows *__pyx_optional_args); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_pairwise_rank_loss(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_pairwise_rank_loss *__pyx_optional_args); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_poisson_loss(struct __pyx_obj_5pycnn_Expression *, unsigned int, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_huber_distance(struct __pyx_obj_5pycnn_Expression *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_huber_distance *__pyx_optional_args); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_kmax_pooling(struct __pyx_obj_5pycnn_Expression *, unsigned int, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_pickneglogsoftmax(struct __pyx_obj_5pycnn_Expression *, unsigned int, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_pickneglogsoftmax_batch(struct __pyx_obj_5pycnn_Expression *, std::vector<unsigned int> , int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_kmh_ngram(struct __pyx_obj_5pycnn_Expression *, unsigned int, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_pickrange(struct __pyx_obj_5pycnn_Expression *, unsigned int, unsigned int, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_noise(struct __pyx_obj_5pycnn_Expression *, float, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_dropout(struct __pyx_obj_5pycnn_Expression *, float, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_block_dropout(struct __pyx_obj_5pycnn_Expression *, float, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_reshape(struct __pyx_obj_5pycnn_Expression *, PyObject *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_esum(PyObject *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_average(PyObject *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_emax(PyObject *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_concatenate_cols(PyObject *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_concatenate(PyObject *, int __pyx_skip_dispatch); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_affine_transform(PyObject *, int __pyx_skip_dispatch); /*proto*/
static std::vector<unsigned int>  __pyx_convert_vector_from_py_unsigned_int(PyObject *); /*proto*/
static std::vector<float>  __pyx_convert_vector_from_py_float(PyObject *); /*proto*/
static std::string __pyx_convert_string_from_py_std__in_string(PyObject *); /*proto*/
static PyObject *__pyx_convert_vector_to_py_float(const std::vector<float>  &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_unsigned_int(const std::vector<unsigned int>  &); /*proto*/
#define __Pyx_MODULE_NAME "pycnn"
int __pyx_module_is_main_pycnn = 0;

/* Implementation of 'pycnn' */
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_xrange;
static PyObject *__pyx_builtin_Exception;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_range;
static const char __pyx_k_F[] = "F";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_d[] = "d";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_g[] = "g";
static const char __pyx_k_h[] = "h";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_m[] = "m";
static const char __pyx_k_p[] = "p";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_s[] = "s";
static const char __pyx_k_u[] = "u";
static const char __pyx_k_v[] = "v";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_d1[] = "d1";
static const char __pyx_k_d2[] = "d2";
static const char __pyx_k_e0[] = "e0";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_vs[] = "vs";
static const char __pyx_k_dim[] = "dim";
static const char __pyx_k_eps[] = "eps";
static const char __pyx_k_lam[] = "lam";
static const char __pyx_k_mom[] = "mom";
static const char __pyx_k_out[] = "out";
static const char __pyx_k_rho[] = "rho";
static const char __pyx_k_row[] = "row";
static const char __pyx_k_set[] = "set";
static const char __pyx_k_sys[] = "sys";
static const char __pyx_k_val[] = "val";
static const char __pyx_k_argv[] = "argv";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_pick[] = "pick";
static const char __pyx_k_prev[] = "prev";
static const char __pyx_k_size[] = "size";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_vals[] = "vals";
static const char __pyx_k_vecs[] = "vecs";
static const char __pyx_k_alpha[] = "alpha";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_batch[] = "batch";
static const char __pyx_k_guard[] = "guard";
static const char __pyx_k_hinge[] = "hinge";
static const char __pyx_k_index[] = "index";
static const char __pyx_k_model[] = "model";
static const char __pyx_k_nrows[] = "nrows";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_order[] = "order";
static const char __pyx_k_pycnn[] = "pycnn";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_renew[] = "renew";
static const char __pyx_k_scale[] = "scale";
static const char __pyx_k_shape[] = "shape";
static const char __pyx_k_value[] = "value";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_beta_1[] = "beta_1";
static const char __pyx_k_beta_2[] = "beta_2";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_layers[] = "layers";
static const char __pyx_k_lookup[] = "lookup";
static const char __pyx_k_output[] = "output";
static const char __pyx_k_states[] = "states";
static const char __pyx_k_status[] = "status";
static const char __pyx_k_stddev[] = "stddev";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_vstack[] = "vstack";
static const char __pyx_k_xrange[] = "xrange";
static const char __pyx_k_builder[] = "builder";
static const char __pyx_k_flatten[] = "flatten";
static const char __pyx_k_forward[] = "forward";
static const char __pyx_k_indices[] = "indices";
static const char __pyx_k_npvalue[] = "npvalue";
static const char __pyx_k_reshape[] = "reshape";
static const char __pyx_k_version[] = "version";
static const char __pyx_k_as_array[] = "as_array";
static const char __pyx_k_backward[] = "backward";
static const char __pyx_k_init_row[] = "init_row";
static const char __pyx_k_matInput[] = "matInput";
static const char __pyx_k_renew_cg[] = "renew_cg";
static const char __pyx_k_restrict[] = "restrict";
static const char __pyx_k_vecInput[] = "vecInput";
static const char __pyx_k_Exception[] = "Exception";
static const char __pyx_k_add_input[] = "add_input";
static const char __pyx_k_enumerate[] = "enumerate";
static const char __pyx_k_input_dim[] = "input_dim";
static const char __pyx_k_parameter[] = "parameter";
static const char __pyx_k_state_idx[] = "state_idx";
static const char __pyx_k_transduce[] = "transduce";
static const char __pyx_k_vec_value[] = "vec_value";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_cg_version[] = "cg_version";
static const char __pyx_k_hidden_dim[] = "hidden_dim";
static const char __pyx_k_load_array[] = "load_array";
static const char __pyx_k_pick_batch[] = "pick_batch";
static const char __pyx_k_prev_state[] = "prev_state";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_LSTMBuilder[] = "LSTMBuilder";
static const char __pyx_k_forward_vec[] = "forward_vec";
static const char __pyx_k_inc_forward[] = "inc_forward";
static const char __pyx_k_recalculate[] = "recalculate";
static const char __pyx_k_scalarInput[] = "scalarInput";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_dim_mismatch[] = "dim mismatch";
static const char __pyx_k_lookup_batch[] = "lookup_batch";
static const char __pyx_k_scalar_value[] = "scalar_value";
static const char __pyx_k_update_epoch[] = "update_epoch";
static const char __pyx_k_PrintGraphviz[] = "PrintGraphviz";
static const char __pyx_k_exprssion_s_s[] = "exprssion %s/%s";
static const char __pyx_k_initial_state[] = "initial_state";
static const char __pyx_k_too_many_rows[] = "too many rows";
static const char __pyx_k_forward_scalar[] = "forward_scalar";
static const char __pyx_k_inc_forward_vec[] = "inc_forward_vec";
static const char __pyx_k_init_from_array[] = "init_from_array";
static const char __pyx_k_SimpleRNNBuilder[] = "SimpleRNNBuilder";
static const char __pyx_k_inc_forward_scalar[] = "inc_forward_scalar";
static const char __pyx_k_NotImplementedError[] = "NotImplementedError";
static const char __pyx_k_incremental_forward[] = "incremental_forward";
static const char __pyx_k_Unsupported_dimension[] = "Unsupported dimension";
static const char __pyx_k_name_already_registered[] = "name already registered";
static const char __pyx_k_home_gaito_App_cnn_pycnn_pycnn[] = "/home/gaito/App/cnn/pycnn/pycnn.pyx";
static const char __pyx_k_initial_state_from_raw_vectors[] = "initial_state_from_raw_vectors";
static const char __pyx_k_Stale_Expression_created_before[] = "Stale Expression (created before renewing the Computation Graph).";
static const char __pyx_k_Attempt_to_use_a_stale_expressio[] = "Attempt to use a stale expression.";
static const char __pyx_k_Cannot_instantiate_RNNBuilder_di[] = "Cannot instantiate RNNBuilder directly.";
static const char __pyx_k_Do_not_instantiate_ComputationGr[] = "Do not instantiate ComputationGraph directly. Use pycnn.cg()";
static const char __pyx_k_Using_stale_builder_Create_new_g[] = "Using stale builder. Create .new_graph() after computation graph is renewed.";
static const char __pyx_k_Attempt_to_use_a_stale_expressio_2[] = "Attempt to use a stale expression, from a previous Computation Graph.";
static PyObject *__pyx_kp_s_Attempt_to_use_a_stale_expressio;
static PyObject *__pyx_kp_s_Attempt_to_use_a_stale_expressio_2;
static PyObject *__pyx_kp_s_Cannot_instantiate_RNNBuilder_di;
static PyObject *__pyx_kp_s_Do_not_instantiate_ComputationGr;
static PyObject *__pyx_n_s_Exception;
static PyObject *__pyx_n_s_F;
static PyObject *__pyx_n_s_LSTMBuilder;
static PyObject *__pyx_n_s_NotImplementedError;
static PyObject *__pyx_n_s_PrintGraphviz;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_SimpleRNNBuilder;
static PyObject *__pyx_kp_s_Stale_Expression_created_before;
static PyObject *__pyx_kp_s_Unsupported_dimension;
static PyObject *__pyx_kp_s_Using_stale_builder_Create_new_g;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_add_input;
static PyObject *__pyx_n_s_alpha;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_n_s_argv;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_as_array;
static PyObject *__pyx_n_s_backward;
static PyObject *__pyx_n_s_batch;
static PyObject *__pyx_n_s_beta_1;
static PyObject *__pyx_n_s_beta_2;
static PyObject *__pyx_n_s_builder;
static PyObject *__pyx_n_s_c;
static PyObject *__pyx_n_s_cg_version;
static PyObject *__pyx_n_s_d;
static PyObject *__pyx_n_s_d1;
static PyObject *__pyx_n_s_d2;
static PyObject *__pyx_n_s_dim;
static PyObject *__pyx_kp_s_dim_mismatch;
static PyObject *__pyx_n_s_e;
static PyObject *__pyx_n_s_e0;
static PyObject *__pyx_n_s_enumerate;
static PyObject *__pyx_n_s_eps;
static PyObject *__pyx_kp_s_exprssion_s_s;
static PyObject *__pyx_n_s_flatten;
static PyObject *__pyx_n_s_forward;
static PyObject *__pyx_n_s_forward_scalar;
static PyObject *__pyx_n_s_forward_vec;
static PyObject *__pyx_n_s_g;
static PyObject *__pyx_n_s_guard;
static PyObject *__pyx_n_s_h;
static PyObject *__pyx_n_s_hidden_dim;
static PyObject *__pyx_n_s_hinge;
static PyObject *__pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_inc_forward;
static PyObject *__pyx_n_s_inc_forward_scalar;
static PyObject *__pyx_n_s_inc_forward_vec;
static PyObject *__pyx_n_s_incremental_forward;
static PyObject *__pyx_n_s_index;
static PyObject *__pyx_n_s_indices;
static PyObject *__pyx_n_s_init_from_array;
static PyObject *__pyx_n_s_init_row;
static PyObject *__pyx_n_s_initial_state;
static PyObject *__pyx_n_s_initial_state_from_raw_vectors;
static PyObject *__pyx_n_s_input_dim;
static PyObject *__pyx_n_s_k;
static PyObject *__pyx_n_s_lam;
static PyObject *__pyx_n_s_layers;
static PyObject *__pyx_n_s_load_array;
static PyObject *__pyx_n_s_lookup;
static PyObject *__pyx_n_s_lookup_batch;
static PyObject *__pyx_n_s_m;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_matInput;
static PyObject *__pyx_n_s_model;
static PyObject *__pyx_n_s_mom;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_kp_s_name_already_registered;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_npvalue;
static PyObject *__pyx_n_s_nrows;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_n_s_order;
static PyObject *__pyx_n_s_out;
static PyObject *__pyx_n_s_output;
static PyObject *__pyx_n_s_p;
static PyObject *__pyx_n_s_parameter;
static PyObject *__pyx_n_s_pick;
static PyObject *__pyx_n_s_pick_batch;
static PyObject *__pyx_n_s_prev;
static PyObject *__pyx_n_s_prev_state;
static PyObject *__pyx_n_s_pycnn;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_recalculate;
static PyObject *__pyx_n_s_renew;
static PyObject *__pyx_n_s_renew_cg;
static PyObject *__pyx_n_s_reshape;
static PyObject *__pyx_n_s_restrict;
static PyObject *__pyx_n_s_rho;
static PyObject *__pyx_n_s_row;
static PyObject *__pyx_n_s_s;
static PyObject *__pyx_n_s_scalarInput;
static PyObject *__pyx_n_s_scalar_value;
static PyObject *__pyx_n_s_scale;
static PyObject *__pyx_n_s_set;
static PyObject *__pyx_n_s_shape;
static PyObject *__pyx_n_s_size;
static PyObject *__pyx_n_s_state_idx;
static PyObject *__pyx_n_s_states;
static PyObject *__pyx_n_s_status;
static PyObject *__pyx_n_s_stddev;
static PyObject *__pyx_n_s_sys;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_kp_s_too_many_rows;
static PyObject *__pyx_n_s_transduce;
static PyObject *__pyx_n_s_u;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_update_epoch;
static PyObject *__pyx_n_s_v;
static PyObject *__pyx_n_s_val;
static PyObject *__pyx_n_s_vals;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_n_s_vecInput;
static PyObject *__pyx_n_s_vec_value;
static PyObject *__pyx_n_s_vecs;
static PyObject *__pyx_n_s_version;
static PyObject *__pyx_n_s_vs;
static PyObject *__pyx_n_s_vstack;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_xrange;
static PyObject *__pyx_n_s_y;
static int __pyx_pf_5pycnn_10Parameters___cinit__(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_10Parameters_2shape(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_10Parameters_4as_array(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_10Parameters_6load_array(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self, PyObject *__pyx_v_arr); /* proto */
static int __pyx_pf_5pycnn_16LookupParameters___cinit__(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16LookupParameters_2init_from_array(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, PyObject *__pyx_v_arr); /* proto */
static PyObject *__pyx_pf_5pycnn_16LookupParameters_4shape(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16LookupParameters_6__getitem__(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_5pycnn_16LookupParameters_8batch(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, std::vector<unsigned int>  __pyx_v_i); /* proto */
static PyObject *__pyx_pf_5pycnn_16LookupParameters_10init_row(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, unsigned int __pyx_v_i, std::vector<float>  __pyx_v_row); /* proto */
static PyObject *__pyx_pf_5pycnn_16LookupParameters_12as_array(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_5Model___cinit__(struct __pyx_obj_5pycnn_Model *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_5Model_2__init__(struct __pyx_obj_5pycnn_Model *__pyx_v_self); /* proto */
static void __pyx_pf_5pycnn_5Model_4__dealloc__(struct __pyx_obj_5pycnn_Model *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_5Model_6add_parameters(struct __pyx_obj_5pycnn_Model *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_dim, CYTHON_UNUSED PyObject *__pyx_v_scale); /* proto */
static PyObject *__pyx_pf_5pycnn_5Model_8add_lookup_parameters(struct __pyx_obj_5pycnn_Model *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_dim); /* proto */
static PyObject *__pyx_pf_5pycnn_5Model_10__getitem__(struct __pyx_obj_5pycnn_Model *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static int __pyx_pf_5pycnn_5Model_12__contains__(struct __pyx_obj_5pycnn_Model *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_5pycnn_5Model_14save(struct __pyx_obj_5pycnn_Model *__pyx_v_self, std::string __pyx_v_fname); /* proto */
static PyObject *__pyx_pf_5pycnn_5Model_16load(struct __pyx_obj_5pycnn_Model *__pyx_v_self, std::string __pyx_v_fname); /* proto */
static int __pyx_pf_5pycnn_13UnsignedValue___cinit__(struct __pyx_obj_5pycnn_UnsignedValue *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_5pycnn_13UnsignedValue_2set(struct __pyx_obj_5pycnn_UnsignedValue *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_5pycnn_13UnsignedValue_4get(struct __pyx_obj_5pycnn_UnsignedValue *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_10FloatValue___cinit__(struct __pyx_obj_5pycnn_FloatValue *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_5pycnn_10FloatValue_2set(struct __pyx_obj_5pycnn_FloatValue *__pyx_v_self, PyObject *__pyx_v_val); /* proto */
static PyObject *__pyx_pf_5pycnn_10FloatValue_4get(struct __pyx_obj_5pycnn_FloatValue *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_19UnsignedVectorValue___cinit__(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self, PyObject *__pyx_v_vals); /* proto */
static void __pyx_pf_5pycnn_19UnsignedVectorValue_2__dealloc__(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_19UnsignedVectorValue_4set(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self, PyObject *__pyx_v_newval); /* proto */
static PyObject *__pyx_pf_5pycnn_19UnsignedVectorValue_6get(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_19UnsignedVectorValue_8size(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_16FloatVectorValue___cinit__(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self, PyObject *__pyx_v_vals); /* proto */
static void __pyx_pf_5pycnn_16FloatVectorValue_2__dealloc__(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16FloatVectorValue_4set(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self, PyObject *__pyx_v_newval); /* proto */
static PyObject *__pyx_pf_5pycnn_16FloatVectorValue_6get(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16FloatVectorValue_8size(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_cg_version(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5pycnn_2renew_cg(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5pycnn_4cg(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static int __pyx_pf_5pycnn_16ComputationGraph___cinit__(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_v_guard); /* proto */
static void __pyx_pf_5pycnn_16ComputationGraph_2__dealloc__(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_4renew(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_6version(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_8parameters(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_obj_5pycnn_Parameters *__pyx_v_params); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_10forward_scalar(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_12inc_forward_scalar(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_14forward_vec(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_16inc_forward_vec(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_18forward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_20inc_forward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_22backward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16ComputationGraph_24PrintGraphviz(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_10Expression___cinit__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_2__repr__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_4__str__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_6__getitem__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_8__getslice__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_v_i, int __pyx_v_j); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_10scalar_value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, PyObject *__pyx_v_recalculate); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_12vec_value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, PyObject *__pyx_v_recalculate); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_14npvalue(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, PyObject *__pyx_v_recalculate); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_16value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, PyObject *__pyx_v_recalculate); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_18forward(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, PyObject *__pyx_v_recalculate); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_20backward(struct __pyx_obj_5pycnn_Expression *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_22__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_24__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_5pycnn_10Expression_26__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
#endif
static PyObject *__pyx_pf_5pycnn_10Expression_28__neg__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_10Expression_30__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_5pycnn_6parameter(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Parameters *__pyx_v_p); /* proto */
static int __pyx_pf_5pycnn_16_inputExpression___cinit__(struct __pyx_obj_5pycnn__inputExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, float __pyx_v_s); /* proto */
static PyObject *__pyx_pf_5pycnn_16_inputExpression_2set(struct __pyx_obj_5pycnn__inputExpression *__pyx_v_self, float __pyx_v_s); /* proto */
static PyObject *__pyx_pf_5pycnn_8scalarInput(CYTHON_UNUSED PyObject *__pyx_self, float __pyx_v_s); /* proto */
static int __pyx_pf_5pycnn_19_vecInputExpression___cinit__(struct __pyx_obj_5pycnn__vecInputExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, std::vector<float>  __pyx_v_val, PyObject *__pyx_v_dim); /* proto */
static PyObject *__pyx_pf_5pycnn_19_vecInputExpression_2set(struct __pyx_obj_5pycnn__vecInputExpression *__pyx_v_self, std::vector<float>  __pyx_v_data); /* proto */
static PyObject *__pyx_pf_5pycnn_10vecInput(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_dim); /* proto */
static PyObject *__pyx_pf_5pycnn_12matInput(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_d1, int __pyx_v_d2); /* proto */
static int __pyx_pf_5pycnn_17_lookupExpression___cinit__(struct __pyx_obj_5pycnn__lookupExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, unsigned int __pyx_v_index, PyObject *__pyx_v_update); /* proto */
static PyObject *__pyx_pf_5pycnn_17_lookupExpression_2set(struct __pyx_obj_5pycnn__lookupExpression *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static int __pyx_pf_5pycnn_22_lookupBatchExpression___cinit__(struct __pyx_obj_5pycnn__lookupBatchExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, std::vector<unsigned int>  __pyx_v_indices, PyObject *__pyx_v_update); /* proto */
static PyObject *__pyx_pf_5pycnn_22_lookupBatchExpression_2set(struct __pyx_obj_5pycnn__lookupBatchExpression *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_5pycnn_14lookup(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, unsigned int __pyx_v_index, PyObject *__pyx_v_update); /* proto */
static PyObject *__pyx_pf_5pycnn_16lookup_batch(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, std::vector<unsigned int>  __pyx_v_indices, PyObject *__pyx_v_update); /* proto */
static int __pyx_pf_5pycnn_17_pickerExpression___cinit__(struct __pyx_obj_5pycnn__pickerExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, unsigned int __pyx_v_index); /* proto */
static PyObject *__pyx_pf_5pycnn_17_pickerExpression_2set_index(struct __pyx_obj_5pycnn__pickerExpression *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_5pycnn_18pick(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, unsigned int __pyx_v_index); /* proto */
static int __pyx_pf_5pycnn_22_pickerBatchExpression___cinit__(struct __pyx_obj_5pycnn__pickerBatchExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, std::vector<unsigned int>  __pyx_v_indices); /* proto */
static PyObject *__pyx_pf_5pycnn_22_pickerBatchExpression_2set_index(struct __pyx_obj_5pycnn__pickerBatchExpression *__pyx_v_self, PyObject *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_5pycnn_20pick_batch(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, std::vector<unsigned int>  __pyx_v_indices); /* proto */
static int __pyx_pf_5pycnn_16_hingeExpression___cinit__(struct __pyx_obj_5pycnn__hingeExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_index, float __pyx_v_m); /* proto */
static PyObject *__pyx_pf_5pycnn_16_hingeExpression_2set_index(struct __pyx_obj_5pycnn__hingeExpression *__pyx_v_self, unsigned int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_5pycnn_22hinge(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_index, float __pyx_v_m); /* proto */
static PyObject *__pyx_pf_5pycnn_24cdiv(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_26colwise_add(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_28trace_of_product(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_30cwise_multiply(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_32dot_product(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_34squared_distance(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_36l1_distance(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_38binary_log_loss(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_40conv1d_narrow(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_42conv1d_wide(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_44tanh(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_46exp(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_48square(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_50cube(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_52log(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_54logistic(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_56rectify(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_58log_softmax(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, PyObject *__pyx_v_restrict); /* proto */
static PyObject *__pyx_pf_5pycnn_60softmax(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_62softsign(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_64bmin(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_66bmax(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_68transpose(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_70sum_cols(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_72sum_batches(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_74fold_rows(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_nrows); /* proto */
static PyObject *__pyx_pf_5pycnn_76pairwise_rank_loss(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, float __pyx_v_m); /* proto */
static PyObject *__pyx_pf_5pycnn_78poisson_loss(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_y); /* proto */
static PyObject *__pyx_pf_5pycnn_80huber_distance(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, float __pyx_v_c); /* proto */
static PyObject *__pyx_pf_5pycnn_82kmax_pooling(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_k); /* proto */
static PyObject *__pyx_pf_5pycnn_84pickneglogsoftmax(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_v); /* proto */
static PyObject *__pyx_pf_5pycnn_86pickneglogsoftmax_batch(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, std::vector<unsigned int>  __pyx_v_vs); /* proto */
static PyObject *__pyx_pf_5pycnn_88kmh_ngram(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_v); /* proto */
static PyObject *__pyx_pf_5pycnn_90pickrange(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_v, unsigned int __pyx_v_u); /* proto */
static PyObject *__pyx_pf_5pycnn_92noise(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, float __pyx_v_stddev); /* proto */
static PyObject *__pyx_pf_5pycnn_94dropout(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, float __pyx_v_p); /* proto */
static PyObject *__pyx_pf_5pycnn_96block_dropout(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, float __pyx_v_p); /* proto */
static PyObject *__pyx_pf_5pycnn_98reshape(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, PyObject *__pyx_v_d); /* proto */
static PyObject *__pyx_pf_5pycnn_100esum(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xs); /* proto */
static PyObject *__pyx_pf_5pycnn_102average(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xs); /* proto */
static PyObject *__pyx_pf_5pycnn_104emax(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xs); /* proto */
static PyObject *__pyx_pf_5pycnn_106concatenate_cols(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xs); /* proto */
static PyObject *__pyx_pf_5pycnn_108concatenate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xs); /* proto */
static PyObject *__pyx_pf_5pycnn_110affine_transform(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_exprs); /* proto */
static PyObject *__pyx_pf_5pycnn_10RNNBuilder___cinit_(CYTHON_UNUSED struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, CYTHON_UNUSED unsigned int __pyx_v_layers, CYTHON_UNUSED unsigned int __pyx_v_input_dim, CYTHON_UNUSED unsigned int __pyx_v_hidden_dim, CYTHON_UNUSED struct __pyx_obj_5pycnn_Model *__pyx_v_model); /* proto */
static void __pyx_pf_5pycnn_10RNNBuilder_2__dealloc__(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_10RNNBuilder_4initial_state(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, PyObject *__pyx_v_vecs); /* proto */
static PyObject *__pyx_pf_5pycnn_10RNNBuilder_6initial_state_from_raw_vectors(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, PyObject *__pyx_v_vecs); /* proto */
static int __pyx_pf_5pycnn_16SimpleRNNBuilder___cinit__(struct __pyx_obj_5pycnn_SimpleRNNBuilder *__pyx_v_self, unsigned int __pyx_v_layers, unsigned int __pyx_v_input_dim, unsigned int __pyx_v_hidden_dim, struct __pyx_obj_5pycnn_Model *__pyx_v_model); /* proto */
static PyObject *__pyx_pf_5pycnn_16SimpleRNNBuilder_2whoami(CYTHON_UNUSED struct __pyx_obj_5pycnn_SimpleRNNBuilder *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_11LSTMBuilder___cinit__(struct __pyx_obj_5pycnn_LSTMBuilder *__pyx_v_self, unsigned int __pyx_v_layers, unsigned int __pyx_v_input_dim, unsigned int __pyx_v_hidden_dim, struct __pyx_obj_5pycnn_Model *__pyx_v_model); /* proto */
static PyObject *__pyx_pf_5pycnn_11LSTMBuilder_2whoami(CYTHON_UNUSED struct __pyx_obj_5pycnn_LSTMBuilder *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_8RNNState___cinit__(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_builder, int __pyx_v_state_idx, struct __pyx_obj_5pycnn_RNNState *__pyx_v_prev_state, struct __pyx_obj_5pycnn_Expression *__pyx_v_out); /* proto */
static PyObject *__pyx_pf_5pycnn_8RNNState_2add_input(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_8RNNState_4add_inputs(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, PyObject *__pyx_v_xs); /* proto */
static PyObject *__pyx_pf_5pycnn_8RNNState_6transduce(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, PyObject *__pyx_v_xs); /* proto */
static PyObject *__pyx_pf_5pycnn_8RNNState_8output(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_8RNNState_10h(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_8RNNState_12s(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_8RNNState_14prev(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_8RNNState_16b(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_15StackedRNNState___init__(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self, PyObject *__pyx_v_states, struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_prev); /* proto */
static PyObject *__pyx_pf_5pycnn_15StackedRNNState_2add_input(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_5pycnn_15StackedRNNState_4output(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_15StackedRNNState_6prev(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_15StackedRNNState_8h(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_15StackedRNNState_10s(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_15StackedRNNState_12add_inputs(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self, PyObject *__pyx_v_xs); /* proto */
static int __pyx_pf_5pycnn_16SimpleSGDTrainer___cinit__(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, struct __pyx_obj_5pycnn_Model *__pyx_v_m, float __pyx_v_lam, float __pyx_v_e0); /* proto */
static void __pyx_pf_5pycnn_16SimpleSGDTrainer_2__dealloc__(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_16SimpleSGDTrainer_4update(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, float __pyx_v_s); /* proto */
static PyObject *__pyx_pf_5pycnn_16SimpleSGDTrainer_6update_epoch(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, float __pyx_v_r); /* proto */
static PyObject *__pyx_pf_5pycnn_16SimpleSGDTrainer_8status(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_18MomentumSGDTrainer___cinit__(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, struct __pyx_obj_5pycnn_Model *__pyx_v_m, float __pyx_v_lam, float __pyx_v_e0, float __pyx_v_mom); /* proto */
static void __pyx_pf_5pycnn_18MomentumSGDTrainer_2__dealloc__(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_18MomentumSGDTrainer_4update(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, float __pyx_v_s); /* proto */
static PyObject *__pyx_pf_5pycnn_18MomentumSGDTrainer_6update_epoch(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, float __pyx_v_r); /* proto */
static PyObject *__pyx_pf_5pycnn_18MomentumSGDTrainer_8status(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_14AdagradTrainer___cinit__(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, struct __pyx_obj_5pycnn_Model *__pyx_v_m, float __pyx_v_lam, float __pyx_v_e0, float __pyx_v_eps); /* proto */
static void __pyx_pf_5pycnn_14AdagradTrainer_2__dealloc__(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_14AdagradTrainer_4update(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, float __pyx_v_s); /* proto */
static PyObject *__pyx_pf_5pycnn_14AdagradTrainer_6update_epoch(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, float __pyx_v_r); /* proto */
static PyObject *__pyx_pf_5pycnn_14AdagradTrainer_8status(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_15AdadeltaTrainer___cinit__(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, struct __pyx_obj_5pycnn_Model *__pyx_v_m, float __pyx_v_lam, float __pyx_v_eps, float __pyx_v_rho); /* proto */
static void __pyx_pf_5pycnn_15AdadeltaTrainer_2__dealloc__(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_15AdadeltaTrainer_4update(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, float __pyx_v_s); /* proto */
static PyObject *__pyx_pf_5pycnn_15AdadeltaTrainer_6update_epoch(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, float __pyx_v_r); /* proto */
static PyObject *__pyx_pf_5pycnn_15AdadeltaTrainer_8status(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self); /* proto */
static int __pyx_pf_5pycnn_11AdamTrainer___cinit__(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, struct __pyx_obj_5pycnn_Model *__pyx_v_m, float __pyx_v_lam, float __pyx_v_alpha, float __pyx_v_beta_1, float __pyx_v_beta_2, PyObject *__pyx_v_eps); /* proto */
static void __pyx_pf_5pycnn_11AdamTrainer_2__dealloc__(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_5pycnn_11AdamTrainer_4update(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, float __pyx_v_s); /* proto */
static PyObject *__pyx_pf_5pycnn_11AdamTrainer_6update_epoch(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, float __pyx_v_r); /* proto */
static PyObject *__pyx_pf_5pycnn_11AdamTrainer_8status(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self); /* proto */
static PyObject *__pyx_tp_new_5pycnn_Parameters(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_LookupParameters(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_Model(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_UnsignedValue(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_FloatValue(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_UnsignedVectorValue(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_FloatVectorValue(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_ComputationGraph(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_Expression(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn__inputExpression(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn__vecInputExpression(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn__lookupExpression(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn__lookupBatchExpression(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn__pickerExpression(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn__pickerBatchExpression(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn__hingeExpression(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_RNNBuilder(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_SimpleRNNBuilder(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_LSTMBuilder(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_RNNState(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_StackedRNNState(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_SimpleSGDTrainer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_MomentumSGDTrainer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_AdagradTrainer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_AdadeltaTrainer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5pycnn_AdamTrainer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_float_1eneg_8;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_slice__4;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_codeobj__24;
static PyObject *__pyx_codeobj__25;
static PyObject *__pyx_codeobj__27;
static PyObject *__pyx_codeobj__29;
static PyObject *__pyx_codeobj__31;
static PyObject *__pyx_codeobj__33;
static PyObject *__pyx_codeobj__35;
static PyObject *__pyx_codeobj__37;
static PyObject *__pyx_codeobj__39;
static PyObject *__pyx_codeobj__41;
static PyObject *__pyx_codeobj__43;

/* "pycnn.pyx":35
 * 
 * 
 * cdef init(random_seed=None):             # <<<<<<<<<<<<<<
 *     cdef int argc = len(sys.argv)
 *     cdef char** c_argv
 */

static PyObject *__pyx_f_5pycnn_init(struct __pyx_opt_args_5pycnn_init *__pyx_optional_args) {
  PyObject *__pyx_v_random_seed = ((PyObject *)Py_None);
  int __pyx_v_argc;
  char **__pyx_v_c_argv;
  PyObject *__pyx_v_args = NULL;
  PyObject *__pyx_v_idx = NULL;
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  unsigned int __pyx_t_11;
  __Pyx_RefNannySetupContext("init", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_random_seed = __pyx_optional_args->random_seed;
    }
  }
  __Pyx_INCREF(__pyx_v_random_seed);

  /* "pycnn.pyx":36
 * 
 * cdef init(random_seed=None):
 *     cdef int argc = len(sys.argv)             # <<<<<<<<<<<<<<
 *     cdef char** c_argv
 *     args = [bytes(x) for x in sys.argv]
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_sys); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_argv); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_3 == -1)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_argc = __pyx_t_3;

  /* "pycnn.pyx":38
 *     cdef int argc = len(sys.argv)
 *     cdef char** c_argv
 *     args = [bytes(x) for x in sys.argv]             # <<<<<<<<<<<<<<
 *     c_argv = <char**>malloc(sizeof(char*) * len(args)) # TODO check failure?
 *     for idx, s in enumerate(args):
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_sys); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_argv); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
    __pyx_t_1 = __pyx_t_4; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 38, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 38, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 38, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 38, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 38, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_5(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 38, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_x);
    __pyx_t_6 = __Pyx_PyObject_Call(((PyObject *)(&PyBytes_Type)), __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_6))) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_args = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pycnn.pyx":39
 *     cdef char** c_argv
 *     args = [bytes(x) for x in sys.argv]
 *     c_argv = <char**>malloc(sizeof(char*) * len(args)) # TODO check failure?             # <<<<<<<<<<<<<<
 *     for idx, s in enumerate(args):
 *         c_argv[idx] = s
 */
  __pyx_t_3 = PyList_GET_SIZE(__pyx_v_args); if (unlikely(__pyx_t_3 == -1)) __PYX_ERR(0, 39, __pyx_L1_error)
  __pyx_v_c_argv = ((char **)malloc(((sizeof(char *)) * __pyx_t_3)));

  /* "pycnn.pyx":40
 *     args = [bytes(x) for x in sys.argv]
 *     c_argv = <char**>malloc(sizeof(char*) * len(args)) # TODO check failure?
 *     for idx, s in enumerate(args):             # <<<<<<<<<<<<<<
 *         c_argv[idx] = s
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_2 = __pyx_int_0;
  __pyx_t_1 = __pyx_v_args; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
  for (;;) {
    if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_6 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_6); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 40, __pyx_L1_error)
    #else
    __pyx_t_6 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 40, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_s, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_idx, __pyx_t_2);
    __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 40, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "pycnn.pyx":41
 *     c_argv = <char**>malloc(sizeof(char*) * len(args)) # TODO check failure?
 *     for idx, s in enumerate(args):
 *         c_argv[idx] = s             # <<<<<<<<<<<<<<
 * 
 *     if random_seed is None:
 */
    __pyx_t_7 = __Pyx_PyObject_AsString(__pyx_v_s); if (unlikely((!__pyx_t_7) && PyErr_Occurred())) __PYX_ERR(0, 41, __pyx_L1_error)
    __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_v_idx); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 41, __pyx_L1_error)
    (__pyx_v_c_argv[__pyx_t_8]) = __pyx_t_7;

    /* "pycnn.pyx":40
 *     args = [bytes(x) for x in sys.argv]
 *     c_argv = <char**>malloc(sizeof(char*) * len(args)) # TODO check failure?
 *     for idx, s in enumerate(args):             # <<<<<<<<<<<<<<
 *         c_argv[idx] = s
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pycnn.pyx":43
 *         c_argv[idx] = s
 * 
 *     if random_seed is None:             # <<<<<<<<<<<<<<
 *         pycnn.Initialize(argc,c_argv, 0)
 *     else:
 */
  __pyx_t_9 = (__pyx_v_random_seed == Py_None);
  __pyx_t_10 = (__pyx_t_9 != 0);
  if (__pyx_t_10) {

    /* "pycnn.pyx":44
 * 
 *     if random_seed is None:
 *         pycnn.Initialize(argc,c_argv, 0)             # <<<<<<<<<<<<<<
 *     else:
 *         if random_seed == 0: random_seed = 1
 */
    cnn::Initialize(__pyx_v_argc, __pyx_v_c_argv, 0);

    /* "pycnn.pyx":43
 *         c_argv[idx] = s
 * 
 *     if random_seed is None:             # <<<<<<<<<<<<<<
 *         pycnn.Initialize(argc,c_argv, 0)
 *     else:
 */
    goto __pyx_L7;
  }

  /* "pycnn.pyx":46
 *         pycnn.Initialize(argc,c_argv, 0)
 *     else:
 *         if random_seed == 0: random_seed = 1             # <<<<<<<<<<<<<<
 *         pycnn.Initialize(argc,c_argv, random_seed)
 *     free(c_argv)
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_v_random_seed, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_10) {
      __Pyx_INCREF(__pyx_int_1);
      __Pyx_DECREF_SET(__pyx_v_random_seed, __pyx_int_1);
    }

    /* "pycnn.pyx":47
 *     else:
 *         if random_seed == 0: random_seed = 1
 *         pycnn.Initialize(argc,c_argv, random_seed)             # <<<<<<<<<<<<<<
 *     free(c_argv)
 * 
 */
    __pyx_t_11 = __Pyx_PyInt_As_unsigned_int(__pyx_v_random_seed); if (unlikely((__pyx_t_11 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 47, __pyx_L1_error)
    cnn::Initialize(__pyx_v_argc, __pyx_v_c_argv, __pyx_t_11);
  }
  __pyx_L7:;

  /* "pycnn.pyx":48
 *         if random_seed == 0: random_seed = 1
 *         pycnn.Initialize(argc,c_argv, random_seed)
 *     free(c_argv)             # <<<<<<<<<<<<<<
 * 
 * init() # TODO: allow different random seeds
 */
  free(__pyx_v_c_argv);

  /* "pycnn.pyx":35
 * 
 * 
 * cdef init(random_seed=None):             # <<<<<<<<<<<<<<
 *     cdef int argc = len(sys.argv)
 *     cdef char** c_argv
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_idx);
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_random_seed);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":52
 * init() # TODO: allow different random seeds
 * 
 * cdef CDim Dim(dim):             # <<<<<<<<<<<<<<
 *     """
 *     dim: either a tuple or an int
 */

static cnn::Dim __pyx_f_5pycnn_Dim(PyObject *__pyx_v_dim) {
  std::vector<long>  __pyx_v_cvec;
  PyObject *__pyx_v_d = NULL;
  cnn::Dim __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  long __pyx_t_7;
  cnn::Dim __pyx_t_8;
  int __pyx_t_9;
  __Pyx_RefNannySetupContext("Dim", 0);

  /* "pycnn.pyx":57
 *     """
 *     cdef vector[long] cvec
 *     if isinstance(dim, tuple):             # <<<<<<<<<<<<<<
 *         for d in dim: cvec.push_back(d)
 *         #if len(dim) == 1: return CDim(dim[0])
 */
  __pyx_t_1 = PyTuple_Check(__pyx_v_dim); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pycnn.pyx":58
 *     cdef vector[long] cvec
 *     if isinstance(dim, tuple):
 *         for d in dim: cvec.push_back(d)             # <<<<<<<<<<<<<<
 *         #if len(dim) == 1: return CDim(dim[0])
 *         #elif len(dim) == 2: return CDim(dim[0],dim[1])
 */
    if (likely(PyList_CheckExact(__pyx_v_dim)) || PyTuple_CheckExact(__pyx_v_dim)) {
      __pyx_t_3 = __pyx_v_dim; __Pyx_INCREF(__pyx_t_3); __pyx_t_4 = 0;
      __pyx_t_5 = NULL;
    } else {
      __pyx_t_4 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_dim); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 58, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 58, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_5)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_6 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_6); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 58, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 58, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        } else {
          if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_4); __Pyx_INCREF(__pyx_t_6); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 58, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_3, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 58, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        }
      } else {
        __pyx_t_6 = __pyx_t_5(__pyx_t_3);
        if (unlikely(!__pyx_t_6)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 58, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_6);
      }
      __Pyx_XDECREF_SET(__pyx_v_d, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_7 = __Pyx_PyInt_As_long(__pyx_v_d); if (unlikely((__pyx_t_7 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 58, __pyx_L1_error)
      try {
        __pyx_v_cvec.push_back(__pyx_t_7);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 58, __pyx_L1_error)
      }
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":63
 *         #else:
 *         #    raise "Unsupported dimension",dim
 *         return CDim(cvec)             # <<<<<<<<<<<<<<
 *     # hope it's a number. TODO: error checking / exception
 *     if isinstance(dim, (int, float)):
 */
    try {
      __pyx_t_8 = cnn::Dim(__pyx_v_cvec);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 63, __pyx_L1_error)
    }
    __pyx_r = __pyx_t_8;
    goto __pyx_L0;

    /* "pycnn.pyx":57
 *     """
 *     cdef vector[long] cvec
 *     if isinstance(dim, tuple):             # <<<<<<<<<<<<<<
 *         for d in dim: cvec.push_back(d)
 *         #if len(dim) == 1: return CDim(dim[0])
 */
  }

  /* "pycnn.pyx":65
 *         return CDim(cvec)
 *     # hope it's a number. TODO: error checking / exception
 *     if isinstance(dim, (int, float)):             # <<<<<<<<<<<<<<
 *         cvec.push_back(dim)
 *         #return CDim(dim)
 */
  __pyx_t_1 = PyInt_Check(__pyx_v_dim); 
  __pyx_t_9 = (__pyx_t_1 != 0);
  if (!__pyx_t_9) {
  } else {
    __pyx_t_2 = __pyx_t_9;
    goto __pyx_L7_bool_binop_done;
  }
  __pyx_t_9 = PyFloat_Check(__pyx_v_dim); 
  __pyx_t_1 = (__pyx_t_9 != 0);
  __pyx_t_2 = __pyx_t_1;
  __pyx_L7_bool_binop_done:;
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "pycnn.pyx":66
 *     # hope it's a number. TODO: error checking / exception
 *     if isinstance(dim, (int, float)):
 *         cvec.push_back(dim)             # <<<<<<<<<<<<<<
 *         #return CDim(dim)
 *         return CDim(cvec)
 */
    __pyx_t_7 = __Pyx_PyInt_As_long(__pyx_v_dim); if (unlikely((__pyx_t_7 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 66, __pyx_L1_error)
    try {
      __pyx_v_cvec.push_back(__pyx_t_7);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 66, __pyx_L1_error)
    }

    /* "pycnn.pyx":68
 *         cvec.push_back(dim)
 *         #return CDim(dim)
 *         return CDim(cvec)             # <<<<<<<<<<<<<<
 *     raise "Unsupported dimension",dim
 * 
 */
    try {
      __pyx_t_8 = cnn::Dim(__pyx_v_cvec);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 68, __pyx_L1_error)
    }
    __pyx_r = __pyx_t_8;
    goto __pyx_L0;

    /* "pycnn.pyx":65
 *         return CDim(cvec)
 *     # hope it's a number. TODO: error checking / exception
 *     if isinstance(dim, (int, float)):             # <<<<<<<<<<<<<<
 *         cvec.push_back(dim)
 *         #return CDim(dim)
 */
  }

  /* "pycnn.pyx":69
 *         #return CDim(dim)
 *         return CDim(cvec)
 *     raise "Unsupported dimension",dim             # <<<<<<<<<<<<<<
 * 
 * cdef c_tensor_as_np(CTensor &t):
 */
  __Pyx_Raise(__pyx_kp_s_Unsupported_dimension, __pyx_v_dim, 0, 0);
  __PYX_ERR(0, 69, __pyx_L1_error)

  /* "pycnn.pyx":52
 * init() # TODO: allow different random seeds
 * 
 * cdef CDim Dim(dim):             # <<<<<<<<<<<<<<
 *     """
 *     dim: either a tuple or an int
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_WriteUnraisable("pycnn.Dim", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":71
 *     raise "Unsupported dimension",dim
 * 
 * cdef c_tensor_as_np(CTensor &t):             # <<<<<<<<<<<<<<
 *     # TODO: make more efficient, with less copy
 *     arr = np.array(c_as_vector(t))
 */

static PyObject *__pyx_f_5pycnn_c_tensor_as_np(cnn::Tensor &__pyx_v_t) {
  PyObject *__pyx_v_arr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("c_tensor_as_np", 0);

  /* "pycnn.pyx":73
 * cdef c_tensor_as_np(CTensor &t):
 *     # TODO: make more efficient, with less copy
 *     arr = np.array(c_as_vector(t))             # <<<<<<<<<<<<<<
 *     if t.d.ndims() == 1: return arr
 *     else: return arr.reshape(t.d.rows(), t.d.cols(),order='F')
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __pyx_convert_vector_to_py_float(cnn::as_vector(__pyx_v_t)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 73, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 73, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 73, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_arr = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pycnn.pyx":74
 *     # TODO: make more efficient, with less copy
 *     arr = np.array(c_as_vector(t))
 *     if t.d.ndims() == 1: return arr             # <<<<<<<<<<<<<<
 *     else: return arr.reshape(t.d.rows(), t.d.cols(),order='F')
 * 
 */
  __pyx_t_6 = ((__pyx_v_t.d.ndims() == 1) != 0);
  if (__pyx_t_6) {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_v_arr);
    __pyx_r = __pyx_v_arr;
    goto __pyx_L0;
  }

  /* "pycnn.pyx":75
 *     arr = np.array(c_as_vector(t))
 *     if t.d.ndims() == 1: return arr
 *     else: return arr.reshape(t.d.rows(), t.d.cols(),order='F')             # <<<<<<<<<<<<<<
 * 
 * # {{{ Model / Parameters
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_arr, __pyx_n_s_reshape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t.d.rows()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_t.d.cols()); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_5);
    __pyx_t_3 = 0;
    __pyx_t_5 = 0;
    __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_order, __pyx_n_s_F) < 0) __PYX_ERR(0, 75, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "pycnn.pyx":71
 *     raise "Unsupported dimension",dim
 * 
 * cdef c_tensor_as_np(CTensor &t):             # <<<<<<<<<<<<<<
 *     # TODO: make more efficient, with less copy
 *     arr = np.array(c_as_vector(t))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.c_tensor_as_np", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_arr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":80
 * cdef class Parameters:
 *     cdef CParameters *thisptr
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 *     @staticmethod
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_10Parameters_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_10Parameters_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_5pycnn_10Parameters___cinit__(((struct __pyx_obj_5pycnn_Parameters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_10Parameters___cinit__(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":81
 *     cdef CParameters *thisptr
 *     def __cinit__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     cdef wrap_ptr(CParameters* ptr):
 */
  __pyx_v_self->thisptr = NULL;

  /* "pycnn.pyx":80
 * cdef class Parameters:
 *     cdef CParameters *thisptr
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 *     @staticmethod
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":83
 *         self.thisptr = NULL
 *     @staticmethod
 *     cdef wrap_ptr(CParameters* ptr):             # <<<<<<<<<<<<<<
 *         self = Parameters()
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_5pycnn_10Parameters_wrap_ptr(cnn::Parameters *__pyx_v_ptr) {
  struct __pyx_obj_5pycnn_Parameters *__pyx_v_self = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_ptr", 0);

  /* "pycnn.pyx":84
 *     @staticmethod
 *     cdef wrap_ptr(CParameters* ptr):
 *         self = Parameters()             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         return self
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_Parameters), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_self = ((struct __pyx_obj_5pycnn_Parameters *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":85
 *     cdef wrap_ptr(CParameters* ptr):
 *         self = Parameters()
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pycnn.pyx":86
 *         self = Parameters()
 *         self.thisptr = ptr
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cpdef shape(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "pycnn.pyx":83
 *         self.thisptr = NULL
 *     @staticmethod
 *     cdef wrap_ptr(CParameters* ptr):             # <<<<<<<<<<<<<<
 *         self = Parameters()
 *         self.thisptr = ptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Parameters.wrap_ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":88
 *         return self
 * 
 *     cpdef shape(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr.dim.ndims() == 1: return (self.thisptr.dim.rows())
 *         return (self.thisptr.dim.rows(), self.thisptr.dim.cols())
 */

static PyObject *__pyx_pw_5pycnn_10Parameters_3shape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_10Parameters_shape(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("shape", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 88, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10Parameters_3shape)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 88, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 88, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":89
 * 
 *     cpdef shape(self):
 *         if self.thisptr.dim.ndims() == 1: return (self.thisptr.dim.rows())             # <<<<<<<<<<<<<<
 *         return (self.thisptr.dim.rows(), self.thisptr.dim.cols())
 * 
 */
  __pyx_t_5 = ((__pyx_v_self->thisptr->dim.ndims() == 1) != 0);
  if (__pyx_t_5) {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->dim.rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 89, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "pycnn.pyx":90
 *     cpdef shape(self):
 *         if self.thisptr.dim.ndims() == 1: return (self.thisptr.dim.rows())
 *         return (self.thisptr.dim.rows(), self.thisptr.dim.cols())             # <<<<<<<<<<<<<<
 * 
 *     cpdef as_array(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->dim.rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->dim.cols()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":88
 *         return self
 * 
 *     cpdef shape(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr.dim.ndims() == 1: return (self.thisptr.dim.rows())
 *         return (self.thisptr.dim.rows(), self.thisptr.dim.cols())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.Parameters.shape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Parameters_3shape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Parameters_3shape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("shape (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Parameters_2shape(((struct __pyx_obj_5pycnn_Parameters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Parameters_2shape(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("shape", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_10Parameters_shape(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Parameters.shape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":92
 *         return (self.thisptr.dim.rows(), self.thisptr.dim.cols())
 * 
 *     cpdef as_array(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return as a numpy array.
 */

static PyObject *__pyx_pw_5pycnn_10Parameters_5as_array(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_10Parameters_as_array(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("as_array", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_as_array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 92, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10Parameters_5as_array)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 92, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 92, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":97
 *         """
 *         cdef CTensor t
 *         return c_tensor_as_np(self.thisptr.values)             # <<<<<<<<<<<<<<
 * 
 *     # TODO: make more efficient
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_c_tensor_as_np(__pyx_v_self->thisptr->values); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":92
 *         return (self.thisptr.dim.rows(), self.thisptr.dim.cols())
 * 
 *     cpdef as_array(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return as a numpy array.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.Parameters.as_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Parameters_5as_array(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_5pycnn_10Parameters_4as_array[] = "\n        Return as a numpy array.\n        ";
static PyObject *__pyx_pw_5pycnn_10Parameters_5as_array(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("as_array (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Parameters_4as_array(((struct __pyx_obj_5pycnn_Parameters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Parameters_4as_array(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("as_array", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_10Parameters_as_array(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Parameters.as_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":100
 * 
 *     # TODO: make more efficient
 *     cpdef load_array(self, arr):             # <<<<<<<<<<<<<<
 *         cdef CTensor t
 *         cdef float* vals
 */

static PyObject *__pyx_pw_5pycnn_10Parameters_7load_array(PyObject *__pyx_v_self, PyObject *__pyx_v_arr); /*proto*/
static PyObject *__pyx_f_5pycnn_10Parameters_load_array(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self, PyObject *__pyx_v_arr, int __pyx_skip_dispatch) {
  cnn::Tensor __pyx_v_t;
  float *__pyx_v_vals;
  PyObject *__pyx_v_shape = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  cnn::Tensor __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  float *__pyx_t_10;
  PyObject *(*__pyx_t_11)(PyObject *);
  float __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  __Pyx_RefNannySetupContext("load_array", 0);
  __Pyx_INCREF(__pyx_v_arr);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_load_array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10Parameters_7load_array)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_arr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 100, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 100, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_arr);
        __Pyx_GIVEREF(__pyx_v_arr);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_arr);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 100, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":103
 *         cdef CTensor t
 *         cdef float* vals
 *         t = self.thisptr.values             # <<<<<<<<<<<<<<
 *         shape = arr.shape
 *         if len(shape) == 1:
 */
  __pyx_t_6 = __pyx_v_self->thisptr->values;
  __pyx_v_t = __pyx_t_6;

  /* "pycnn.pyx":104
 *         cdef float* vals
 *         t = self.thisptr.values
 *         shape = arr.shape             # <<<<<<<<<<<<<<
 *         if len(shape) == 1:
 *             assert(t.d.ndims() == 1)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_arr, __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_shape = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pycnn.pyx":105
 *         t = self.thisptr.values
 *         shape = arr.shape
 *         if len(shape) == 1:             # <<<<<<<<<<<<<<
 *             assert(t.d.ndims() == 1)
 *             assert(t.d.size() == arr.size)
 */
  __pyx_t_7 = PyObject_Length(__pyx_v_shape); if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 105, __pyx_L1_error)
  __pyx_t_8 = ((__pyx_t_7 == 1) != 0);
  if (__pyx_t_8) {

    /* "pycnn.pyx":106
 *         shape = arr.shape
 *         if len(shape) == 1:
 *             assert(t.d.ndims() == 1)             # <<<<<<<<<<<<<<
 *             assert(t.d.size() == arr.size)
 *         if len(shape) == 2:
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!((__pyx_v_t.d.ndims() == 1) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        __PYX_ERR(0, 106, __pyx_L1_error)
      }
    }
    #endif

    /* "pycnn.pyx":107
 *         if len(shape) == 1:
 *             assert(t.d.ndims() == 1)
 *             assert(t.d.size() == arr.size)             # <<<<<<<<<<<<<<
 *         if len(shape) == 2:
 *             assert(t.d.rows() == shape[0] and t.d.cols() == shape[1])
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_t.d.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 107, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_arr, __pyx_n_s_size); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 107, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 107, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 107, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_8)) {
        PyErr_SetNone(PyExc_AssertionError);
        __PYX_ERR(0, 107, __pyx_L1_error)
      }
    }
    #endif

    /* "pycnn.pyx":105
 *         t = self.thisptr.values
 *         shape = arr.shape
 *         if len(shape) == 1:             # <<<<<<<<<<<<<<
 *             assert(t.d.ndims() == 1)
 *             assert(t.d.size() == arr.size)
 */
  }

  /* "pycnn.pyx":108
 *             assert(t.d.ndims() == 1)
 *             assert(t.d.size() == arr.size)
 *         if len(shape) == 2:             # <<<<<<<<<<<<<<
 *             assert(t.d.rows() == shape[0] and t.d.cols() == shape[1])
 *         vals = t.v
 */
  __pyx_t_7 = PyObject_Length(__pyx_v_shape); if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 108, __pyx_L1_error)
  __pyx_t_8 = ((__pyx_t_7 == 2) != 0);
  if (__pyx_t_8) {

    /* "pycnn.pyx":109
 *             assert(t.d.size() == arr.size)
 *         if len(shape) == 2:
 *             assert(t.d.rows() == shape[0] and t.d.cols() == shape[1])             # <<<<<<<<<<<<<<
 *         vals = t.v
 *         arr = arr.flatten()
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t.d.rows()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 109, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_shape, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 109, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 109, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 109, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_9) {
      } else {
        __pyx_t_8 = __pyx_t_9;
        goto __pyx_L5_bool_binop_done;
      }
      __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_t.d.cols()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 109, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_shape, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 109, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 109, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 109, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __pyx_t_9;
      __pyx_L5_bool_binop_done:;
      if (unlikely(!__pyx_t_8)) {
        PyErr_SetNone(PyExc_AssertionError);
        __PYX_ERR(0, 109, __pyx_L1_error)
      }
    }
    #endif

    /* "pycnn.pyx":108
 *             assert(t.d.ndims() == 1)
 *             assert(t.d.size() == arr.size)
 *         if len(shape) == 2:             # <<<<<<<<<<<<<<
 *             assert(t.d.rows() == shape[0] and t.d.cols() == shape[1])
 *         vals = t.v
 */
  }

  /* "pycnn.pyx":110
 *         if len(shape) == 2:
 *             assert(t.d.rows() == shape[0] and t.d.cols() == shape[1])
 *         vals = t.v             # <<<<<<<<<<<<<<
 *         arr = arr.flatten()
 *         for i in xrange(arr.size):
 */
  __pyx_t_10 = __pyx_v_t.v;
  __pyx_v_vals = __pyx_t_10;

  /* "pycnn.pyx":111
 *             assert(t.d.rows() == shape[0] and t.d.cols() == shape[1])
 *         vals = t.v
 *         arr = arr.flatten()             # <<<<<<<<<<<<<<
 *         for i in xrange(arr.size):
 *             vals[i] = arr[i]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_arr, __pyx_n_s_flatten); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_1) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 111, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 111, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_arr, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "pycnn.pyx":112
 *         vals = t.v
 *         arr = arr.flatten()
 *         for i in xrange(arr.size):             # <<<<<<<<<<<<<<
 *             vals[i] = arr[i]
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_arr, __pyx_n_s_size); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_xrange, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_7 = 0;
    __pyx_t_11 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_11 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 112, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_11)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 112, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 112, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_11(__pyx_t_2);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 112, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pycnn.pyx":113
 *         arr = arr.flatten()
 *         for i in xrange(arr.size):
 *             vals[i] = arr[i]             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_arr, __pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_12 = __pyx_PyFloat_AsFloat(__pyx_t_3); if (unlikely((__pyx_t_12 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 113, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 113, __pyx_L1_error)
    (__pyx_v_vals[__pyx_t_13]) = __pyx_t_12;

    /* "pycnn.pyx":112
 *         vals = t.v
 *         arr = arr.flatten()
 *         for i in xrange(arr.size):             # <<<<<<<<<<<<<<
 *             vals[i] = arr[i]
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pycnn.pyx":100
 * 
 *     # TODO: make more efficient
 *     cpdef load_array(self, arr):             # <<<<<<<<<<<<<<
 *         cdef CTensor t
 *         cdef float* vals
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.Parameters.load_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_shape);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_arr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Parameters_7load_array(PyObject *__pyx_v_self, PyObject *__pyx_v_arr); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Parameters_7load_array(PyObject *__pyx_v_self, PyObject *__pyx_v_arr) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_array (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Parameters_6load_array(((struct __pyx_obj_5pycnn_Parameters *)__pyx_v_self), ((PyObject *)__pyx_v_arr));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Parameters_6load_array(struct __pyx_obj_5pycnn_Parameters *__pyx_v_self, PyObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("load_array", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_10Parameters_load_array(__pyx_v_self, __pyx_v_arr, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Parameters.load_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":118
 * cdef class LookupParameters:
 *     cdef CLookupParameters *thisptr
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 *     @staticmethod
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_16LookupParameters_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_16LookupParameters_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_5pycnn_16LookupParameters___cinit__(((struct __pyx_obj_5pycnn_LookupParameters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_16LookupParameters___cinit__(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":119
 *     cdef CLookupParameters *thisptr
 *     def __cinit__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     cdef wrap_ptr(CLookupParameters* ptr):
 */
  __pyx_v_self->thisptr = NULL;

  /* "pycnn.pyx":118
 * cdef class LookupParameters:
 *     cdef CLookupParameters *thisptr
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 *     @staticmethod
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":121
 *         self.thisptr = NULL
 *     @staticmethod
 *     cdef wrap_ptr(CLookupParameters* ptr):             # <<<<<<<<<<<<<<
 *         self = LookupParameters()
 *         self.thisptr = ptr
 */

static PyObject *__pyx_f_5pycnn_16LookupParameters_wrap_ptr(cnn::LookupParameters *__pyx_v_ptr) {
  struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("wrap_ptr", 0);

  /* "pycnn.pyx":122
 *     @staticmethod
 *     cdef wrap_ptr(CLookupParameters* ptr):
 *         self = LookupParameters()             # <<<<<<<<<<<<<<
 *         self.thisptr = ptr
 *         return self
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_LookupParameters), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_self = ((struct __pyx_obj_5pycnn_LookupParameters *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":123
 *     cdef wrap_ptr(CLookupParameters* ptr):
 *         self = LookupParameters()
 *         self.thisptr = ptr             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_v_self->thisptr = __pyx_v_ptr;

  /* "pycnn.pyx":124
 *         self = LookupParameters()
 *         self.thisptr = ptr
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cpdef init_from_array(self, arr):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "pycnn.pyx":121
 *         self.thisptr = NULL
 *     @staticmethod
 *     cdef wrap_ptr(CLookupParameters* ptr):             # <<<<<<<<<<<<<<
 *         self = LookupParameters()
 *         self.thisptr = ptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.LookupParameters.wrap_ptr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":126
 *         return self
 * 
 *     cpdef init_from_array(self, arr):             # <<<<<<<<<<<<<<
 *         if len(arr) > self.thisptr.values.size():
 *             raise Exception("too many rows")
 */

static PyObject *__pyx_pw_5pycnn_16LookupParameters_3init_from_array(PyObject *__pyx_v_self, PyObject *__pyx_v_arr); /*proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_init_from_array(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, PyObject *__pyx_v_arr, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_row = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  int __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  unsigned int __pyx_t_9;
  std::vector<float>  __pyx_t_10;
  __Pyx_RefNannySetupContext("init_from_array", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_from_array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 126, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16LookupParameters_3init_from_array)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_arr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 126, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 126, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_arr);
        __Pyx_GIVEREF(__pyx_v_arr);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_arr);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 126, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":127
 * 
 *     cpdef init_from_array(self, arr):
 *         if len(arr) > self.thisptr.values.size():             # <<<<<<<<<<<<<<
 *             raise Exception("too many rows")
 *         if arr.shape[1] != self.thisptr.values[0].d.rows():
 */
  __pyx_t_6 = PyObject_Length(__pyx_v_arr); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 127, __pyx_L1_error)
  __pyx_t_7 = ((__pyx_t_6 > __pyx_v_self->thisptr->values.size()) != 0);
  if (__pyx_t_7) {

    /* "pycnn.pyx":128
 *     cpdef init_from_array(self, arr):
 *         if len(arr) > self.thisptr.values.size():
 *             raise Exception("too many rows")             # <<<<<<<<<<<<<<
 *         if arr.shape[1] != self.thisptr.values[0].d.rows():
 *             raise Exception("dim mismatch")
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 128, __pyx_L1_error)

    /* "pycnn.pyx":127
 * 
 *     cpdef init_from_array(self, arr):
 *         if len(arr) > self.thisptr.values.size():             # <<<<<<<<<<<<<<
 *             raise Exception("too many rows")
 *         if arr.shape[1] != self.thisptr.values[0].d.rows():
 */
  }

  /* "pycnn.pyx":129
 *         if len(arr) > self.thisptr.values.size():
 *             raise Exception("too many rows")
 *         if arr.shape[1] != self.thisptr.values[0].d.rows():             # <<<<<<<<<<<<<<
 *             raise Exception("dim mismatch")
 *         cdef vector[float] r
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_arr, __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_From_int((__pyx_v_self->thisptr->values[0]).d.rows()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_7) {

    /* "pycnn.pyx":130
 *             raise Exception("too many rows")
 *         if arr.shape[1] != self.thisptr.values[0].d.rows():
 *             raise Exception("dim mismatch")             # <<<<<<<<<<<<<<
 *         cdef vector[float] r
 *         for i,row in enumerate(arr):
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 130, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 130, __pyx_L1_error)

    /* "pycnn.pyx":129
 *         if len(arr) > self.thisptr.values.size():
 *             raise Exception("too many rows")
 *         if arr.shape[1] != self.thisptr.values[0].d.rows():             # <<<<<<<<<<<<<<
 *             raise Exception("dim mismatch")
 *         cdef vector[float] r
 */
  }

  /* "pycnn.pyx":132
 *             raise Exception("dim mismatch")
 *         cdef vector[float] r
 *         for i,row in enumerate(arr):             # <<<<<<<<<<<<<<
 *             self.init_row(i, row)
 * 
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_3 = __pyx_int_0;
  if (likely(PyList_CheckExact(__pyx_v_arr)) || PyTuple_CheckExact(__pyx_v_arr)) {
    __pyx_t_1 = __pyx_v_arr; __Pyx_INCREF(__pyx_t_1); __pyx_t_6 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_6 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_arr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 132, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 132, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 132, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 132, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 132, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_8(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 132, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_row, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
    __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3);
    __pyx_t_3 = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "pycnn.pyx":133
 *         cdef vector[float] r
 *         for i,row in enumerate(arr):
 *             self.init_row(i, row)             # <<<<<<<<<<<<<<
 * 
 *     cpdef shape(self):
 */
    __pyx_t_9 = __Pyx_PyInt_As_unsigned_int(__pyx_v_i); if (unlikely((__pyx_t_9 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 133, __pyx_L1_error)
    __pyx_t_10 = __pyx_convert_vector_from_py_float(__pyx_v_row); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 133, __pyx_L1_error)
    __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_LookupParameters *)__pyx_v_self->__pyx_vtab)->init_row(__pyx_v_self, __pyx_t_9, __pyx_t_10, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "pycnn.pyx":132
 *             raise Exception("dim mismatch")
 *         cdef vector[float] r
 *         for i,row in enumerate(arr):             # <<<<<<<<<<<<<<
 *             self.init_row(i, row)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pycnn.pyx":126
 *         return self
 * 
 *     cpdef init_from_array(self, arr):             # <<<<<<<<<<<<<<
 *         if len(arr) > self.thisptr.values.size():
 *             raise Exception("too many rows")
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.LookupParameters.init_from_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_row);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16LookupParameters_3init_from_array(PyObject *__pyx_v_self, PyObject *__pyx_v_arr); /*proto*/
static PyObject *__pyx_pw_5pycnn_16LookupParameters_3init_from_array(PyObject *__pyx_v_self, PyObject *__pyx_v_arr) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init_from_array (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16LookupParameters_2init_from_array(((struct __pyx_obj_5pycnn_LookupParameters *)__pyx_v_self), ((PyObject *)__pyx_v_arr));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16LookupParameters_2init_from_array(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, PyObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("init_from_array", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16LookupParameters_init_from_array(__pyx_v_self, __pyx_v_arr, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.LookupParameters.init_from_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":135
 *             self.init_row(i, row)
 * 
 *     cpdef shape(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr.dim.cols() != 1:
 *             return (self.thisptr.values.size(), self.thisptr.dim.rows(), self.thisptr.dim.cols())
 */

static PyObject *__pyx_pw_5pycnn_16LookupParameters_5shape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_shape(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("shape", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16LookupParameters_5shape)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 135, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 135, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":136
 * 
 *     cpdef shape(self):
 *         if self.thisptr.dim.cols() != 1:             # <<<<<<<<<<<<<<
 *             return (self.thisptr.values.size(), self.thisptr.dim.rows(), self.thisptr.dim.cols())
 *         return (self.thisptr.values.size(), self.thisptr.dim.rows())
 */
  __pyx_t_5 = ((__pyx_v_self->thisptr->dim.cols() != 1) != 0);
  if (__pyx_t_5) {

    /* "pycnn.pyx":137
 *     cpdef shape(self):
 *         if self.thisptr.dim.cols() != 1:
 *             return (self.thisptr.values.size(), self.thisptr.dim.rows(), self.thisptr.dim.cols())             # <<<<<<<<<<<<<<
 *         return (self.thisptr.values.size(), self.thisptr.dim.rows())
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->thisptr->values.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->dim.rows()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->dim.cols()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
    __pyx_t_1 = 0;
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":136
 * 
 *     cpdef shape(self):
 *         if self.thisptr.dim.cols() != 1:             # <<<<<<<<<<<<<<
 *             return (self.thisptr.values.size(), self.thisptr.dim.rows(), self.thisptr.dim.cols())
 *         return (self.thisptr.values.size(), self.thisptr.dim.rows())
 */
  }

  /* "pycnn.pyx":138
 *         if self.thisptr.dim.cols() != 1:
 *             return (self.thisptr.values.size(), self.thisptr.dim.rows(), self.thisptr.dim.cols())
 *         return (self.thisptr.values.size(), self.thisptr.dim.rows())             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = __Pyx_PyInt_FromSize_t(__pyx_v_self->thisptr->values.size()); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->dim.rows()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_4 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":135
 *             self.init_row(i, row)
 * 
 *     cpdef shape(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr.dim.cols() != 1:
 *             return (self.thisptr.values.size(), self.thisptr.dim.rows(), self.thisptr.dim.cols())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.LookupParameters.shape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16LookupParameters_5shape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16LookupParameters_5shape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("shape (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16LookupParameters_4shape(((struct __pyx_obj_5pycnn_LookupParameters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16LookupParameters_4shape(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("shape", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16LookupParameters_shape(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.LookupParameters.shape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":140
 *         return (self.thisptr.values.size(), self.thisptr.dim.rows())
 * 
 *     def __getitem__(self, int i):             # <<<<<<<<<<<<<<
 *         return lookup(self, i)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16LookupParameters_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static PyObject *__pyx_pw_5pycnn_16LookupParameters_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 140, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.LookupParameters.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_16LookupParameters_6__getitem__(((struct __pyx_obj_5pycnn_LookupParameters *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16LookupParameters_6__getitem__(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, int __pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pycnn.pyx":141
 * 
 *     def __getitem__(self, int i):
 *         return lookup(self, i)             # <<<<<<<<<<<<<<
 * 
 *     cpdef batch(self, vector[unsigned] i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_lookup); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (__pyx_t_4) {
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
  }
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":140
 *         return (self.thisptr.values.size(), self.thisptr.dim.rows())
 * 
 *     def __getitem__(self, int i):             # <<<<<<<<<<<<<<
 *         return lookup(self, i)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.LookupParameters.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":143
 *         return lookup(self, i)
 * 
 *     cpdef batch(self, vector[unsigned] i):             # <<<<<<<<<<<<<<
 *         return lookup_batch(self, i)
 * 
 */

static PyObject *__pyx_pw_5pycnn_16LookupParameters_9batch(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_batch(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, std::vector<unsigned int>  __pyx_v_i, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  __Pyx_RefNannySetupContext("batch", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_batch); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16LookupParameters_9batch)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = __pyx_convert_vector_to_py_unsigned_int(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 143, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 143, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 143, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 143, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":144
 * 
 *     cpdef batch(self, vector[unsigned] i):
 *         return lookup_batch(self, i)             # <<<<<<<<<<<<<<
 * 
 *     cpdef init_row(self, unsigned i, vector[float] row):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_lookup_batch); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __pyx_convert_vector_to_py_unsigned_int(__pyx_v_i); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  __pyx_t_3 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_7, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_7, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":143
 *         return lookup(self, i)
 * 
 *     cpdef batch(self, vector[unsigned] i):             # <<<<<<<<<<<<<<
 *         return lookup_batch(self, i)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.LookupParameters.batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16LookupParameters_9batch(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static PyObject *__pyx_pw_5pycnn_16LookupParameters_9batch(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  std::vector<unsigned int>  __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("batch (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __pyx_convert_vector_from_py_unsigned_int(__pyx_arg_i); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 143, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.LookupParameters.batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_16LookupParameters_8batch(((struct __pyx_obj_5pycnn_LookupParameters *)__pyx_v_self), ((std::vector<unsigned int> )__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16LookupParameters_8batch(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, std::vector<unsigned int>  __pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("batch", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16LookupParameters_batch(__pyx_v_self, __pyx_v_i, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.LookupParameters.batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":146
 *         return lookup_batch(self, i)
 * 
 *     cpdef init_row(self, unsigned i, vector[float] row):             # <<<<<<<<<<<<<<
 *         self.thisptr.Initialize(i, row)
 * 
 */

static PyObject *__pyx_pw_5pycnn_16LookupParameters_11init_row(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_init_row(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, unsigned int __pyx_v_i, std::vector<float>  __pyx_v_row, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("init_row", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_row); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16LookupParameters_11init_row)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = __Pyx_PyInt_From_unsigned_int(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __pyx_convert_vector_to_py_float(__pyx_v_row); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_5 = __pyx_t_1; __pyx_t_6 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_7 = 1;
        }
      }
      __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_6) {
        __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":147
 * 
 *     cpdef init_row(self, unsigned i, vector[float] row):
 *         self.thisptr.Initialize(i, row)             # <<<<<<<<<<<<<<
 * 
 *     cpdef as_array(self):
 */
  __pyx_v_self->thisptr->Initialize(__pyx_v_i, __pyx_v_row);

  /* "pycnn.pyx":146
 *         return lookup_batch(self, i)
 * 
 *     cpdef init_row(self, unsigned i, vector[float] row):             # <<<<<<<<<<<<<<
 *         self.thisptr.Initialize(i, row)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("pycnn.LookupParameters.init_row", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16LookupParameters_11init_row(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_16LookupParameters_11init_row(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_i;
  std::vector<float>  __pyx_v_row;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init_row (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_row,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_row)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("init_row", 1, 2, 2, 1); __PYX_ERR(0, 146, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "init_row") < 0)) __PYX_ERR(0, 146, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_i = __Pyx_PyInt_As_unsigned_int(values[0]); if (unlikely((__pyx_v_i == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 146, __pyx_L3_error)
    __pyx_v_row = __pyx_convert_vector_from_py_float(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 146, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("init_row", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 146, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.LookupParameters.init_row", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_16LookupParameters_10init_row(((struct __pyx_obj_5pycnn_LookupParameters *)__pyx_v_self), __pyx_v_i, __pyx_v_row);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16LookupParameters_10init_row(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, unsigned int __pyx_v_i, std::vector<float>  __pyx_v_row) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("init_row", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16LookupParameters_init_row(__pyx_v_self, __pyx_v_i, __pyx_v_row, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.LookupParameters.init_row", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":149
 *         self.thisptr.Initialize(i, row)
 * 
 *     cpdef as_array(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return as a numpy array.
 */

static PyObject *__pyx_pw_5pycnn_16LookupParameters_13as_array(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16LookupParameters_as_array(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self, int __pyx_skip_dispatch) {
  std::vector<cnn::Tensor>  __pyx_v_vals;
  cnn::Tensor __pyx_v_t;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  std::vector<cnn::Tensor>  __pyx_t_5;
  std::vector<cnn::Tensor> ::iterator __pyx_t_6;
  cnn::Tensor __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("as_array", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_as_array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16LookupParameters_13as_array)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 149, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 149, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":154
 *         """
 *         cdef vector[CTensor] vals
 *         vals = self.thisptr.values             # <<<<<<<<<<<<<<
 *         return np.vstack([c_tensor_as_np(t).reshape(1,-1,order='F') for t in vals])
 * 
 */
  __pyx_t_5 = __pyx_v_self->thisptr->values;
  __pyx_v_vals = __pyx_t_5;

  /* "pycnn.pyx":155
 *         cdef vector[CTensor] vals
 *         vals = self.thisptr.values
 *         return np.vstack([c_tensor_as_np(t).reshape(1,-1,order='F') for t in vals])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_vstack); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __pyx_v_vals.begin();
  for (;;) {
    if (!(__pyx_t_6 != __pyx_v_vals.end())) break;
    __pyx_t_7 = *__pyx_t_6;
    ++__pyx_t_6;
    __pyx_v_t = __pyx_t_7;
    __pyx_t_4 = __pyx_f_5pycnn_c_tensor_as_np(__pyx_v_t); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_reshape); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_order, __pyx_n_s_F) < 0) __PYX_ERR(0, 155, __pyx_L1_error)
    __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__3, __pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_9))) __PYX_ERR(0, 155, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __pyx_t_9 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_9) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 155, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_9); __pyx_t_9 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 155, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":149
 *         self.thisptr.Initialize(i, row)
 * 
 *     cpdef as_array(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return as a numpy array.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pycnn.LookupParameters.as_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16LookupParameters_13as_array(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_5pycnn_16LookupParameters_12as_array[] = "\n        Return as a numpy array.\n        ";
static PyObject *__pyx_pw_5pycnn_16LookupParameters_13as_array(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("as_array (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16LookupParameters_12as_array(((struct __pyx_obj_5pycnn_LookupParameters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16LookupParameters_12as_array(struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("as_array", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16LookupParameters_as_array(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.LookupParameters.as_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":163
 *     cdef object lookups
 *     cdef object regular
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CModel()
 *     def __init__(self):
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_5Model_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_5Model_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_5pycnn_5Model___cinit__(((struct __pyx_obj_5pycnn_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_5Model___cinit__(struct __pyx_obj_5pycnn_Model *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":164
 *     cdef object regular
 *     def __cinit__(self):
 *         self.thisptr = new CModel()             # <<<<<<<<<<<<<<
 *     def __init__(self):
 *         self.named_params = {}
 */
  __pyx_v_self->thisptr = new cnn::Model();

  /* "pycnn.pyx":163
 *     cdef object lookups
 *     cdef object regular
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CModel()
 *     def __init__(self):
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":165
 *     def __cinit__(self):
 *         self.thisptr = new CModel()
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.named_params = {}
 *         self.lookups = []
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_5Model_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_5Model_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_5pycnn_5Model_2__init__(((struct __pyx_obj_5pycnn_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_5Model_2__init__(struct __pyx_obj_5pycnn_Model *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pycnn.pyx":166
 *         self.thisptr = new CModel()
 *     def __init__(self):
 *         self.named_params = {}             # <<<<<<<<<<<<<<
 *         self.lookups = []
 *         self.regular = []
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->named_params);
  __Pyx_DECREF(__pyx_v_self->named_params);
  __pyx_v_self->named_params = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pycnn.pyx":167
 *     def __init__(self):
 *         self.named_params = {}
 *         self.lookups = []             # <<<<<<<<<<<<<<
 *         self.regular = []
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lookups);
  __Pyx_DECREF(__pyx_v_self->lookups);
  __pyx_v_self->lookups = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pycnn.pyx":168
 *         self.named_params = {}
 *         self.lookups = []
 *         self.regular = []             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self): del self.thisptr
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->regular);
  __Pyx_DECREF(__pyx_v_self->regular);
  __pyx_v_self->regular = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pycnn.pyx":165
 *     def __cinit__(self):
 *         self.thisptr = new CModel()
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.named_params = {}
 *         self.lookups = []
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Model.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":170
 *         self.regular = []
 * 
 *     def __dealloc__(self): del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def add_parameters(self, name, dim, scale=0):
 */

/* Python wrapper */
static void __pyx_pw_5pycnn_5Model_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5pycnn_5Model_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5pycnn_5Model_4__dealloc__(((struct __pyx_obj_5pycnn_Model *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5pycnn_5Model_4__dealloc__(struct __pyx_obj_5pycnn_Model *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);
  delete __pyx_v_self->thisptr;

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pycnn.pyx":172
 *     def __dealloc__(self): del self.thisptr
 * 
 *     def add_parameters(self, name, dim, scale=0):             # <<<<<<<<<<<<<<
 *         cdef CParameters* p
 *         assert(name not in self.named_params), "name already registered"
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_5Model_7add_parameters(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_5Model_7add_parameters(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_dim = 0;
  CYTHON_UNUSED PyObject *__pyx_v_scale = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_parameters (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,&__pyx_n_s_dim,&__pyx_n_s_scale,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)__pyx_int_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("add_parameters", 0, 2, 3, 1); __PYX_ERR(0, 172, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_scale);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "add_parameters") < 0)) __PYX_ERR(0, 172, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_name = values[0];
    __pyx_v_dim = values[1];
    __pyx_v_scale = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("add_parameters", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 172, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.Model.add_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_5Model_6add_parameters(((struct __pyx_obj_5pycnn_Model *)__pyx_v_self), __pyx_v_name, __pyx_v_dim, __pyx_v_scale);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_5Model_6add_parameters(struct __pyx_obj_5pycnn_Model *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_dim, CYTHON_UNUSED PyObject *__pyx_v_scale) {
  cnn::Parameters *__pyx_v_p;
  struct __pyx_obj_5pycnn_Parameters *__pyx_v_pp = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("add_parameters", 0);

  /* "pycnn.pyx":174
 *     def add_parameters(self, name, dim, scale=0):
 *         cdef CParameters* p
 *         assert(name not in self.named_params), "name already registered"             # <<<<<<<<<<<<<<
 *         p = self.thisptr.add_parameters(Dim(dim))
 *         cdef Parameters pp = Parameters.wrap_ptr(p)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_v_name, __pyx_v_self->named_params, Py_NE)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 174, __pyx_L1_error)
    if (unlikely(!(__pyx_t_1 != 0))) {
      PyErr_SetObject(PyExc_AssertionError, __pyx_kp_s_name_already_registered);
      __PYX_ERR(0, 174, __pyx_L1_error)
    }
  }
  #endif

  /* "pycnn.pyx":175
 *         cdef CParameters* p
 *         assert(name not in self.named_params), "name already registered"
 *         p = self.thisptr.add_parameters(Dim(dim))             # <<<<<<<<<<<<<<
 *         cdef Parameters pp = Parameters.wrap_ptr(p)
 *         self.named_params[name] = pp
 */
  __pyx_v_p = __pyx_v_self->thisptr->add_parameters(__pyx_f_5pycnn_Dim(__pyx_v_dim), NULL);

  /* "pycnn.pyx":176
 *         assert(name not in self.named_params), "name already registered"
 *         p = self.thisptr.add_parameters(Dim(dim))
 *         cdef Parameters pp = Parameters.wrap_ptr(p)             # <<<<<<<<<<<<<<
 *         self.named_params[name] = pp
 *         self.regular.append(name)
 */
  __pyx_t_2 = __pyx_f_5pycnn_10Parameters_wrap_ptr(__pyx_v_p); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5pycnn_Parameters))))) __PYX_ERR(0, 176, __pyx_L1_error)
  __pyx_v_pp = ((struct __pyx_obj_5pycnn_Parameters *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pycnn.pyx":177
 *         p = self.thisptr.add_parameters(Dim(dim))
 *         cdef Parameters pp = Parameters.wrap_ptr(p)
 *         self.named_params[name] = pp             # <<<<<<<<<<<<<<
 *         self.regular.append(name)
 *         return pp
 */
  if (unlikely(PyObject_SetItem(__pyx_v_self->named_params, __pyx_v_name, ((PyObject *)__pyx_v_pp)) < 0)) __PYX_ERR(0, 177, __pyx_L1_error)

  /* "pycnn.pyx":178
 *         cdef Parameters pp = Parameters.wrap_ptr(p)
 *         self.named_params[name] = pp
 *         self.regular.append(name)             # <<<<<<<<<<<<<<
 *         return pp
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_Append(__pyx_v_self->regular, __pyx_v_name); if (unlikely(__pyx_t_3 == -1)) __PYX_ERR(0, 178, __pyx_L1_error)

  /* "pycnn.pyx":179
 *         self.named_params[name] = pp
 *         self.regular.append(name)
 *         return pp             # <<<<<<<<<<<<<<
 * 
 *     def add_lookup_parameters(self, name, dim):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_pp));
  __pyx_r = ((PyObject *)__pyx_v_pp);
  goto __pyx_L0;

  /* "pycnn.pyx":172
 *     def __dealloc__(self): del self.thisptr
 * 
 *     def add_parameters(self, name, dim, scale=0):             # <<<<<<<<<<<<<<
 *         cdef CParameters* p
 *         assert(name not in self.named_params), "name already registered"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn.Model.add_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_pp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":181
 *         return pp
 * 
 *     def add_lookup_parameters(self, name, dim):             # <<<<<<<<<<<<<<
 *         assert(isinstance(dim, tuple))
 *         assert(name not in self.named_params), "name already registered"
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_5Model_9add_lookup_parameters(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_5Model_9add_lookup_parameters(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_dim = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_lookup_parameters (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,&__pyx_n_s_dim,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("add_lookup_parameters", 1, 2, 2, 1); __PYX_ERR(0, 181, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "add_lookup_parameters") < 0)) __PYX_ERR(0, 181, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_name = values[0];
    __pyx_v_dim = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("add_lookup_parameters", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 181, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.Model.add_lookup_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_5Model_8add_lookup_parameters(((struct __pyx_obj_5pycnn_Model *)__pyx_v_self), __pyx_v_name, __pyx_v_dim);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_5Model_8add_lookup_parameters(struct __pyx_obj_5pycnn_Model *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_dim) {
  int __pyx_v_nids;
  PyObject *__pyx_v_rest = NULL;
  cnn::LookupParameters *__pyx_v_p;
  struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_pp = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("add_lookup_parameters", 0);

  /* "pycnn.pyx":182
 * 
 *     def add_lookup_parameters(self, name, dim):
 *         assert(isinstance(dim, tuple))             # <<<<<<<<<<<<<<
 *         assert(name not in self.named_params), "name already registered"
 *         cdef int nids = dim[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = PyTuple_Check(__pyx_v_dim); 
    if (unlikely(!(__pyx_t_1 != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(0, 182, __pyx_L1_error)
    }
  }
  #endif

  /* "pycnn.pyx":183
 *     def add_lookup_parameters(self, name, dim):
 *         assert(isinstance(dim, tuple))
 *         assert(name not in self.named_params), "name already registered"             # <<<<<<<<<<<<<<
 *         cdef int nids = dim[0]
 *         rest = tuple(dim[1:])
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_v_name, __pyx_v_self->named_params, Py_NE)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 183, __pyx_L1_error)
    if (unlikely(!(__pyx_t_1 != 0))) {
      PyErr_SetObject(PyExc_AssertionError, __pyx_kp_s_name_already_registered);
      __PYX_ERR(0, 183, __pyx_L1_error)
    }
  }
  #endif

  /* "pycnn.pyx":184
 *         assert(isinstance(dim, tuple))
 *         assert(name not in self.named_params), "name already registered"
 *         cdef int nids = dim[0]             # <<<<<<<<<<<<<<
 *         rest = tuple(dim[1:])
 *         cdef CLookupParameters* p
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_dim, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_nids = __pyx_t_3;

  /* "pycnn.pyx":185
 *         assert(name not in self.named_params), "name already registered"
 *         cdef int nids = dim[0]
 *         rest = tuple(dim[1:])             # <<<<<<<<<<<<<<
 *         cdef CLookupParameters* p
 *         p = self.thisptr.add_lookup_parameters(nids, Dim(rest))
 */
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_dim, 1, 0, NULL, NULL, &__pyx_slice__4, 1, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PySequence_Tuple(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_rest = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "pycnn.pyx":187
 *         rest = tuple(dim[1:])
 *         cdef CLookupParameters* p
 *         p = self.thisptr.add_lookup_parameters(nids, Dim(rest))             # <<<<<<<<<<<<<<
 *         cdef LookupParameters pp = LookupParameters.wrap_ptr(p)
 *         self.named_params[name] = pp
 */
  __pyx_v_p = __pyx_v_self->thisptr->add_lookup_parameters(__pyx_v_nids, __pyx_f_5pycnn_Dim(__pyx_v_rest));

  /* "pycnn.pyx":188
 *         cdef CLookupParameters* p
 *         p = self.thisptr.add_lookup_parameters(nids, Dim(rest))
 *         cdef LookupParameters pp = LookupParameters.wrap_ptr(p)             # <<<<<<<<<<<<<<
 *         self.named_params[name] = pp
 *         self.lookups.append(name)
 */
  __pyx_t_4 = __pyx_f_5pycnn_16LookupParameters_wrap_ptr(__pyx_v_p); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_5pycnn_LookupParameters))))) __PYX_ERR(0, 188, __pyx_L1_error)
  __pyx_v_pp = ((struct __pyx_obj_5pycnn_LookupParameters *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "pycnn.pyx":189
 *         p = self.thisptr.add_lookup_parameters(nids, Dim(rest))
 *         cdef LookupParameters pp = LookupParameters.wrap_ptr(p)
 *         self.named_params[name] = pp             # <<<<<<<<<<<<<<
 *         self.lookups.append(name)
 *         return pp
 */
  if (unlikely(PyObject_SetItem(__pyx_v_self->named_params, __pyx_v_name, ((PyObject *)__pyx_v_pp)) < 0)) __PYX_ERR(0, 189, __pyx_L1_error)

  /* "pycnn.pyx":190
 *         cdef LookupParameters pp = LookupParameters.wrap_ptr(p)
 *         self.named_params[name] = pp
 *         self.lookups.append(name)             # <<<<<<<<<<<<<<
 *         return pp
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_Append(__pyx_v_self->lookups, __pyx_v_name); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 190, __pyx_L1_error)

  /* "pycnn.pyx":191
 *         self.named_params[name] = pp
 *         self.lookups.append(name)
 *         return pp             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, name):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_pp));
  __pyx_r = ((PyObject *)__pyx_v_pp);
  goto __pyx_L0;

  /* "pycnn.pyx":181
 *         return pp
 * 
 *     def add_lookup_parameters(self, name, dim):             # <<<<<<<<<<<<<<
 *         assert(isinstance(dim, tuple))
 *         assert(name not in self.named_params), "name already registered"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.Model.add_lookup_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_rest);
  __Pyx_XDECREF((PyObject *)__pyx_v_pp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":193
 *         return pp
 * 
 *     def __getitem__(self, name):             # <<<<<<<<<<<<<<
 *         return self.named_params[name]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_5Model_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static PyObject *__pyx_pw_5pycnn_5Model_11__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_5Model_10__getitem__(((struct __pyx_obj_5pycnn_Model *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_5Model_10__getitem__(struct __pyx_obj_5pycnn_Model *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pycnn.pyx":194
 * 
 *     def __getitem__(self, name):
 *         return self.named_params[name]             # <<<<<<<<<<<<<<
 * 
 *     def __contains__(self, name):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetItem(__pyx_v_self->named_params, __pyx_v_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":193
 *         return pp
 * 
 *     def __getitem__(self, name):             # <<<<<<<<<<<<<<
 *         return self.named_params[name]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Model.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":196
 *         return self.named_params[name]
 * 
 *     def __contains__(self, name):             # <<<<<<<<<<<<<<
 *         return name in self.named_params
 * 
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_5Model_13__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static int __pyx_pw_5pycnn_5Model_13__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__contains__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_5Model_12__contains__(((struct __pyx_obj_5pycnn_Model *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_5Model_12__contains__(struct __pyx_obj_5pycnn_Model *__pyx_v_self, PyObject *__pyx_v_name) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__contains__", 0);

  /* "pycnn.pyx":197
 * 
 *     def __contains__(self, name):
 *         return name in self.named_params             # <<<<<<<<<<<<<<
 * 
 *     #def parameters(self): return self.named_params.keys()
 */
  __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_v_name, __pyx_v_self->named_params, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 197, __pyx_L1_error)
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "pycnn.pyx":196
 *         return self.named_params[name]
 * 
 *     def __contains__(self, name):             # <<<<<<<<<<<<<<
 *         return name in self.named_params
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pycnn.Model.__contains__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":203
 *     #def regular_parameters(self): return list(self.regular)
 * 
 *     def save(self, string fname):             # <<<<<<<<<<<<<<
 *         save_cnn_model(fname, self.thisptr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_5Model_15save(PyObject *__pyx_v_self, PyObject *__pyx_arg_fname); /*proto*/
static PyObject *__pyx_pw_5pycnn_5Model_15save(PyObject *__pyx_v_self, PyObject *__pyx_arg_fname) {
  std::string __pyx_v_fname;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("save (wrapper)", 0);
  assert(__pyx_arg_fname); {
    __pyx_v_fname = __pyx_convert_string_from_py_std__in_string(__pyx_arg_fname); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 203, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.Model.save", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_5Model_14save(((struct __pyx_obj_5pycnn_Model *)__pyx_v_self), ((std::string)__pyx_v_fname));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_5Model_14save(struct __pyx_obj_5pycnn_Model *__pyx_v_self, std::string __pyx_v_fname) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("save", 0);

  /* "pycnn.pyx":204
 * 
 *     def save(self, string fname):
 *         save_cnn_model(fname, self.thisptr)             # <<<<<<<<<<<<<<
 * 
 *     def load(self, string fname):
 */
  cnn::save_cnn_model(__pyx_v_fname, __pyx_v_self->thisptr);

  /* "pycnn.pyx":203
 *     #def regular_parameters(self): return list(self.regular)
 * 
 *     def save(self, string fname):             # <<<<<<<<<<<<<<
 *         save_cnn_model(fname, self.thisptr)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":206
 *         save_cnn_model(fname, self.thisptr)
 * 
 *     def load(self, string fname):             # <<<<<<<<<<<<<<
 *         load_cnn_model(fname, self.thisptr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_5Model_17load(PyObject *__pyx_v_self, PyObject *__pyx_arg_fname); /*proto*/
static PyObject *__pyx_pw_5pycnn_5Model_17load(PyObject *__pyx_v_self, PyObject *__pyx_arg_fname) {
  std::string __pyx_v_fname;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load (wrapper)", 0);
  assert(__pyx_arg_fname); {
    __pyx_v_fname = __pyx_convert_string_from_py_std__in_string(__pyx_arg_fname); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 206, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.Model.load", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_5Model_16load(((struct __pyx_obj_5pycnn_Model *)__pyx_v_self), ((std::string)__pyx_v_fname));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_5Model_16load(struct __pyx_obj_5pycnn_Model *__pyx_v_self, std::string __pyx_v_fname) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load", 0);

  /* "pycnn.pyx":207
 * 
 *     def load(self, string fname):
 *         load_cnn_model(fname, self.thisptr)             # <<<<<<<<<<<<<<
 * 
 * # }}}
 */
  cnn::load_cnn_model(__pyx_v_fname, __pyx_v_self->thisptr);

  /* "pycnn.pyx":206
 *         save_cnn_model(fname, self.thisptr)
 * 
 *     def load(self, string fname):             # <<<<<<<<<<<<<<
 *         load_cnn_model(fname, self.thisptr)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":217
 * cdef class UnsignedValue:
 *     cdef unsigned val
 *     def __cinit__(self, val = 0): self.val = val             # <<<<<<<<<<<<<<
 *     def set(self, val): self.val = val
 *     def get(self): return self.val
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_13UnsignedValue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_13UnsignedValue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_val = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)__pyx_int_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 217, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_val = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 217, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.UnsignedValue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_13UnsignedValue___cinit__(((struct __pyx_obj_5pycnn_UnsignedValue *)__pyx_v_self), __pyx_v_val);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_13UnsignedValue___cinit__(struct __pyx_obj_5pycnn_UnsignedValue *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  unsigned int __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_unsigned_int(__pyx_v_val); if (unlikely((__pyx_t_1 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 217, __pyx_L1_error)
  __pyx_v_self->val = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pycnn.UnsignedValue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":218
 *     cdef unsigned val
 *     def __cinit__(self, val = 0): self.val = val
 *     def set(self, val): self.val = val             # <<<<<<<<<<<<<<
 *     def get(self): return self.val
 *     cdef unsigned* addr(self): return &(self.val)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_13UnsignedValue_3set(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static PyObject *__pyx_pw_5pycnn_13UnsignedValue_3set(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_13UnsignedValue_2set(((struct __pyx_obj_5pycnn_UnsignedValue *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_13UnsignedValue_2set(struct __pyx_obj_5pycnn_UnsignedValue *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  unsigned int __pyx_t_1;
  __Pyx_RefNannySetupContext("set", 0);
  __pyx_t_1 = __Pyx_PyInt_As_unsigned_int(__pyx_v_val); if (unlikely((__pyx_t_1 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 218, __pyx_L1_error)
  __pyx_v_self->val = __pyx_t_1;

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pycnn.UnsignedValue.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":219
 *     def __cinit__(self, val = 0): self.val = val
 *     def set(self, val): self.val = val
 *     def get(self): return self.val             # <<<<<<<<<<<<<<
 *     cdef unsigned* addr(self): return &(self.val)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_13UnsignedValue_5get(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_13UnsignedValue_5get(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_13UnsignedValue_4get(((struct __pyx_obj_5pycnn_UnsignedValue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_13UnsignedValue_4get(struct __pyx_obj_5pycnn_UnsignedValue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_self->val); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.UnsignedValue.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":220
 *     def set(self, val): self.val = val
 *     def get(self): return self.val
 *     cdef unsigned* addr(self): return &(self.val)             # <<<<<<<<<<<<<<
 * 
 * cdef class FloatValue:
 */

static unsigned int *__pyx_f_5pycnn_13UnsignedValue_addr(struct __pyx_obj_5pycnn_UnsignedValue *__pyx_v_self) {
  unsigned int *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addr", 0);
  __pyx_r = (&__pyx_v_self->val);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":224
 * cdef class FloatValue:
 *     cdef float val
 *     def __cinit__(self, val = 0): self.val = val             # <<<<<<<<<<<<<<
 *     def set(self, val): self.val = val
 *     def get(self): return self.val
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_10FloatValue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_10FloatValue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_val = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_val,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)__pyx_int_0);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 224, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_val = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 224, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.FloatValue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_10FloatValue___cinit__(((struct __pyx_obj_5pycnn_FloatValue *)__pyx_v_self), __pyx_v_val);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_10FloatValue___cinit__(struct __pyx_obj_5pycnn_FloatValue *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  float __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_val); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 224, __pyx_L1_error)
  __pyx_v_self->val = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pycnn.FloatValue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":225
 *     cdef float val
 *     def __cinit__(self, val = 0): self.val = val
 *     def set(self, val): self.val = val             # <<<<<<<<<<<<<<
 *     def get(self): return self.val
 *     cdef float* addr(self): return &(self.val)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10FloatValue_3set(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static PyObject *__pyx_pw_5pycnn_10FloatValue_3set(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10FloatValue_2set(((struct __pyx_obj_5pycnn_FloatValue *)__pyx_v_self), ((PyObject *)__pyx_v_val));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10FloatValue_2set(struct __pyx_obj_5pycnn_FloatValue *__pyx_v_self, PyObject *__pyx_v_val) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  float __pyx_t_1;
  __Pyx_RefNannySetupContext("set", 0);
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_val); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 225, __pyx_L1_error)
  __pyx_v_self->val = __pyx_t_1;

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pycnn.FloatValue.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":226
 *     def __cinit__(self, val = 0): self.val = val
 *     def set(self, val): self.val = val
 *     def get(self): return self.val             # <<<<<<<<<<<<<<
 *     cdef float* addr(self): return &(self.val)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10FloatValue_5get(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_10FloatValue_5get(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10FloatValue_4get(((struct __pyx_obj_5pycnn_FloatValue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10FloatValue_4get(struct __pyx_obj_5pycnn_FloatValue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->val); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.FloatValue.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":227
 *     def set(self, val): self.val = val
 *     def get(self): return self.val
 *     cdef float* addr(self): return &(self.val)             # <<<<<<<<<<<<<<
 * 
 * cdef class UnsignedVectorValue:
 */

static float *__pyx_f_5pycnn_10FloatValue_addr(struct __pyx_obj_5pycnn_FloatValue *__pyx_v_self) {
  float *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addr", 0);
  __pyx_r = (&__pyx_v_self->val);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":231
 * cdef class UnsignedVectorValue:
 *     cdef vector[unsigned] *vals
 *     def __cinit__(self, vals):             # <<<<<<<<<<<<<<
 *         self.vals = new vector[unsigned]()
 *         self.set(vals)
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_19UnsignedVectorValue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_19UnsignedVectorValue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_vals = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_vals,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vals)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 231, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_vals = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 231, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.UnsignedVectorValue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_19UnsignedVectorValue___cinit__(((struct __pyx_obj_5pycnn_UnsignedVectorValue *)__pyx_v_self), __pyx_v_vals);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_19UnsignedVectorValue___cinit__(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self, PyObject *__pyx_v_vals) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::vector<unsigned int>  *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":232
 *     cdef vector[unsigned] *vals
 *     def __cinit__(self, vals):
 *         self.vals = new vector[unsigned]()             # <<<<<<<<<<<<<<
 *         self.set(vals)
 *     def __dealloc__(self):
 */
  try {
    __pyx_t_1 = new std::vector<unsigned int> ();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 232, __pyx_L1_error)
  }
  __pyx_v_self->vals = __pyx_t_1;

  /* "pycnn.pyx":233
 *     def __cinit__(self, vals):
 *         self.vals = new vector[unsigned]()
 *         self.set(vals)             # <<<<<<<<<<<<<<
 *     def __dealloc__(self):
 *         del self.vals
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_vals); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_INCREF(__pyx_v_vals);
    __Pyx_GIVEREF(__pyx_v_vals);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_vals);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 233, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pycnn.pyx":231
 * cdef class UnsignedVectorValue:
 *     cdef vector[unsigned] *vals
 *     def __cinit__(self, vals):             # <<<<<<<<<<<<<<
 *         self.vals = new vector[unsigned]()
 *         self.set(vals)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.UnsignedVectorValue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":234
 *         self.vals = new vector[unsigned]()
 *         self.set(vals)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.vals
 *     def set(self, newval):
 */

/* Python wrapper */
static void __pyx_pw_5pycnn_19UnsignedVectorValue_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5pycnn_19UnsignedVectorValue_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5pycnn_19UnsignedVectorValue_2__dealloc__(((struct __pyx_obj_5pycnn_UnsignedVectorValue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5pycnn_19UnsignedVectorValue_2__dealloc__(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pycnn.pyx":235
 *         self.set(vals)
 *     def __dealloc__(self):
 *         del self.vals             # <<<<<<<<<<<<<<
 *     def set(self, newval):
 *         self.vals.clear()
 */
  delete __pyx_v_self->vals;

  /* "pycnn.pyx":234
 *         self.vals = new vector[unsigned]()
 *         self.set(vals)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.vals
 *     def set(self, newval):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pycnn.pyx":236
 *     def __dealloc__(self):
 *         del self.vals
 *     def set(self, newval):             # <<<<<<<<<<<<<<
 *         self.vals.clear()
 *         for f in newval: self.vals.push_back(f)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_19UnsignedVectorValue_5set(PyObject *__pyx_v_self, PyObject *__pyx_v_newval); /*proto*/
static PyObject *__pyx_pw_5pycnn_19UnsignedVectorValue_5set(PyObject *__pyx_v_self, PyObject *__pyx_v_newval) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_19UnsignedVectorValue_4set(((struct __pyx_obj_5pycnn_UnsignedVectorValue *)__pyx_v_self), ((PyObject *)__pyx_v_newval));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_19UnsignedVectorValue_4set(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self, PyObject *__pyx_v_newval) {
  PyObject *__pyx_v_f = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  __Pyx_RefNannySetupContext("set", 0);

  /* "pycnn.pyx":237
 *         del self.vals
 *     def set(self, newval):
 *         self.vals.clear()             # <<<<<<<<<<<<<<
 *         for f in newval: self.vals.push_back(f)
 *     def get(self): return deref(self.vals)
 */
  __pyx_v_self->vals->clear();

  /* "pycnn.pyx":238
 *     def set(self, newval):
 *         self.vals.clear()
 *         for f in newval: self.vals.push_back(f)             # <<<<<<<<<<<<<<
 *     def get(self): return deref(self.vals)
 *     def size(self): return len(deref(self.vals))
 */
  if (likely(PyList_CheckExact(__pyx_v_newval)) || PyTuple_CheckExact(__pyx_v_newval)) {
    __pyx_t_1 = __pyx_v_newval; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_newval); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 238, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 238, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 238, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 238, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 238, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 238, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 238, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_f, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_unsigned_int(__pyx_v_f); if (unlikely((__pyx_t_5 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 238, __pyx_L1_error)
    try {
      __pyx_v_self->vals->push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 238, __pyx_L1_error)
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":236
 *     def __dealloc__(self):
 *         del self.vals
 *     def set(self, newval):             # <<<<<<<<<<<<<<
 *         self.vals.clear()
 *         for f in newval: self.vals.push_back(f)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.UnsignedVectorValue.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":239
 *         self.vals.clear()
 *         for f in newval: self.vals.push_back(f)
 *     def get(self): return deref(self.vals)             # <<<<<<<<<<<<<<
 *     def size(self): return len(deref(self.vals))
 *     cdef vector[unsigned]* addr(self): return self.vals
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_19UnsignedVectorValue_7get(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_19UnsignedVectorValue_7get(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_19UnsignedVectorValue_6get(((struct __pyx_obj_5pycnn_UnsignedVectorValue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_19UnsignedVectorValue_6get(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_unsigned_int((*__pyx_v_self->vals)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.UnsignedVectorValue.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":240
 *         for f in newval: self.vals.push_back(f)
 *     def get(self): return deref(self.vals)
 *     def size(self): return len(deref(self.vals))             # <<<<<<<<<<<<<<
 *     cdef vector[unsigned]* addr(self): return self.vals
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_19UnsignedVectorValue_9size(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_19UnsignedVectorValue_9size(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("size (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_19UnsignedVectorValue_8size(((struct __pyx_obj_5pycnn_UnsignedVectorValue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_19UnsignedVectorValue_8size(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  __Pyx_RefNannySetupContext("size", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_unsigned_int((*__pyx_v_self->vals)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.UnsignedVectorValue.size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":241
 *     def get(self): return deref(self.vals)
 *     def size(self): return len(deref(self.vals))
 *     cdef vector[unsigned]* addr(self): return self.vals             # <<<<<<<<<<<<<<
 * 
 * cdef class FloatVectorValue:
 */

static std::vector<unsigned int>  *__pyx_f_5pycnn_19UnsignedVectorValue_addr(struct __pyx_obj_5pycnn_UnsignedVectorValue *__pyx_v_self) {
  std::vector<unsigned int>  *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addr", 0);
  __pyx_r = __pyx_v_self->vals;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":245
 * cdef class FloatVectorValue:
 *     cdef vector[float] *vals
 *     def __cinit__(self, vals):             # <<<<<<<<<<<<<<
 *         self.vals = new vector[float]()
 *         self.set(vals)
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_16FloatVectorValue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_16FloatVectorValue_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_vals = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_vals,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vals)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 245, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_vals = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 245, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.FloatVectorValue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_16FloatVectorValue___cinit__(((struct __pyx_obj_5pycnn_FloatVectorValue *)__pyx_v_self), __pyx_v_vals);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_16FloatVectorValue___cinit__(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self, PyObject *__pyx_v_vals) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::vector<float>  *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":246
 *     cdef vector[float] *vals
 *     def __cinit__(self, vals):
 *         self.vals = new vector[float]()             # <<<<<<<<<<<<<<
 *         self.set(vals)
 *     def __dealloc__(self):
 */
  try {
    __pyx_t_1 = new std::vector<float> ();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 246, __pyx_L1_error)
  }
  __pyx_v_self->vals = __pyx_t_1;

  /* "pycnn.pyx":247
 *     def __cinit__(self, vals):
 *         self.vals = new vector[float]()
 *         self.set(vals)             # <<<<<<<<<<<<<<
 *     def __dealloc__(self):
 *         del self.vals
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_vals); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 247, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_INCREF(__pyx_v_vals);
    __Pyx_GIVEREF(__pyx_v_vals);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_vals);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pycnn.pyx":245
 * cdef class FloatVectorValue:
 *     cdef vector[float] *vals
 *     def __cinit__(self, vals):             # <<<<<<<<<<<<<<
 *         self.vals = new vector[float]()
 *         self.set(vals)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.FloatVectorValue.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":248
 *         self.vals = new vector[float]()
 *         self.set(vals)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.vals
 *     def set(self, newval):
 */

/* Python wrapper */
static void __pyx_pw_5pycnn_16FloatVectorValue_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5pycnn_16FloatVectorValue_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5pycnn_16FloatVectorValue_2__dealloc__(((struct __pyx_obj_5pycnn_FloatVectorValue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5pycnn_16FloatVectorValue_2__dealloc__(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pycnn.pyx":249
 *         self.set(vals)
 *     def __dealloc__(self):
 *         del self.vals             # <<<<<<<<<<<<<<
 *     def set(self, newval):
 *         self.vals.clear()
 */
  delete __pyx_v_self->vals;

  /* "pycnn.pyx":248
 *         self.vals = new vector[float]()
 *         self.set(vals)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.vals
 *     def set(self, newval):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pycnn.pyx":250
 *     def __dealloc__(self):
 *         del self.vals
 *     def set(self, newval):             # <<<<<<<<<<<<<<
 *         self.vals.clear()
 *         for f in newval: self.vals.push_back(f)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16FloatVectorValue_5set(PyObject *__pyx_v_self, PyObject *__pyx_v_newval); /*proto*/
static PyObject *__pyx_pw_5pycnn_16FloatVectorValue_5set(PyObject *__pyx_v_self, PyObject *__pyx_v_newval) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16FloatVectorValue_4set(((struct __pyx_obj_5pycnn_FloatVectorValue *)__pyx_v_self), ((PyObject *)__pyx_v_newval));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16FloatVectorValue_4set(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self, PyObject *__pyx_v_newval) {
  PyObject *__pyx_v_f = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  float __pyx_t_5;
  __Pyx_RefNannySetupContext("set", 0);

  /* "pycnn.pyx":251
 *         del self.vals
 *     def set(self, newval):
 *         self.vals.clear()             # <<<<<<<<<<<<<<
 *         for f in newval: self.vals.push_back(f)
 *     def get(self): return deref(self.vals)
 */
  __pyx_v_self->vals->clear();

  /* "pycnn.pyx":252
 *     def set(self, newval):
 *         self.vals.clear()
 *         for f in newval: self.vals.push_back(f)             # <<<<<<<<<<<<<<
 *     def get(self): return deref(self.vals)
 *     def size(self): return len(deref(self.vals))
 */
  if (likely(PyList_CheckExact(__pyx_v_newval)) || PyTuple_CheckExact(__pyx_v_newval)) {
    __pyx_t_1 = __pyx_v_newval; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_newval); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 252, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 252, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 252, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 252, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 252, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 252, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_f, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_5 = __pyx_PyFloat_AsFloat(__pyx_v_f); if (unlikely((__pyx_t_5 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 252, __pyx_L1_error)
    try {
      __pyx_v_self->vals->push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 252, __pyx_L1_error)
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":250
 *     def __dealloc__(self):
 *         del self.vals
 *     def set(self, newval):             # <<<<<<<<<<<<<<
 *         self.vals.clear()
 *         for f in newval: self.vals.push_back(f)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.FloatVectorValue.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":253
 *         self.vals.clear()
 *         for f in newval: self.vals.push_back(f)
 *     def get(self): return deref(self.vals)             # <<<<<<<<<<<<<<
 *     def size(self): return len(deref(self.vals))
 *     cdef vector[float]* addr(self): return self.vals
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16FloatVectorValue_7get(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16FloatVectorValue_7get(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16FloatVectorValue_6get(((struct __pyx_obj_5pycnn_FloatVectorValue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16FloatVectorValue_6get(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_float((*__pyx_v_self->vals)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.FloatVectorValue.get", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":254
 *         for f in newval: self.vals.push_back(f)
 *     def get(self): return deref(self.vals)
 *     def size(self): return len(deref(self.vals))             # <<<<<<<<<<<<<<
 *     cdef vector[float]* addr(self): return self.vals
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16FloatVectorValue_9size(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16FloatVectorValue_9size(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("size (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16FloatVectorValue_8size(((struct __pyx_obj_5pycnn_FloatVectorValue *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16FloatVectorValue_8size(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  __Pyx_RefNannySetupContext("size", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_float((*__pyx_v_self->vals)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.FloatVectorValue.size", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":255
 *     def get(self): return deref(self.vals)
 *     def size(self): return len(deref(self.vals))
 *     cdef vector[float]* addr(self): return self.vals             # <<<<<<<<<<<<<<
 * 
 * # }}}
 */

static std::vector<float>  *__pyx_f_5pycnn_16FloatVectorValue_addr(struct __pyx_obj_5pycnn_FloatVectorValue *__pyx_v_self) {
  std::vector<float>  *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addr", 0);
  __pyx_r = __pyx_v_self->vals;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":262
 * cdef ComputationGraph _cg = ComputationGraph(SECRET)
 * 
 * def cg_version(): return _cg._cg_version             # <<<<<<<<<<<<<<
 * def renew_cg(): return _cg.renew()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_1cg_version(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_1cg_version = {"cg_version", (PyCFunction)__pyx_pw_5pycnn_1cg_version, METH_NOARGS, 0};
static PyObject *__pyx_pw_5pycnn_1cg_version(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cg_version (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_cg_version(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_cg_version(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cg_version", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_5pycnn__cg->_cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.cg_version", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":263
 * 
 * def cg_version(): return _cg._cg_version
 * def renew_cg(): return _cg.renew()             # <<<<<<<<<<<<<<
 * 
 * cpdef ComputationGraph cg():
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_3renew_cg(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_3renew_cg = {"renew_cg", (PyCFunction)__pyx_pw_5pycnn_3renew_cg, METH_NOARGS, 0};
static PyObject *__pyx_pw_5pycnn_3renew_cg(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("renew_cg (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_2renew_cg(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_2renew_cg(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("renew_cg", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->renew(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.renew_cg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":265
 * def renew_cg(): return _cg.renew()
 * 
 * cpdef ComputationGraph cg():             # <<<<<<<<<<<<<<
 *     global _cg
 *     return _cg
 */

static PyObject *__pyx_pw_5pycnn_5cg(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static struct __pyx_obj_5pycnn_ComputationGraph *__pyx_f_5pycnn_cg(CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_ComputationGraph *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cg", 0);

  /* "pycnn.pyx":267
 * cpdef ComputationGraph cg():
 *     global _cg
 *     return _cg             # <<<<<<<<<<<<<<
 * 
 * cdef class ComputationGraph:
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_5pycnn__cg));
  __pyx_r = __pyx_v_5pycnn__cg;
  goto __pyx_L0;

  /* "pycnn.pyx":265
 * def renew_cg(): return _cg.renew()
 * 
 * cpdef ComputationGraph cg():             # <<<<<<<<<<<<<<
 *     global _cg
 *     return _cg
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_5cg(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_5cg(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cg (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_4cg(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_4cg(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cg", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_cg(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.cg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":273
 *     cdef list _inputs
 *     cdef int _cg_version
 *     def __cinit__(self, int guard=0):             # <<<<<<<<<<<<<<
 *         if guard != SECRET: raise RuntimeError("Do not instantiate ComputationGraph directly. Use pycnn.cg()")
 *         self.thisptr = new CComputationGraph()
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_16ComputationGraph_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_16ComputationGraph_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_guard;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_guard,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_guard);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 273, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_guard = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_guard == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 273, __pyx_L3_error)
    } else {
      __pyx_v_guard = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 273, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.ComputationGraph.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph___cinit__(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self), __pyx_v_guard);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_16ComputationGraph___cinit__(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_v_guard) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  cnn::ComputationGraph *__pyx_t_3;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":274
 *     cdef int _cg_version
 *     def __cinit__(self, int guard=0):
 *         if guard != SECRET: raise RuntimeError("Do not instantiate ComputationGraph directly. Use pycnn.cg()")             # <<<<<<<<<<<<<<
 *         self.thisptr = new CComputationGraph()
 *         self._inputs = []
 */
  __pyx_t_1 = ((__pyx_v_guard != __pyx_v_5pycnn_SECRET) != 0);
  if (__pyx_t_1) {
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 274, __pyx_L1_error)
  }

  /* "pycnn.pyx":275
 *     def __cinit__(self, int guard=0):
 *         if guard != SECRET: raise RuntimeError("Do not instantiate ComputationGraph directly. Use pycnn.cg()")
 *         self.thisptr = new CComputationGraph()             # <<<<<<<<<<<<<<
 *         self._inputs = []
 *         self._cg_version = 0
 */
  try {
    __pyx_t_3 = new cnn::ComputationGraph();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 275, __pyx_L1_error)
  }
  __pyx_v_self->thisptr = __pyx_t_3;

  /* "pycnn.pyx":276
 *         if guard != SECRET: raise RuntimeError("Do not instantiate ComputationGraph directly. Use pycnn.cg()")
 *         self.thisptr = new CComputationGraph()
 *         self._inputs = []             # <<<<<<<<<<<<<<
 *         self._cg_version = 0
 *     def __dealloc__(self):
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->_inputs);
  __Pyx_DECREF(__pyx_v_self->_inputs);
  __pyx_v_self->_inputs = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pycnn.pyx":277
 *         self.thisptr = new CComputationGraph()
 *         self._inputs = []
 *         self._cg_version = 0             # <<<<<<<<<<<<<<
 *     def __dealloc__(self):
 *         del self.thisptr
 */
  __pyx_v_self->_cg_version = 0;

  /* "pycnn.pyx":273
 *     cdef list _inputs
 *     cdef int _cg_version
 *     def __cinit__(self, int guard=0):             # <<<<<<<<<<<<<<
 *         if guard != SECRET: raise RuntimeError("Do not instantiate ComputationGraph directly. Use pycnn.cg()")
 *         self.thisptr = new CComputationGraph()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn.ComputationGraph.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":278
 *         self._inputs = []
 *         self._cg_version = 0
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_5pycnn_16ComputationGraph_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5pycnn_16ComputationGraph_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5pycnn_16ComputationGraph_2__dealloc__(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5pycnn_16ComputationGraph_2__dealloc__(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pycnn.pyx":279
 *         self._cg_version = 0
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cpdef renew(self):
 */
  delete __pyx_v_self->thisptr;

  /* "pycnn.pyx":278
 *         self._inputs = []
 *         self._cg_version = 0
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pycnn.pyx":281
 *         del self.thisptr
 * 
 *     cpdef renew(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = new CComputationGraph()
 */

static PyObject *__pyx_pw_5pycnn_16ComputationGraph_5renew(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_renew(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  cnn::ComputationGraph *__pyx_t_5;
  __Pyx_RefNannySetupContext("renew", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_renew); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_5renew)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 281, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 281, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":282
 * 
 *     cpdef renew(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         self.thisptr = new CComputationGraph()
 *         self._inputs = []
 */
  delete __pyx_v_self->thisptr;

  /* "pycnn.pyx":283
 *     cpdef renew(self):
 *         del self.thisptr
 *         self.thisptr = new CComputationGraph()             # <<<<<<<<<<<<<<
 *         self._inputs = []
 *         self._cg_version += 1
 */
  try {
    __pyx_t_5 = new cnn::ComputationGraph();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 283, __pyx_L1_error)
  }
  __pyx_v_self->thisptr = __pyx_t_5;

  /* "pycnn.pyx":284
 *         del self.thisptr
 *         self.thisptr = new CComputationGraph()
 *         self._inputs = []             # <<<<<<<<<<<<<<
 *         self._cg_version += 1
 *         return self
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_inputs);
  __Pyx_DECREF(__pyx_v_self->_inputs);
  __pyx_v_self->_inputs = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":285
 *         self.thisptr = new CComputationGraph()
 *         self._inputs = []
 *         self._cg_version += 1             # <<<<<<<<<<<<<<
 *         return self
 * 
 */
  __pyx_v_self->_cg_version = (__pyx_v_self->_cg_version + 1);

  /* "pycnn.pyx":286
 *         self._inputs = []
 *         self._cg_version += 1
 *         return self             # <<<<<<<<<<<<<<
 * 
 *     cpdef version(self): return self._cg_version
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "pycnn.pyx":281
 *         del self.thisptr
 * 
 *     cpdef renew(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         self.thisptr = new CComputationGraph()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.ComputationGraph.renew", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_5renew(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_5renew(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("renew (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_4renew(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_4renew(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("renew", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16ComputationGraph_renew(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.renew", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":288
 *         return self
 * 
 *     cpdef version(self): return self._cg_version             # <<<<<<<<<<<<<<
 * 
 *     def parameters(self, Parameters params):
 */

static PyObject *__pyx_pw_5pycnn_16ComputationGraph_7version(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_version(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("version", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 288, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_7version)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 288, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 288, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->_cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.ComputationGraph.version", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_7version(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_7version(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("version (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_6version(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_6version(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("version", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16ComputationGraph_version(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.version", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":290
 *     cpdef version(self): return self._cg_version
 * 
 *     def parameters(self, Parameters params):             # <<<<<<<<<<<<<<
 *         cdef Expression result
 *         result = Expression.from_cexpr(self._cg_version, c_parameter(self.thisptr[0], params.thisptr))
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_9parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_params); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_9parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_params) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parameters (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_params), __pyx_ptype_5pycnn_Parameters, 1, "params", 0))) __PYX_ERR(0, 290, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_8parameters(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self), ((struct __pyx_obj_5pycnn_Parameters *)__pyx_v_params));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_8parameters(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_obj_5pycnn_Parameters *__pyx_v_params) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("parameters", 0);

  /* "pycnn.pyx":292
 *     def parameters(self, Parameters params):
 *         cdef Expression result
 *         result = Expression.from_cexpr(self._cg_version, c_parameter(self.thisptr[0], params.thisptr))             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_self->_cg_version, cnn::expr::parameter((__pyx_v_self->thisptr[0]), __pyx_v_params->thisptr))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":293
 *         cdef Expression result
 *         result = Expression.from_cexpr(self._cg_version, c_parameter(self.thisptr[0], params.thisptr))
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     #def params_from_model(self, model):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "pycnn.pyx":290
 *     cpdef version(self): return self._cg_version
 * 
 *     def parameters(self, Parameters params):             # <<<<<<<<<<<<<<
 *         cdef Expression result
 *         result = Expression.from_cexpr(self._cg_version, c_parameter(self.thisptr[0], params.thisptr))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":303
 *     #    return results
 * 
 *     cpdef forward_scalar(self):             # <<<<<<<<<<<<<<
 *         return c_as_scalar(self.thisptr.forward())
 * 
 */

static PyObject *__pyx_pw_5pycnn_16ComputationGraph_11forward_scalar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_forward_scalar(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("forward_scalar", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_forward_scalar); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_11forward_scalar)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 303, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 303, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":304
 * 
 *     cpdef forward_scalar(self):
 *         return c_as_scalar(self.thisptr.forward())             # <<<<<<<<<<<<<<
 * 
 *     cpdef inc_forward_scalar(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(cnn::as_scalar(__pyx_v_self->thisptr->forward())); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":303
 *     #    return results
 * 
 *     cpdef forward_scalar(self):             # <<<<<<<<<<<<<<
 *         return c_as_scalar(self.thisptr.forward())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.ComputationGraph.forward_scalar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_11forward_scalar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_11forward_scalar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("forward_scalar (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_10forward_scalar(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_10forward_scalar(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("forward_scalar", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16ComputationGraph_forward_scalar(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.forward_scalar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":306
 *         return c_as_scalar(self.thisptr.forward())
 * 
 *     cpdef inc_forward_scalar(self):             # <<<<<<<<<<<<<<
 *         return c_as_scalar(self.thisptr.incremental_forward())
 * 
 */

static PyObject *__pyx_pw_5pycnn_16ComputationGraph_13inc_forward_scalar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_inc_forward_scalar(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("inc_forward_scalar", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_inc_forward_scalar); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_13inc_forward_scalar)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 306, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 306, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":307
 * 
 *     cpdef inc_forward_scalar(self):
 *         return c_as_scalar(self.thisptr.incremental_forward())             # <<<<<<<<<<<<<<
 * 
 *     cpdef forward_vec(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(cnn::as_scalar(__pyx_v_self->thisptr->incremental_forward())); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":306
 *         return c_as_scalar(self.thisptr.forward())
 * 
 *     cpdef inc_forward_scalar(self):             # <<<<<<<<<<<<<<
 *         return c_as_scalar(self.thisptr.incremental_forward())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.ComputationGraph.inc_forward_scalar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_13inc_forward_scalar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_13inc_forward_scalar(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inc_forward_scalar (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_12inc_forward_scalar(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_12inc_forward_scalar(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("inc_forward_scalar", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16ComputationGraph_inc_forward_scalar(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.inc_forward_scalar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":309
 *         return c_as_scalar(self.thisptr.incremental_forward())
 * 
 *     cpdef forward_vec(self):             # <<<<<<<<<<<<<<
 *         return c_as_vector(self.thisptr.forward())
 * 
 */

static PyObject *__pyx_pw_5pycnn_16ComputationGraph_15forward_vec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_forward_vec(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("forward_vec", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_forward_vec); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_15forward_vec)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":310
 * 
 *     cpdef forward_vec(self):
 *         return c_as_vector(self.thisptr.forward())             # <<<<<<<<<<<<<<
 * 
 *     cpdef inc_forward_vec(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_float(cnn::as_vector(__pyx_v_self->thisptr->forward())); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":309
 *         return c_as_scalar(self.thisptr.incremental_forward())
 * 
 *     cpdef forward_vec(self):             # <<<<<<<<<<<<<<
 *         return c_as_vector(self.thisptr.forward())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.ComputationGraph.forward_vec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_15forward_vec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_15forward_vec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("forward_vec (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_14forward_vec(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_14forward_vec(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("forward_vec", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16ComputationGraph_forward_vec(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.forward_vec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":312
 *         return c_as_vector(self.thisptr.forward())
 * 
 *     cpdef inc_forward_vec(self):             # <<<<<<<<<<<<<<
 *         return c_as_vector(self.thisptr.incremental_forward())
 * 
 */

static PyObject *__pyx_pw_5pycnn_16ComputationGraph_17inc_forward_vec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_inc_forward_vec(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("inc_forward_vec", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_inc_forward_vec); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 312, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_17inc_forward_vec)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 312, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 312, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":313
 * 
 *     cpdef inc_forward_vec(self):
 *         return c_as_vector(self.thisptr.incremental_forward())             # <<<<<<<<<<<<<<
 * 
 *     cpdef forward(self): self.thisptr.forward()
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_float(cnn::as_vector(__pyx_v_self->thisptr->incremental_forward())); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":312
 *         return c_as_vector(self.thisptr.forward())
 * 
 *     cpdef inc_forward_vec(self):             # <<<<<<<<<<<<<<
 *         return c_as_vector(self.thisptr.incremental_forward())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.ComputationGraph.inc_forward_vec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_17inc_forward_vec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_17inc_forward_vec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inc_forward_vec (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_16inc_forward_vec(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_16inc_forward_vec(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("inc_forward_vec", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16ComputationGraph_inc_forward_vec(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.inc_forward_vec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":315
 *         return c_as_vector(self.thisptr.incremental_forward())
 * 
 *     cpdef forward(self): self.thisptr.forward()             # <<<<<<<<<<<<<<
 *     cpdef inc_forward(self): self.thisptr.incremental_forward()
 * 
 */

static PyObject *__pyx_pw_5pycnn_16ComputationGraph_19forward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_forward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("forward", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_forward); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_19forward)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 315, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 315, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_v_self->thisptr->forward();

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.ComputationGraph.forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_19forward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_19forward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("forward (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_18forward(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_18forward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("forward", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16ComputationGraph_forward(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":316
 * 
 *     cpdef forward(self): self.thisptr.forward()
 *     cpdef inc_forward(self): self.thisptr.incremental_forward()             # <<<<<<<<<<<<<<
 * 
 *     cpdef backward(self):
 */

static PyObject *__pyx_pw_5pycnn_16ComputationGraph_21inc_forward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_inc_forward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("inc_forward", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_inc_forward); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_21inc_forward)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 316, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 316, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_v_self->thisptr->incremental_forward();

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.ComputationGraph.inc_forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_21inc_forward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_21inc_forward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inc_forward (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_20inc_forward(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_20inc_forward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("inc_forward", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16ComputationGraph_inc_forward(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.inc_forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":318
 *     cpdef inc_forward(self): self.thisptr.incremental_forward()
 * 
 *     cpdef backward(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.backward()
 * 
 */

static PyObject *__pyx_pw_5pycnn_16ComputationGraph_23backward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_backward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("backward", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_backward); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_23backward)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":319
 * 
 *     cpdef backward(self):
 *         self.thisptr.backward()             # <<<<<<<<<<<<<<
 * 
 *     cpdef PrintGraphviz(self):
 */
  __pyx_v_self->thisptr->backward();

  /* "pycnn.pyx":318
 *     cpdef inc_forward(self): self.thisptr.incremental_forward()
 * 
 *     cpdef backward(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.backward()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.ComputationGraph.backward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_23backward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_23backward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("backward (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_22backward(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_22backward(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("backward", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16ComputationGraph_backward(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.backward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":321
 *         self.thisptr.backward()
 * 
 *     cpdef PrintGraphviz(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.PrintGraphviz()
 * 
 */

static PyObject *__pyx_pw_5pycnn_16ComputationGraph_25PrintGraphviz(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16ComputationGraph_PrintGraphviz(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("PrintGraphviz", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_PrintGraphviz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 321, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_25PrintGraphviz)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 321, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 321, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":322
 * 
 *     cpdef PrintGraphviz(self):
 *         self.thisptr.PrintGraphviz()             # <<<<<<<<<<<<<<
 * 
 *     # CNN handles changing inputs keeping pointers to memoty locations.
 */
  __pyx_v_self->thisptr->PrintGraphviz();

  /* "pycnn.pyx":321
 *         self.thisptr.backward()
 * 
 *     cpdef PrintGraphviz(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.PrintGraphviz()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.ComputationGraph.PrintGraphviz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_25PrintGraphviz(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16ComputationGraph_25PrintGraphviz(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PrintGraphviz (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16ComputationGraph_24PrintGraphviz(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16ComputationGraph_24PrintGraphviz(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PrintGraphviz", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16ComputationGraph_PrintGraphviz(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.ComputationGraph.PrintGraphviz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":338
 *     # We have the classes UnsignedValue, FloatValue and FloatVectorValue for
 *     # this purpose.
 *     cdef inputValue(self, float v = 0.0):             # <<<<<<<<<<<<<<
 *         return _inputExpression(self, v)
 *     cdef inputVector(self, int dim):
 */

static PyObject *__pyx_f_5pycnn_16ComputationGraph_inputValue(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_opt_args_5pycnn_16ComputationGraph_inputValue *__pyx_optional_args) {
  float __pyx_v_v = ((float)0.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("inputValue", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_v = __pyx_optional_args->v;
    }
  }

  /* "pycnn.pyx":339
 *     # this purpose.
 *     cdef inputValue(self, float v = 0.0):
 *         return _inputExpression(self, v)             # <<<<<<<<<<<<<<
 *     cdef inputVector(self, int dim):
 *         return _vecInputExpression(self, vector[float](dim))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_v); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn__inputExpression), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":338
 *     # We have the classes UnsignedValue, FloatValue and FloatVectorValue for
 *     # this purpose.
 *     cdef inputValue(self, float v = 0.0):             # <<<<<<<<<<<<<<
 *         return _inputExpression(self, v)
 *     cdef inputVector(self, int dim):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn.ComputationGraph.inputValue", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":340
 *     cdef inputValue(self, float v = 0.0):
 *         return _inputExpression(self, v)
 *     cdef inputVector(self, int dim):             # <<<<<<<<<<<<<<
 *         return _vecInputExpression(self, vector[float](dim))
 *     cdef inputMatrix(self, int d1, int d2):
 */

static PyObject *__pyx_f_5pycnn_16ComputationGraph_inputVector(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_v_dim) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<float>  __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("inputVector", 0);

  /* "pycnn.pyx":341
 *         return _inputExpression(self, v)
 *     cdef inputVector(self, int dim):
 *         return _vecInputExpression(self, vector[float](dim))             # <<<<<<<<<<<<<<
 *     cdef inputMatrix(self, int d1, int d2):
 *         return _vecInputExpression(self, vector[float](d1*d2), (d1,d2))
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = std::vector<float> (__pyx_v_dim);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 341, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_convert_vector_to_py_float(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn__vecInputExpression), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":340
 *     cdef inputValue(self, float v = 0.0):
 *         return _inputExpression(self, v)
 *     cdef inputVector(self, int dim):             # <<<<<<<<<<<<<<
 *         return _vecInputExpression(self, vector[float](dim))
 *     cdef inputMatrix(self, int d1, int d2):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.ComputationGraph.inputVector", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":342
 *     cdef inputVector(self, int dim):
 *         return _vecInputExpression(self, vector[float](dim))
 *     cdef inputMatrix(self, int d1, int d2):             # <<<<<<<<<<<<<<
 *         return _vecInputExpression(self, vector[float](d1*d2), (d1,d2))
 *     cdef lookup(self, LookupParameters p, unsigned v = 0, update=True):
 */

static PyObject *__pyx_f_5pycnn_16ComputationGraph_inputMatrix(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, int __pyx_v_d1, int __pyx_v_d2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<float>  __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("inputMatrix", 0);

  /* "pycnn.pyx":343
 *         return _vecInputExpression(self, vector[float](dim))
 *     cdef inputMatrix(self, int d1, int d2):
 *         return _vecInputExpression(self, vector[float](d1*d2), (d1,d2))             # <<<<<<<<<<<<<<
 *     cdef lookup(self, LookupParameters p, unsigned v = 0, update=True):
 *         return _lookupExpression(self, p, v, update)
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = std::vector<float> ((__pyx_v_d1 * __pyx_v_d2));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 343, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_convert_vector_to_py_float(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_d1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_d2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn__vecInputExpression), __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":342
 *     cdef inputVector(self, int dim):
 *         return _vecInputExpression(self, vector[float](dim))
 *     cdef inputMatrix(self, int d1, int d2):             # <<<<<<<<<<<<<<
 *         return _vecInputExpression(self, vector[float](d1*d2), (d1,d2))
 *     cdef lookup(self, LookupParameters p, unsigned v = 0, update=True):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.ComputationGraph.inputMatrix", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":344
 *     cdef inputMatrix(self, int d1, int d2):
 *         return _vecInputExpression(self, vector[float](d1*d2), (d1,d2))
 *     cdef lookup(self, LookupParameters p, unsigned v = 0, update=True):             # <<<<<<<<<<<<<<
 *         return _lookupExpression(self, p, v, update)
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):
 */

static PyObject *__pyx_f_5pycnn_16ComputationGraph_lookup(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup *__pyx_optional_args) {
  unsigned int __pyx_v_v = ((unsigned int)0);
  PyObject *__pyx_v_update = ((PyObject *)Py_True);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("lookup", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_v = __pyx_optional_args->v;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_update = __pyx_optional_args->update;
      }
    }
  }

  /* "pycnn.pyx":345
 *         return _vecInputExpression(self, vector[float](d1*d2), (d1,d2))
 *     cdef lookup(self, LookupParameters p, unsigned v = 0, update=True):
 *         return _lookupExpression(self, p, v, update)             # <<<<<<<<<<<<<<
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):
 *         return _lookupBatchExpression(self, p, vs, update)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_v); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(((PyObject *)__pyx_v_p));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_p));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_p));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_update);
  __Pyx_GIVEREF(__pyx_v_update);
  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_v_update);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn__lookupExpression), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":344
 *     cdef inputMatrix(self, int d1, int d2):
 *         return _vecInputExpression(self, vector[float](d1*d2), (d1,d2))
 *     cdef lookup(self, LookupParameters p, unsigned v = 0, update=True):             # <<<<<<<<<<<<<<
 *         return _lookupExpression(self, p, v, update)
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn.ComputationGraph.lookup", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":346
 *     cdef lookup(self, LookupParameters p, unsigned v = 0, update=True):
 *         return _lookupExpression(self, p, v, update)
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):             # <<<<<<<<<<<<<<
 *         return _lookupBatchExpression(self, p, vs, update)
 *     cdef outputPicker(self, Expression e, unsigned v=0):
 */

static PyObject *__pyx_f_5pycnn_16ComputationGraph_lookup_batch(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, std::vector<unsigned int>  __pyx_v_vs, struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup_batch *__pyx_optional_args) {
  PyObject *__pyx_v_update = ((PyObject *)Py_True);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("lookup_batch", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_update = __pyx_optional_args->update;
    }
  }

  /* "pycnn.pyx":347
 *         return _lookupExpression(self, p, v, update)
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):
 *         return _lookupBatchExpression(self, p, vs, update)             # <<<<<<<<<<<<<<
 *     cdef outputPicker(self, Expression e, unsigned v=0):
 *         r = _pickerExpression(self, e, v)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_unsigned_int(__pyx_v_vs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(((PyObject *)__pyx_v_p));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_p));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_p));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_update);
  __Pyx_GIVEREF(__pyx_v_update);
  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_v_update);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn__lookupBatchExpression), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":346
 *     cdef lookup(self, LookupParameters p, unsigned v = 0, update=True):
 *         return _lookupExpression(self, p, v, update)
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):             # <<<<<<<<<<<<<<
 *         return _lookupBatchExpression(self, p, vs, update)
 *     cdef outputPicker(self, Expression e, unsigned v=0):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn.ComputationGraph.lookup_batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":348
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):
 *         return _lookupBatchExpression(self, p, vs, update)
 *     cdef outputPicker(self, Expression e, unsigned v=0):             # <<<<<<<<<<<<<<
 *         r = _pickerExpression(self, e, v)
 *         return r
 */

static PyObject *__pyx_f_5pycnn_16ComputationGraph_outputPicker(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, struct __pyx_opt_args_5pycnn_16ComputationGraph_outputPicker *__pyx_optional_args) {
  unsigned int __pyx_v_v = ((unsigned int)0);
  struct __pyx_obj_5pycnn__pickerExpression *__pyx_v_r = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("outputPicker", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_v = __pyx_optional_args->v;
    }
  }

  /* "pycnn.pyx":349
 *         return _lookupBatchExpression(self, p, vs, update)
 *     cdef outputPicker(self, Expression e, unsigned v=0):
 *         r = _pickerExpression(self, e, v)             # <<<<<<<<<<<<<<
 *         return r
 *     cdef outputBatchPicker(self, Expression e, vector[unsigned] vs):
 */
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_v); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(((PyObject *)__pyx_v_e));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_e));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_e));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn__pickerExpression), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_r = ((struct __pyx_obj_5pycnn__pickerExpression *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":350
 *     cdef outputPicker(self, Expression e, unsigned v=0):
 *         r = _pickerExpression(self, e, v)
 *         return r             # <<<<<<<<<<<<<<
 *     cdef outputBatchPicker(self, Expression e, vector[unsigned] vs):
 *         r = _pickerBatchExpression(self, e, vs)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_r));
  __pyx_r = ((PyObject *)__pyx_v_r);
  goto __pyx_L0;

  /* "pycnn.pyx":348
 *     cdef lookup_batch(self, LookupParameters p, vector[unsigned] vs, update=True):
 *         return _lookupBatchExpression(self, p, vs, update)
 *     cdef outputPicker(self, Expression e, unsigned v=0):             # <<<<<<<<<<<<<<
 *         r = _pickerExpression(self, e, v)
 *         return r
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn.ComputationGraph.outputPicker", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":351
 *         r = _pickerExpression(self, e, v)
 *         return r
 *     cdef outputBatchPicker(self, Expression e, vector[unsigned] vs):             # <<<<<<<<<<<<<<
 *         r = _pickerBatchExpression(self, e, vs)
 *         return r
 */

static PyObject *__pyx_f_5pycnn_16ComputationGraph_outputBatchPicker(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, std::vector<unsigned int>  __pyx_v_vs) {
  struct __pyx_obj_5pycnn__pickerBatchExpression *__pyx_v_r = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("outputBatchPicker", 0);

  /* "pycnn.pyx":352
 *         return r
 *     cdef outputBatchPicker(self, Expression e, vector[unsigned] vs):
 *         r = _pickerBatchExpression(self, e, vs)             # <<<<<<<<<<<<<<
 *         return r
 * 
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_unsigned_int(__pyx_v_vs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(((PyObject *)__pyx_v_e));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_e));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_e));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn__pickerBatchExpression), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_r = ((struct __pyx_obj_5pycnn__pickerBatchExpression *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":353
 *     cdef outputBatchPicker(self, Expression e, vector[unsigned] vs):
 *         r = _pickerBatchExpression(self, e, vs)
 *         return r             # <<<<<<<<<<<<<<
 * 
 * # }}}
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_r));
  __pyx_r = ((PyObject *)__pyx_v_r);
  goto __pyx_L0;

  /* "pycnn.pyx":351
 *         r = _pickerExpression(self, e, v)
 *         return r
 *     cdef outputBatchPicker(self, Expression e, vector[unsigned] vs):             # <<<<<<<<<<<<<<
 *         r = _pickerBatchExpression(self, e, vs)
 *         return r
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn.ComputationGraph.outputBatchPicker", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":358
 * 
 * #{{{ Expressions
 * cdef ensure_freshness(Expression a):             # <<<<<<<<<<<<<<
 *     if a.cg_version != _cg.version(): raise ValueError("Attempt to use a stale expression.")
 * 
 */

static PyObject *__pyx_f_5pycnn_ensure_freshness(struct __pyx_obj_5pycnn_Expression *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("ensure_freshness", 0);

  /* "pycnn.pyx":359
 * #{{{ Expressions
 * cdef ensure_freshness(Expression a):
 *     if a.cg_version != _cg.version(): raise ValueError("Attempt to use a stale expression.")             # <<<<<<<<<<<<<<
 * 
 * cdef _add(Expression a, Expression b): ensure_freshness(b); return Expression.from_cexpr(a.cg_version, c_op_add(a.c(), b.c()))
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_a->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 359, __pyx_L1_error)
  }

  /* "pycnn.pyx":358
 * 
 * #{{{ Expressions
 * cdef ensure_freshness(Expression a):             # <<<<<<<<<<<<<<
 *     if a.cg_version != _cg.version(): raise ValueError("Attempt to use a stale expression.")
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.ensure_freshness", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":361
 *     if a.cg_version != _cg.version(): raise ValueError("Attempt to use a stale expression.")
 * 
 * cdef _add(Expression a, Expression b): ensure_freshness(b); return Expression.from_cexpr(a.cg_version, c_op_add(a.c(), b.c()))             # <<<<<<<<<<<<<<
 * cdef _mul(Expression a, Expression b): ensure_freshness(b); return Expression.from_cexpr(a.cg_version, c_op_mul(a.c(), b.c()))
 * cdef _neg(Expression a): return Expression.from_cexpr(a.cg_version, c_op_neg(a.c()))
 */

static PyObject *__pyx_f_5pycnn__add(struct __pyx_obj_5pycnn_Expression *__pyx_v_a, struct __pyx_obj_5pycnn_Expression *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("_add", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_b); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_a->cg_version, cnn::expr::operator+(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_a->__pyx_vtab)->c(__pyx_v_a), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_b->__pyx_vtab)->c(__pyx_v_b)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn._add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":362
 * 
 * cdef _add(Expression a, Expression b): ensure_freshness(b); return Expression.from_cexpr(a.cg_version, c_op_add(a.c(), b.c()))
 * cdef _mul(Expression a, Expression b): ensure_freshness(b); return Expression.from_cexpr(a.cg_version, c_op_mul(a.c(), b.c()))             # <<<<<<<<<<<<<<
 * cdef _neg(Expression a): return Expression.from_cexpr(a.cg_version, c_op_neg(a.c()))
 * cdef _scalarsub(float a, Expression b): ensure_freshness(b); return Expression.from_cexpr(b.cg_version, c_op_scalar_sub(a, b.c()))
 */

static PyObject *__pyx_f_5pycnn__mul(struct __pyx_obj_5pycnn_Expression *__pyx_v_a, struct __pyx_obj_5pycnn_Expression *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("_mul", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_b); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_a->cg_version, cnn::expr::operator*(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_a->__pyx_vtab)->c(__pyx_v_a), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_b->__pyx_vtab)->c(__pyx_v_b)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn._mul", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":363
 * cdef _add(Expression a, Expression b): ensure_freshness(b); return Expression.from_cexpr(a.cg_version, c_op_add(a.c(), b.c()))
 * cdef _mul(Expression a, Expression b): ensure_freshness(b); return Expression.from_cexpr(a.cg_version, c_op_mul(a.c(), b.c()))
 * cdef _neg(Expression a): return Expression.from_cexpr(a.cg_version, c_op_neg(a.c()))             # <<<<<<<<<<<<<<
 * cdef _scalarsub(float a, Expression b): ensure_freshness(b); return Expression.from_cexpr(b.cg_version, c_op_scalar_sub(a, b.c()))
 * cdef _cadd(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_add(a.c(), b))
 */

static PyObject *__pyx_f_5pycnn__neg(struct __pyx_obj_5pycnn_Expression *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("_neg", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_a->cg_version, cnn::expr::operator-(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_a->__pyx_vtab)->c(__pyx_v_a)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn._neg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":364
 * cdef _mul(Expression a, Expression b): ensure_freshness(b); return Expression.from_cexpr(a.cg_version, c_op_mul(a.c(), b.c()))
 * cdef _neg(Expression a): return Expression.from_cexpr(a.cg_version, c_op_neg(a.c()))
 * cdef _scalarsub(float a, Expression b): ensure_freshness(b); return Expression.from_cexpr(b.cg_version, c_op_scalar_sub(a, b.c()))             # <<<<<<<<<<<<<<
 * cdef _cadd(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_add(a.c(), b))
 * cdef _cmul(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_mul(a.c(), b))
 */

static PyObject *__pyx_f_5pycnn__scalarsub(float __pyx_v_a, struct __pyx_obj_5pycnn_Expression *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("_scalarsub", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_b); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_b->cg_version, cnn::expr::operator-(__pyx_v_a, ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_b->__pyx_vtab)->c(__pyx_v_b)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 364, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn._scalarsub", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":365
 * cdef _neg(Expression a): return Expression.from_cexpr(a.cg_version, c_op_neg(a.c()))
 * cdef _scalarsub(float a, Expression b): ensure_freshness(b); return Expression.from_cexpr(b.cg_version, c_op_scalar_sub(a, b.c()))
 * cdef _cadd(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_add(a.c(), b))             # <<<<<<<<<<<<<<
 * cdef _cmul(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_mul(a.c(), b))
 * cdef _cdiv(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_div(a.c(), b))
 */

static PyObject *__pyx_f_5pycnn__cadd(struct __pyx_obj_5pycnn_Expression *__pyx_v_a, float __pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("_cadd", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_a->cg_version, cnn::expr::operator+(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_a->__pyx_vtab)->c(__pyx_v_a), __pyx_v_b))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 365, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn._cadd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":366
 * cdef _scalarsub(float a, Expression b): ensure_freshness(b); return Expression.from_cexpr(b.cg_version, c_op_scalar_sub(a, b.c()))
 * cdef _cadd(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_add(a.c(), b))
 * cdef _cmul(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_mul(a.c(), b))             # <<<<<<<<<<<<<<
 * cdef _cdiv(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_div(a.c(), b))
 * 
 */

static PyObject *__pyx_f_5pycnn__cmul(struct __pyx_obj_5pycnn_Expression *__pyx_v_a, float __pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("_cmul", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_a->cg_version, cnn::expr::operator*(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_a->__pyx_vtab)->c(__pyx_v_a), __pyx_v_b))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn._cmul", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":367
 * cdef _cadd(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_add(a.c(), b))
 * cdef _cmul(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_mul(a.c(), b))
 * cdef _cdiv(Expression a, float b): return Expression.from_cexpr(a.cg_version, c_op_scalar_div(a.c(), b))             # <<<<<<<<<<<<<<
 * 
 * cdef class Expression: #{{{
 */

static PyObject *__pyx_f_5pycnn__cdiv(struct __pyx_obj_5pycnn_Expression *__pyx_v_a, float __pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("_cdiv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_a->cg_version, cnn::expr::operator/(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_a->__pyx_vtab)->c(__pyx_v_a), __pyx_v_b))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn._cdiv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":374
 *     # not keeping cg() in the expression will preserve memory.
 *     # if CNN comes to support multiple computation graphs, this will need to change.
 *     cdef inline ComputationGraph cg(self):             # <<<<<<<<<<<<<<
 *         return cg()
 *     cdef inline CComputationGraph* cgp(self):
 */

static CYTHON_INLINE struct __pyx_obj_5pycnn_ComputationGraph *__pyx_f_5pycnn_10Expression_cg(CYTHON_UNUSED struct __pyx_obj_5pycnn_Expression *__pyx_v_self) {
  struct __pyx_obj_5pycnn_ComputationGraph *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cg", 0);

  /* "pycnn.pyx":375
 *     # if CNN comes to support multiple computation graphs, this will need to change.
 *     cdef inline ComputationGraph cg(self):
 *         return cg()             # <<<<<<<<<<<<<<
 *     cdef inline CComputationGraph* cgp(self):
 *         return cg().thisptr
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_cg(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":374
 *     # not keeping cg() in the expression will preserve memory.
 *     # if CNN comes to support multiple computation graphs, this will need to change.
 *     cdef inline ComputationGraph cg(self):             # <<<<<<<<<<<<<<
 *         return cg()
 *     cdef inline CComputationGraph* cgp(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Expression.cg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":376
 *     cdef inline ComputationGraph cg(self):
 *         return cg()
 *     cdef inline CComputationGraph* cgp(self):             # <<<<<<<<<<<<<<
 *         return cg().thisptr
 * 
 */

static CYTHON_INLINE cnn::ComputationGraph *__pyx_f_5pycnn_10Expression_cgp(CYTHON_UNUSED struct __pyx_obj_5pycnn_Expression *__pyx_v_self) {
  cnn::ComputationGraph *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cgp", 0);

  /* "pycnn.pyx":377
 *         return cg()
 *     cdef inline CComputationGraph* cgp(self):
 *         return cg().thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef VariableIndex vindex
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_cg(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1)->thisptr;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":376
 *     cdef inline ComputationGraph cg(self):
 *         return cg()
 *     cdef inline CComputationGraph* cgp(self):             # <<<<<<<<<<<<<<
 *         return cg().thisptr
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_WriteUnraisable("pycnn.Expression.cgp", __pyx_clineno, __pyx_lineno, __pyx_filename, 0, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":381
 *     cdef VariableIndex vindex
 *     cdef int cg_version
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         #self.cg = NULL
 *         self.vindex = 0
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_10Expression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_10Expression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_5pycnn_10Expression___cinit__(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_10Expression___cinit__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":383
 *     def __cinit__(self):
 *         #self.cg = NULL
 *         self.vindex = 0             # <<<<<<<<<<<<<<
 *     @staticmethod
 *     cdef Expression from_cexpr(int cgv, CExpression cexpr):
 */
  __pyx_v_self->vindex = 0;

  /* "pycnn.pyx":381
 *     cdef VariableIndex vindex
 *     cdef int cg_version
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         #self.cg = NULL
 *         self.vindex = 0
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":385
 *         self.vindex = 0
 *     @staticmethod
 *     cdef Expression from_cexpr(int cgv, CExpression cexpr):             # <<<<<<<<<<<<<<
 *         if cgv != _cg._cg_version: raise ValueError("Attempt to use a stale expression, from a previous Computation Graph.")
 *         self = Expression()
 */

static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_10Expression_from_cexpr(int __pyx_v_cgv, cnn::expr::Expression __pyx_v_cexpr) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_self = NULL;
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  long __pyx_t_3;
  __Pyx_RefNannySetupContext("from_cexpr", 0);

  /* "pycnn.pyx":386
 *     @staticmethod
 *     cdef Expression from_cexpr(int cgv, CExpression cexpr):
 *         if cgv != _cg._cg_version: raise ValueError("Attempt to use a stale expression, from a previous Computation Graph.")             # <<<<<<<<<<<<<<
 *         self = Expression()
 *         #self.cg = cexpr.pg
 */
  __pyx_t_1 = ((__pyx_v_cgv != __pyx_v_5pycnn__cg->_cg_version) != 0);
  if (__pyx_t_1) {
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 386, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 386, __pyx_L1_error)
  }

  /* "pycnn.pyx":387
 *     cdef Expression from_cexpr(int cgv, CExpression cexpr):
 *         if cgv != _cg._cg_version: raise ValueError("Attempt to use a stale expression, from a previous Computation Graph.")
 *         self = Expression()             # <<<<<<<<<<<<<<
 *         #self.cg = cexpr.pg
 *         self.vindex = cexpr.i
 */
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_Expression), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_self = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pycnn.pyx":389
 *         self = Expression()
 *         #self.cg = cexpr.pg
 *         self.vindex = cexpr.i             # <<<<<<<<<<<<<<
 *         self.cg_version = cgv
 *         return self
 */
  __pyx_t_3 = __pyx_v_cexpr.i;
  __pyx_v_self->vindex = __pyx_t_3;

  /* "pycnn.pyx":390
 *         #self.cg = cexpr.pg
 *         self.vindex = cexpr.i
 *         self.cg_version = cgv             # <<<<<<<<<<<<<<
 *         return self
 *     cdef CExpression c(self):
 */
  __pyx_v_self->cg_version = __pyx_v_cgv;

  /* "pycnn.pyx":391
 *         self.vindex = cexpr.i
 *         self.cg_version = cgv
 *         return self             # <<<<<<<<<<<<<<
 *     cdef CExpression c(self):
 *         return CExpression(self.cgp(), self.vindex)
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = __pyx_v_self;
  goto __pyx_L0;

  /* "pycnn.pyx":385
 *         self.vindex = 0
 *     @staticmethod
 *     cdef Expression from_cexpr(int cgv, CExpression cexpr):             # <<<<<<<<<<<<<<
 *         if cgv != _cg._cg_version: raise ValueError("Attempt to use a stale expression, from a previous Computation Graph.")
 *         self = Expression()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn.Expression.from_cexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_self);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":392
 *         self.cg_version = cgv
 *         return self
 *     cdef CExpression c(self):             # <<<<<<<<<<<<<<
 *         return CExpression(self.cgp(), self.vindex)
 * 
 */

static cnn::expr::Expression __pyx_f_5pycnn_10Expression_c(struct __pyx_obj_5pycnn_Expression *__pyx_v_self) {
  cnn::expr::Expression __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("c", 0);

  /* "pycnn.pyx":393
 *         return self
 *     cdef CExpression c(self):
 *         return CExpression(self.cgp(), self.vindex)             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_r = cnn::expr::Expression(__pyx_f_5pycnn_10Expression_cgp(__pyx_v_self), __pyx_v_self->vindex);
  goto __pyx_L0;

  /* "pycnn.pyx":392
 *         self.cg_version = cgv
 *         return self
 *     cdef CExpression c(self):             # <<<<<<<<<<<<<<
 *         return CExpression(self.cgp(), self.vindex)
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":395
 *         return CExpression(self.cgp(), self.vindex)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return str(self)
 *     def __str__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Expression_2__repr__(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_2__repr__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "pycnn.pyx":396
 * 
 *     def __repr__(self):
 *         return str(self)             # <<<<<<<<<<<<<<
 *     def __str__(self):
 *         return "exprssion %s/%s" % (<int>self.vindex, self.cg_version)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self));
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&PyString_Type)), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":395
 *         return CExpression(self.cgp(), self.vindex)
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return str(self)
 *     def __str__(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn.Expression.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":397
 *     def __repr__(self):
 *         return str(self)
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "exprssion %s/%s" % (<int>self.vindex, self.cg_version)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_5__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_5__str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Expression_4__str__(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_4__str__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "pycnn.pyx":398
 *         return str(self)
 *     def __str__(self):
 *         return "exprssion %s/%s" % (<int>self.vindex, self.cg_version)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, int i):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(((int)__pyx_v_self->vindex)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_exprssion_s_s, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":397
 *     def __repr__(self):
 *         return str(self)
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "exprssion %s/%s" % (<int>self.vindex, self.cg_version)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.Expression.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":400
 *         return "exprssion %s/%s" % (<int>self.vindex, self.cg_version)
 * 
 *     def __getitem__(self, int i):             # <<<<<<<<<<<<<<
 *         return pick(self, i)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_7__getitem__(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 400, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.Expression.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_10Expression_6__getitem__(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_6__getitem__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "pycnn.pyx":401
 * 
 *     def __getitem__(self, int i):
 *         return pick(self, i)             # <<<<<<<<<<<<<<
 * 
 *     def __getslice__(self, int i, int j):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_pick); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (__pyx_t_4) {
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
  }
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":400
 *         return "exprssion %s/%s" % (<int>self.vindex, self.cg_version)
 * 
 *     def __getitem__(self, int i):             # <<<<<<<<<<<<<<
 *         return pick(self, i)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.Expression.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":403
 *         return pick(self, i)
 * 
 *     def __getslice__(self, int i, int j):             # <<<<<<<<<<<<<<
 *         return pickrange(self, i, j)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_9__getslice__(PyObject *__pyx_v_self, Py_ssize_t __pyx_arg_i, Py_ssize_t __pyx_arg_j); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_9__getslice__(PyObject *__pyx_v_self, Py_ssize_t __pyx_arg_i, Py_ssize_t __pyx_arg_j) {
  int __pyx_v_i;
  int __pyx_v_j;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getslice__ (wrapper)", 0);
  __pyx_v_i = __pyx_arg_i;
  __pyx_v_j = __pyx_arg_j;
  __pyx_r = __pyx_pf_5pycnn_10Expression_8__getslice__(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), ((int)__pyx_v_i), ((int)__pyx_v_j));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_8__getslice__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_v_i, int __pyx_v_j) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__getslice__", 0);

  /* "pycnn.pyx":404
 * 
 *     def __getslice__(self, int i, int j):
 *         return pickrange(self, i, j)             # <<<<<<<<<<<<<<
 * 
 *     cpdef scalar_value(self, recalculate=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_pickrange(__pyx_v_self, __pyx_v_i, __pyx_v_j, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":403
 *         return pick(self, i)
 * 
 *     def __getslice__(self, int i, int j):             # <<<<<<<<<<<<<<
 *         return pickrange(self, i, j)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Expression.__getslice__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":406
 *         return pickrange(self, i, j)
 * 
 *     cpdef scalar_value(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 */

static PyObject *__pyx_pw_5pycnn_10Expression_11scalar_value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_10Expression_scalar_value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_scalar_value *__pyx_optional_args) {
  PyObject *__pyx_v_recalculate = ((PyObject *)Py_False);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("scalar_value", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_recalculate = __pyx_optional_args->recalculate;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_scalar_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10Expression_11scalar_value)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_recalculate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 406, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 406, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_recalculate);
        __Pyx_GIVEREF(__pyx_v_recalculate);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_recalculate);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 406, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":407
 * 
 *     cpdef scalar_value(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         if recalculate: self.cg().forward()
 *         return c_as_scalar(self.cgp().get_value(self.vindex))
 */
  __pyx_t_6 = ((__pyx_v_self->cg_version != __pyx_v_5pycnn__cg->_cg_version) != 0);
  if (__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 407, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 407, __pyx_L1_error)
  }

  /* "pycnn.pyx":408
 *     cpdef scalar_value(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()             # <<<<<<<<<<<<<<
 *         return c_as_scalar(self.cgp().get_value(self.vindex))
 * 
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_recalculate); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 408, __pyx_L1_error)
  if (__pyx_t_6) {
    __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_cg(__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 408, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1)->__pyx_vtab)->forward(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1), 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 408, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }

  /* "pycnn.pyx":409
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 *         return c_as_scalar(self.cgp().get_value(self.vindex))             # <<<<<<<<<<<<<<
 * 
 *     cpdef vec_value(self, recalculate=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble(cnn::as_scalar(__pyx_f_5pycnn_10Expression_cgp(__pyx_v_self)->get_value(__pyx_v_self->vindex))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 409, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":406
 *         return pickrange(self, i, j)
 * 
 *     cpdef scalar_value(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.Expression.scalar_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_11scalar_value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_11scalar_value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_recalculate = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scalar_value (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_recalculate,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_recalculate);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scalar_value") < 0)) __PYX_ERR(0, 406, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_recalculate = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scalar_value", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 406, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.Expression.scalar_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_10Expression_10scalar_value(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), __pyx_v_recalculate);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_10scalar_value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, PyObject *__pyx_v_recalculate) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_10Expression_scalar_value __pyx_t_2;
  __Pyx_RefNannySetupContext("scalar_value", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.recalculate = __pyx_v_recalculate;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_Expression->scalar_value(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Expression.scalar_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":411
 *         return c_as_scalar(self.cgp().get_value(self.vindex))
 * 
 *     cpdef vec_value(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 */

static PyObject *__pyx_pw_5pycnn_10Expression_13vec_value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_10Expression_vec_value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_vec_value *__pyx_optional_args) {
  PyObject *__pyx_v_recalculate = ((PyObject *)Py_False);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("vec_value", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_recalculate = __pyx_optional_args->recalculate;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_vec_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 411, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10Expression_13vec_value)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_recalculate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_recalculate);
        __Pyx_GIVEREF(__pyx_v_recalculate);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_recalculate);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 411, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":412
 * 
 *     cpdef vec_value(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         if recalculate: self.cg().forward()
 *         return c_as_vector(self.cgp().get_value(self.vindex))
 */
  __pyx_t_6 = ((__pyx_v_self->cg_version != __pyx_v_5pycnn__cg->_cg_version) != 0);
  if (__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 412, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 412, __pyx_L1_error)
  }

  /* "pycnn.pyx":413
 *     cpdef vec_value(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()             # <<<<<<<<<<<<<<
 *         return c_as_vector(self.cgp().get_value(self.vindex))
 * 
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_recalculate); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 413, __pyx_L1_error)
  if (__pyx_t_6) {
    __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_cg(__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 413, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1)->__pyx_vtab)->forward(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1), 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 413, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }

  /* "pycnn.pyx":414
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 *         return c_as_vector(self.cgp().get_value(self.vindex))             # <<<<<<<<<<<<<<
 * 
 *     cpdef npvalue(self, recalculate=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_convert_vector_to_py_float(cnn::as_vector(__pyx_f_5pycnn_10Expression_cgp(__pyx_v_self)->get_value(__pyx_v_self->vindex))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":411
 *         return c_as_scalar(self.cgp().get_value(self.vindex))
 * 
 *     cpdef vec_value(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.Expression.vec_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_13vec_value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_13vec_value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_recalculate = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vec_value (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_recalculate,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_recalculate);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "vec_value") < 0)) __PYX_ERR(0, 411, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_recalculate = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("vec_value", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 411, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.Expression.vec_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_10Expression_12vec_value(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), __pyx_v_recalculate);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_12vec_value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, PyObject *__pyx_v_recalculate) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_10Expression_vec_value __pyx_t_2;
  __Pyx_RefNannySetupContext("vec_value", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.recalculate = __pyx_v_recalculate;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_Expression->vec_value(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Expression.vec_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":416
 *         return c_as_vector(self.cgp().get_value(self.vindex))
 * 
 *     cpdef npvalue(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         cdef CTensor t
 */

static PyObject *__pyx_pw_5pycnn_10Expression_15npvalue(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_10Expression_npvalue(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_npvalue *__pyx_optional_args) {
  PyObject *__pyx_v_recalculate = ((PyObject *)Py_False);
  cnn::Tensor __pyx_v_t;
  cnn::Dim __pyx_v_dim;
  PyObject *__pyx_v_arr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  cnn::Dim __pyx_t_7;
  __Pyx_RefNannySetupContext("npvalue", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_recalculate = __pyx_optional_args->recalculate;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_npvalue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10Expression_15npvalue)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_recalculate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 416, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 416, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_recalculate);
        __Pyx_GIVEREF(__pyx_v_recalculate);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_recalculate);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 416, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":417
 * 
 *     cpdef npvalue(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         cdef CTensor t
 *         cdef CDim dim
 */
  __pyx_t_6 = ((__pyx_v_self->cg_version != __pyx_v_5pycnn__cg->_cg_version) != 0);
  if (__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 417, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 417, __pyx_L1_error)
  }

  /* "pycnn.pyx":420
 *         cdef CTensor t
 *         cdef CDim dim
 *         if recalculate: self.cg().forward()             # <<<<<<<<<<<<<<
 *         t = self.cgp().get_value(self.vindex)
 *         dim = t.d
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_recalculate); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 420, __pyx_L1_error)
  if (__pyx_t_6) {
    __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_cg(__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 420, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1)->__pyx_vtab)->forward(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1), 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 420, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }

  /* "pycnn.pyx":421
 *         cdef CDim dim
 *         if recalculate: self.cg().forward()
 *         t = self.cgp().get_value(self.vindex)             # <<<<<<<<<<<<<<
 *         dim = t.d
 *         arr = np.array(c_as_vector(t))
 */
  __pyx_v_t = __pyx_f_5pycnn_10Expression_cgp(__pyx_v_self)->get_value(__pyx_v_self->vindex);

  /* "pycnn.pyx":422
 *         if recalculate: self.cg().forward()
 *         t = self.cgp().get_value(self.vindex)
 *         dim = t.d             # <<<<<<<<<<<<<<
 *         arr = np.array(c_as_vector(t))
 *         if dim.ndims() == 2:
 */
  __pyx_t_7 = __pyx_v_t.d;
  __pyx_v_dim = __pyx_t_7;

  /* "pycnn.pyx":423
 *         t = self.cgp().get_value(self.vindex)
 *         dim = t.d
 *         arr = np.array(c_as_vector(t))             # <<<<<<<<<<<<<<
 *         if dim.ndims() == 2:
 *             arr = arr.reshape(dim.rows(), dim.cols(),order='F')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __pyx_convert_vector_to_py_float(cnn::as_vector(__pyx_v_t)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_5) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 423, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 423, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 423, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_arr = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pycnn.pyx":424
 *         dim = t.d
 *         arr = np.array(c_as_vector(t))
 *         if dim.ndims() == 2:             # <<<<<<<<<<<<<<
 *             arr = arr.reshape(dim.rows(), dim.cols(),order='F')
 *         return arr
 */
  __pyx_t_6 = ((__pyx_v_dim.ndims() == 2) != 0);
  if (__pyx_t_6) {

    /* "pycnn.pyx":425
 *         arr = np.array(c_as_vector(t))
 *         if dim.ndims() == 2:
 *             arr = arr.reshape(dim.rows(), dim.cols(),order='F')             # <<<<<<<<<<<<<<
 *         return arr
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_arr, __pyx_n_s_reshape); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_dim.rows()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_dim.cols()); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_4);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_order, __pyx_n_s_F) < 0) __PYX_ERR(0, 425, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_arr, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "pycnn.pyx":424
 *         dim = t.d
 *         arr = np.array(c_as_vector(t))
 *         if dim.ndims() == 2:             # <<<<<<<<<<<<<<
 *             arr = arr.reshape(dim.rows(), dim.cols(),order='F')
 *         return arr
 */
  }

  /* "pycnn.pyx":426
 *         if dim.ndims() == 2:
 *             arr = arr.reshape(dim.rows(), dim.cols(),order='F')
 *         return arr             # <<<<<<<<<<<<<<
 * 
 *     cpdef value(self, recalculate=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_arr);
  __pyx_r = __pyx_v_arr;
  goto __pyx_L0;

  /* "pycnn.pyx":416
 *         return c_as_vector(self.cgp().get_value(self.vindex))
 * 
 *     cpdef npvalue(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         cdef CTensor t
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.Expression.npvalue", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_arr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_15npvalue(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_15npvalue(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_recalculate = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("npvalue (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_recalculate,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_recalculate);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "npvalue") < 0)) __PYX_ERR(0, 416, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_recalculate = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("npvalue", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 416, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.Expression.npvalue", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_10Expression_14npvalue(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), __pyx_v_recalculate);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_14npvalue(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, PyObject *__pyx_v_recalculate) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_10Expression_npvalue __pyx_t_2;
  __Pyx_RefNannySetupContext("npvalue", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.recalculate = __pyx_v_recalculate;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_Expression->npvalue(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Expression.npvalue", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":428
 *         return arr
 * 
 *     cpdef value(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         cdef CTensor t
 */

static PyObject *__pyx_pw_5pycnn_10Expression_17value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_10Expression_value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_value *__pyx_optional_args) {
  PyObject *__pyx_v_recalculate = ((PyObject *)Py_False);
  cnn::Tensor __pyx_v_t;
  PyObject *__pyx_v_vec = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  __Pyx_RefNannySetupContext("value", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_recalculate = __pyx_optional_args->recalculate;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 428, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10Expression_17value)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_recalculate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 428, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 428, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_recalculate);
        __Pyx_GIVEREF(__pyx_v_recalculate);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_recalculate);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 428, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":429
 * 
 *     cpdef value(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         cdef CTensor t
 *         if recalculate: self.cg().forward()
 */
  __pyx_t_6 = ((__pyx_v_self->cg_version != __pyx_v_5pycnn__cg->_cg_version) != 0);
  if (__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 429, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 429, __pyx_L1_error)
  }

  /* "pycnn.pyx":431
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         cdef CTensor t
 *         if recalculate: self.cg().forward()             # <<<<<<<<<<<<<<
 *         t = self.cgp().get_value(self.vindex)
 *         if t.d.ndims() == 2:
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_recalculate); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 431, __pyx_L1_error)
  if (__pyx_t_6) {
    __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_cg(__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 431, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1)->__pyx_vtab)->forward(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1), 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 431, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }

  /* "pycnn.pyx":432
 *         cdef CTensor t
 *         if recalculate: self.cg().forward()
 *         t = self.cgp().get_value(self.vindex)             # <<<<<<<<<<<<<<
 *         if t.d.ndims() == 2:
 *             return self.npvalue()
 */
  __pyx_v_t = __pyx_f_5pycnn_10Expression_cgp(__pyx_v_self)->get_value(__pyx_v_self->vindex);

  /* "pycnn.pyx":433
 *         if recalculate: self.cg().forward()
 *         t = self.cgp().get_value(self.vindex)
 *         if t.d.ndims() == 2:             # <<<<<<<<<<<<<<
 *             return self.npvalue()
 *         vec = self.vec_value()
 */
  __pyx_t_6 = ((__pyx_v_t.d.ndims() == 2) != 0);
  if (__pyx_t_6) {

    /* "pycnn.pyx":434
 *         t = self.cgp().get_value(self.vindex)
 *         if t.d.ndims() == 2:
 *             return self.npvalue()             # <<<<<<<<<<<<<<
 *         vec = self.vec_value()
 *         if len(vec) == 1: return vec[0]
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_self->__pyx_vtab)->npvalue(__pyx_v_self, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 434, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":433
 *         if recalculate: self.cg().forward()
 *         t = self.cgp().get_value(self.vindex)
 *         if t.d.ndims() == 2:             # <<<<<<<<<<<<<<
 *             return self.npvalue()
 *         vec = self.vec_value()
 */
  }

  /* "pycnn.pyx":435
 *         if t.d.ndims() == 2:
 *             return self.npvalue()
 *         vec = self.vec_value()             # <<<<<<<<<<<<<<
 *         if len(vec) == 1: return vec[0]
 *         return vec
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_self->__pyx_vtab)->vec_value(__pyx_v_self, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_vec = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pycnn.pyx":436
 *             return self.npvalue()
 *         vec = self.vec_value()
 *         if len(vec) == 1: return vec[0]             # <<<<<<<<<<<<<<
 *         return vec
 * 
 */
  __pyx_t_7 = PyObject_Length(__pyx_v_vec); if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 436, __pyx_L1_error)
  __pyx_t_6 = ((__pyx_t_7 == 1) != 0);
  if (__pyx_t_6) {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_vec, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 436, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "pycnn.pyx":437
 *         vec = self.vec_value()
 *         if len(vec) == 1: return vec[0]
 *         return vec             # <<<<<<<<<<<<<<
 * 
 *     # TODO this runs incremental forward on the entire graph, may not be optimal in terms of efficiency.
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_vec);
  __pyx_r = __pyx_v_vec;
  goto __pyx_L0;

  /* "pycnn.pyx":428
 *         return arr
 * 
 *     cpdef value(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         cdef CTensor t
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.Expression.value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_vec);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_17value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_17value(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_recalculate = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("value (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_recalculate,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_recalculate);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "value") < 0)) __PYX_ERR(0, 428, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_recalculate = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("value", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 428, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.Expression.value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_10Expression_16value(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), __pyx_v_recalculate);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_16value(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, PyObject *__pyx_v_recalculate) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_10Expression_value __pyx_t_2;
  __Pyx_RefNannySetupContext("value", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.recalculate = __pyx_v_recalculate;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_Expression->value(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 428, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Expression.value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":440
 * 
 *     # TODO this runs incremental forward on the entire graph, may not be optimal in terms of efficiency.
 *     cpdef forward(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 */

static PyObject *__pyx_pw_5pycnn_10Expression_19forward(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_10Expression_forward(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_forward *__pyx_optional_args) {
  PyObject *__pyx_v_recalculate = ((PyObject *)Py_False);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("forward", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_recalculate = __pyx_optional_args->recalculate;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_forward); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 440, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10Expression_19forward)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_recalculate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 440, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 440, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_recalculate);
        __Pyx_GIVEREF(__pyx_v_recalculate);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_recalculate);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 440, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":441
 *     # TODO this runs incremental forward on the entire graph, may not be optimal in terms of efficiency.
 *     cpdef forward(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         if recalculate: self.cg().forward()
 *         else: self.cg().incremental_forward()
 */
  __pyx_t_6 = ((__pyx_v_self->cg_version != __pyx_v_5pycnn__cg->_cg_version) != 0);
  if (__pyx_t_6) {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 441, __pyx_L1_error)
  }

  /* "pycnn.pyx":442
 *     cpdef forward(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()             # <<<<<<<<<<<<<<
 *         else: self.cg().incremental_forward()
 * 
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_recalculate); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 442, __pyx_L1_error)
  if (__pyx_t_6) {
    __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_cg(__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 442, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1)->__pyx_vtab)->forward(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1), 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 442, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L4;
  }

  /* "pycnn.pyx":443
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 *         else: self.cg().incremental_forward()             # <<<<<<<<<<<<<<
 * 
 *     cpdef backward(self):
 */
  /*else*/ {
    __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_cg(__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 443, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_incremental_forward); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 443, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (__pyx_t_1) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_L4:;

  /* "pycnn.pyx":440
 * 
 *     # TODO this runs incremental forward on the entire graph, may not be optimal in terms of efficiency.
 *     cpdef forward(self, recalculate=False):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         if recalculate: self.cg().forward()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.Expression.forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_19forward(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_19forward(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_recalculate = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("forward (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_recalculate,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_recalculate);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "forward") < 0)) __PYX_ERR(0, 440, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_recalculate = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("forward", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 440, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.Expression.forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_10Expression_18forward(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), __pyx_v_recalculate);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_18forward(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, PyObject *__pyx_v_recalculate) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_10Expression_forward __pyx_t_2;
  __Pyx_RefNannySetupContext("forward", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.recalculate = __pyx_v_recalculate;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_Expression->forward(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Expression.forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":445
 *         else: self.cg().incremental_forward()
 * 
 *     cpdef backward(self):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         self.cgp().backward(self.vindex)
 */

static PyObject *__pyx_pw_5pycnn_10Expression_21backward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_10Expression_backward(struct __pyx_obj_5pycnn_Expression *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("backward", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_backward); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 445, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10Expression_21backward)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 445, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 445, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":446
 * 
 *     cpdef backward(self):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         self.cgp().backward(self.vindex)
 * 
 */
  __pyx_t_5 = ((__pyx_v_self->cg_version != __pyx_v_5pycnn__cg->_cg_version) != 0);
  if (__pyx_t_5) {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 446, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 446, __pyx_L1_error)
  }

  /* "pycnn.pyx":447
 *     cpdef backward(self):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         self.cgp().backward(self.vindex)             # <<<<<<<<<<<<<<
 * 
 *     def __add__(self, other):
 */
  __pyx_f_5pycnn_10Expression_cgp(__pyx_v_self)->backward(__pyx_v_self->vindex);

  /* "pycnn.pyx":445
 *         else: self.cg().incremental_forward()
 * 
 *     cpdef backward(self):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")
 *         self.cgp().backward(self.vindex)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.Expression.backward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_21backward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_21backward(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("backward (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Expression_20backward(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_20backward(struct __pyx_obj_5pycnn_Expression *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("backward", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_10Expression_backward(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Expression.backward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":449
 *         self.cgp().backward(self.vindex)
 * 
 *     def __add__(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 *             return _add(self,other)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_23__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_23__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Expression_22__add__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_22__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  float __pyx_t_6;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "pycnn.pyx":450
 * 
 *     def __add__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, Expression):             # <<<<<<<<<<<<<<
 *             return _add(self,other)
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_ptype_5pycnn_Expression); 
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_5pycnn_Expression); 
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pycnn.pyx":451
 *     def __add__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 *             return _add(self,other)             # <<<<<<<<<<<<<<
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):
 *             return _cadd(self, other)
 */
    __Pyx_XDECREF(__pyx_r);
    if (!(likely(((__pyx_v_self) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_self, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 451, __pyx_L1_error)
    if (!(likely(((__pyx_v_other) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_other, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 451, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_5pycnn__add(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_other)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":450
 * 
 *     def __add__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, Expression):             # <<<<<<<<<<<<<<
 *             return _add(self,other)
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):
 */
  }

  /* "pycnn.pyx":452
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 *             return _add(self,other)
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):             # <<<<<<<<<<<<<<
 *             return _cadd(self, other)
 *         else: raise NotImplementedError()
 */
  __pyx_t_3 = PyInt_Check(__pyx_v_self); 
  __pyx_t_5 = (__pyx_t_3 != 0);
  if (!__pyx_t_5) {
  } else {
    __pyx_t_2 = __pyx_t_5;
    goto __pyx_L8_bool_binop_done;
  }
  __pyx_t_5 = PyFloat_Check(__pyx_v_self); 
  __pyx_t_3 = (__pyx_t_5 != 0);
  __pyx_t_2 = __pyx_t_3;
  __pyx_L8_bool_binop_done:;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (!__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L6_bool_binop_done;
  }
  __pyx_t_2 = PyInt_Check(__pyx_v_other); 
  __pyx_t_5 = (__pyx_t_2 != 0);
  if (!__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L10_bool_binop_done;
  }
  __pyx_t_5 = PyFloat_Check(__pyx_v_other); 
  __pyx_t_2 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_2;
  __pyx_L10_bool_binop_done:;
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pycnn.pyx":453
 *             return _add(self,other)
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):
 *             return _cadd(self, other)             # <<<<<<<<<<<<<<
 *         else: raise NotImplementedError()
 *     def __mul__(self, other):
 */
    __Pyx_XDECREF(__pyx_r);
    if (!(likely(((__pyx_v_self) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_self, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 453, __pyx_L1_error)
    __pyx_t_6 = __pyx_PyFloat_AsFloat(__pyx_v_other); if (unlikely((__pyx_t_6 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 453, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_5pycnn__cadd(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 453, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":452
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 *             return _add(self,other)
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):             # <<<<<<<<<<<<<<
 *             return _cadd(self, other)
 *         else: raise NotImplementedError()
 */
  }

  /* "pycnn.pyx":454
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):
 *             return _cadd(self, other)
 *         else: raise NotImplementedError()             # <<<<<<<<<<<<<<
 *     def __mul__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 */
  /*else*/ {
    __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(0, 454, __pyx_L1_error)
  }

  /* "pycnn.pyx":449
 *         self.cgp().backward(self.vindex)
 * 
 *     def __add__(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 *             return _add(self,other)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.Expression.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":455
 *             return _cadd(self, other)
 *         else: raise NotImplementedError()
 *     def __mul__(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 *             return _mul(self,other)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_25__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_25__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Expression_24__mul__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_24__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  float __pyx_t_6;
  __Pyx_RefNannySetupContext("__mul__", 0);

  /* "pycnn.pyx":456
 *         else: raise NotImplementedError()
 *     def __mul__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, Expression):             # <<<<<<<<<<<<<<
 *             return _mul(self,other)
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_ptype_5pycnn_Expression); 
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_5pycnn_Expression); 
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pycnn.pyx":457
 *     def __mul__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 *             return _mul(self,other)             # <<<<<<<<<<<<<<
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):
 *             return _cmul(self, other)
 */
    __Pyx_XDECREF(__pyx_r);
    if (!(likely(((__pyx_v_self) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_self, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 457, __pyx_L1_error)
    if (!(likely(((__pyx_v_other) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_other, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 457, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_5pycnn__mul(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_other)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 457, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":456
 *         else: raise NotImplementedError()
 *     def __mul__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, Expression):             # <<<<<<<<<<<<<<
 *             return _mul(self,other)
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):
 */
  }

  /* "pycnn.pyx":458
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 *             return _mul(self,other)
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):             # <<<<<<<<<<<<<<
 *             return _cmul(self, other)
 *         else: raise NotImplementedError()
 */
  __pyx_t_3 = PyInt_Check(__pyx_v_self); 
  __pyx_t_5 = (__pyx_t_3 != 0);
  if (!__pyx_t_5) {
  } else {
    __pyx_t_2 = __pyx_t_5;
    goto __pyx_L8_bool_binop_done;
  }
  __pyx_t_5 = PyFloat_Check(__pyx_v_self); 
  __pyx_t_3 = (__pyx_t_5 != 0);
  __pyx_t_2 = __pyx_t_3;
  __pyx_L8_bool_binop_done:;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (!__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L6_bool_binop_done;
  }
  __pyx_t_2 = PyInt_Check(__pyx_v_other); 
  __pyx_t_5 = (__pyx_t_2 != 0);
  if (!__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L10_bool_binop_done;
  }
  __pyx_t_5 = PyFloat_Check(__pyx_v_other); 
  __pyx_t_2 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_2;
  __pyx_L10_bool_binop_done:;
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pycnn.pyx":459
 *             return _mul(self,other)
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):
 *             return _cmul(self, other)             # <<<<<<<<<<<<<<
 *         else: raise NotImplementedError()
 *     def __div__(self, other):
 */
    __Pyx_XDECREF(__pyx_r);
    if (!(likely(((__pyx_v_self) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_self, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 459, __pyx_L1_error)
    __pyx_t_6 = __pyx_PyFloat_AsFloat(__pyx_v_other); if (unlikely((__pyx_t_6 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 459, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_5pycnn__cmul(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 459, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":458
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 *             return _mul(self,other)
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):             # <<<<<<<<<<<<<<
 *             return _cmul(self, other)
 *         else: raise NotImplementedError()
 */
  }

  /* "pycnn.pyx":460
 *         elif isinstance(self, (int,float)) or isinstance(other, (int,float)):
 *             return _cmul(self, other)
 *         else: raise NotImplementedError()             # <<<<<<<<<<<<<<
 *     def __div__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, (int,float)):
 */
  /*else*/ {
    __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 460, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(0, 460, __pyx_L1_error)
  }

  /* "pycnn.pyx":455
 *             return _cadd(self, other)
 *         else: raise NotImplementedError()
 *     def __mul__(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(self, Expression) and isinstance(other, Expression):
 *             return _mul(self,other)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.Expression.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":461
 *             return _cmul(self, other)
 *         else: raise NotImplementedError()
 *     def __div__(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(self, Expression) and isinstance(other, (int,float)):
 *             return _cdiv(self, other)
 */

/* Python wrapper */
#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pw_5pycnn_10Expression_27__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_27__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__div__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Expression_26__div__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
static PyObject *__pyx_pf_5pycnn_10Expression_26__div__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  float __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__div__", 0);

  /* "pycnn.pyx":462
 *         else: raise NotImplementedError()
 *     def __div__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, (int,float)):             # <<<<<<<<<<<<<<
 *             return _cdiv(self, other)
 *         else: raise NotImplementedError()
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_ptype_5pycnn_Expression); 
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = PyInt_Check(__pyx_v_other); 
  __pyx_t_4 = (__pyx_t_2 != 0);
  if (!__pyx_t_4) {
  } else {
    __pyx_t_3 = __pyx_t_4;
    goto __pyx_L6_bool_binop_done;
  }
  __pyx_t_4 = PyFloat_Check(__pyx_v_other); 
  __pyx_t_2 = (__pyx_t_4 != 0);
  __pyx_t_3 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pycnn.pyx":463
 *     def __div__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, (int,float)):
 *             return _cdiv(self, other)             # <<<<<<<<<<<<<<
 *         else: raise NotImplementedError()
 *     def __neg__(self):        return _neg(self)
 */
    __Pyx_XDECREF(__pyx_r);
    if (!(likely(((__pyx_v_self) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_self, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 463, __pyx_L1_error)
    __pyx_t_5 = __pyx_PyFloat_AsFloat(__pyx_v_other); if (unlikely((__pyx_t_5 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 463, __pyx_L1_error)
    __pyx_t_6 = __pyx_f_5pycnn__cdiv(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self), __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":462
 *         else: raise NotImplementedError()
 *     def __div__(self, other):
 *         if isinstance(self, Expression) and isinstance(other, (int,float)):             # <<<<<<<<<<<<<<
 *             return _cdiv(self, other)
 *         else: raise NotImplementedError()
 */
  }

  /* "pycnn.pyx":464
 *         if isinstance(self, Expression) and isinstance(other, (int,float)):
 *             return _cdiv(self, other)
 *         else: raise NotImplementedError()             # <<<<<<<<<<<<<<
 *     def __neg__(self):        return _neg(self)
 *     def __sub__(self, other):
 */
  /*else*/ {
    __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 464, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __PYX_ERR(0, 464, __pyx_L1_error)
  }

  /* "pycnn.pyx":461
 *             return _cmul(self, other)
 *         else: raise NotImplementedError()
 *     def __div__(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(self, Expression) and isinstance(other, (int,float)):
 *             return _cdiv(self, other)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.Expression.__div__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
#endif /*!(#if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY)*/

/* "pycnn.pyx":465
 *             return _cdiv(self, other)
 *         else: raise NotImplementedError()
 *     def __neg__(self):        return _neg(self)             # <<<<<<<<<<<<<<
 *     def __sub__(self, other):
 *         if isinstance(self,Expression) and isinstance(other,Expression):
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_29__neg__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_29__neg__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__neg__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Expression_28__neg__(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_28__neg__(struct __pyx_obj_5pycnn_Expression *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__neg__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn__neg(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.Expression.__neg__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":466
 *         else: raise NotImplementedError()
 *     def __neg__(self):        return _neg(self)
 *     def __sub__(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(self,Expression) and isinstance(other,Expression):
 *             return self+(-other)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10Expression_31__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_5pycnn_10Expression_31__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_10Expression_30__sub__(((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_other));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10Expression_30__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  float __pyx_t_7;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "pycnn.pyx":467
 *     def __neg__(self):        return _neg(self)
 *     def __sub__(self, other):
 *         if isinstance(self,Expression) and isinstance(other,Expression):             # <<<<<<<<<<<<<<
 *             return self+(-other)
 *         elif isinstance(self,(int,float)) and isinstance(other,Expression):
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_ptype_5pycnn_Expression); 
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_5pycnn_Expression); 
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pycnn.pyx":468
 *     def __sub__(self, other):
 *         if isinstance(self,Expression) and isinstance(other,Expression):
 *             return self+(-other)             # <<<<<<<<<<<<<<
 *         elif isinstance(self,(int,float)) and isinstance(other,Expression):
 *             return _scalarsub(self, other)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = PyNumber_Negative(__pyx_v_other); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyNumber_Add(__pyx_v_self, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":467
 *     def __neg__(self):        return _neg(self)
 *     def __sub__(self, other):
 *         if isinstance(self,Expression) and isinstance(other,Expression):             # <<<<<<<<<<<<<<
 *             return self+(-other)
 *         elif isinstance(self,(int,float)) and isinstance(other,Expression):
 */
  }

  /* "pycnn.pyx":469
 *         if isinstance(self,Expression) and isinstance(other,Expression):
 *             return self+(-other)
 *         elif isinstance(self,(int,float)) and isinstance(other,Expression):             # <<<<<<<<<<<<<<
 *             return _scalarsub(self, other)
 *         elif isinstance(self,Expression) and isinstance(other,(int, float)):
 */
  __pyx_t_3 = PyInt_Check(__pyx_v_self); 
  __pyx_t_6 = (__pyx_t_3 != 0);
  if (!__pyx_t_6) {
  } else {
    __pyx_t_2 = __pyx_t_6;
    goto __pyx_L8_bool_binop_done;
  }
  __pyx_t_6 = PyFloat_Check(__pyx_v_self); 
  __pyx_t_3 = (__pyx_t_6 != 0);
  __pyx_t_2 = __pyx_t_3;
  __pyx_L8_bool_binop_done:;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L6_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_5pycnn_Expression); 
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pycnn.pyx":470
 *             return self+(-other)
 *         elif isinstance(self,(int,float)) and isinstance(other,Expression):
 *             return _scalarsub(self, other)             # <<<<<<<<<<<<<<
 *         elif isinstance(self,Expression) and isinstance(other,(int, float)):
 *             return _neg(_scalarsub(other, self))
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_7 = __pyx_PyFloat_AsFloat(__pyx_v_self); if (unlikely((__pyx_t_7 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 470, __pyx_L1_error)
    if (!(likely(((__pyx_v_other) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_other, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 470, __pyx_L1_error)
    __pyx_t_5 = __pyx_f_5pycnn__scalarsub(__pyx_t_7, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_other)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 470, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":469
 *         if isinstance(self,Expression) and isinstance(other,Expression):
 *             return self+(-other)
 *         elif isinstance(self,(int,float)) and isinstance(other,Expression):             # <<<<<<<<<<<<<<
 *             return _scalarsub(self, other)
 *         elif isinstance(self,Expression) and isinstance(other,(int, float)):
 */
  }

  /* "pycnn.pyx":471
 *         elif isinstance(self,(int,float)) and isinstance(other,Expression):
 *             return _scalarsub(self, other)
 *         elif isinstance(self,Expression) and isinstance(other,(int, float)):             # <<<<<<<<<<<<<<
 *             return _neg(_scalarsub(other, self))
 *         else: raise NotImplementedError()
 */
  __pyx_t_2 = __Pyx_TypeCheck(__pyx_v_self, __pyx_ptype_5pycnn_Expression); 
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L10_bool_binop_done;
  }
  __pyx_t_2 = PyInt_Check(__pyx_v_other); 
  __pyx_t_6 = (__pyx_t_2 != 0);
  if (!__pyx_t_6) {
  } else {
    __pyx_t_3 = __pyx_t_6;
    goto __pyx_L12_bool_binop_done;
  }
  __pyx_t_6 = PyFloat_Check(__pyx_v_other); 
  __pyx_t_2 = (__pyx_t_6 != 0);
  __pyx_t_3 = __pyx_t_2;
  __pyx_L12_bool_binop_done:;
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L10_bool_binop_done:;
  if (__pyx_t_1) {

    /* "pycnn.pyx":472
 *             return _scalarsub(self, other)
 *         elif isinstance(self,Expression) and isinstance(other,(int, float)):
 *             return _neg(_scalarsub(other, self))             # <<<<<<<<<<<<<<
 *         else: raise NotImplementedError()
 * #}}}
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_7 = __pyx_PyFloat_AsFloat(__pyx_v_other); if (unlikely((__pyx_t_7 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 472, __pyx_L1_error)
    if (!(likely(((__pyx_v_self) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_self, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 472, __pyx_L1_error)
    __pyx_t_5 = __pyx_f_5pycnn__scalarsub(__pyx_t_7, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 472, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 472, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_5pycnn__neg(((struct __pyx_obj_5pycnn_Expression *)__pyx_t_5)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 472, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":471
 *         elif isinstance(self,(int,float)) and isinstance(other,Expression):
 *             return _scalarsub(self, other)
 *         elif isinstance(self,Expression) and isinstance(other,(int, float)):             # <<<<<<<<<<<<<<
 *             return _neg(_scalarsub(other, self))
 *         else: raise NotImplementedError()
 */
  }

  /* "pycnn.pyx":473
 *         elif isinstance(self,Expression) and isinstance(other,(int, float)):
 *             return _neg(_scalarsub(other, self))
 *         else: raise NotImplementedError()             # <<<<<<<<<<<<<<
 * #}}}
 * 
 */
  /*else*/ {
    __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_builtin_NotImplementedError); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 473, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(0, 473, __pyx_L1_error)
  }

  /* "pycnn.pyx":466
 *         else: raise NotImplementedError()
 *     def __neg__(self):        return _neg(self)
 *     def __sub__(self, other):             # <<<<<<<<<<<<<<
 *         if isinstance(self,Expression) and isinstance(other,Expression):
 *             return self+(-other)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.Expression.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":476
 * #}}}
 * 
 * cdef Expression _parameter(ComputationGraph g, Parameters p):             # <<<<<<<<<<<<<<
 *     return Expression.from_cexpr(g.version(), c_parameter(g.thisptr[0], p.thisptr))
 * 
 */

static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn__parameter(struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_Parameters *__pyx_v_p) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("_parameter", 0);

  /* "pycnn.pyx":477
 * 
 * cdef Expression _parameter(ComputationGraph g, Parameters p):
 *     return Expression.from_cexpr(g.version(), c_parameter(g.thisptr[0], p.thisptr))             # <<<<<<<<<<<<<<
 * 
 * def parameter(Parameters p): return _parameter(_cg, p)
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_g->__pyx_vtab)->version(__pyx_v_g, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_t_2, cnn::expr::parameter((__pyx_v_g->thisptr[0]), __pyx_v_p->thisptr))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":476
 * #}}}
 * 
 * cdef Expression _parameter(ComputationGraph g, Parameters p):             # <<<<<<<<<<<<<<
 *     return Expression.from_cexpr(g.version(), c_parameter(g.thisptr[0], p.thisptr))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn._parameter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":479
 *     return Expression.from_cexpr(g.version(), c_parameter(g.thisptr[0], p.thisptr))
 * 
 * def parameter(Parameters p): return _parameter(_cg, p)             # <<<<<<<<<<<<<<
 * 
 * # {{{ Mutable Expressions
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_7parameter(PyObject *__pyx_self, PyObject *__pyx_v_p); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_7parameter = {"parameter", (PyCFunction)__pyx_pw_5pycnn_7parameter, METH_O, 0};
static PyObject *__pyx_pw_5pycnn_7parameter(PyObject *__pyx_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parameter (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_5pycnn_Parameters, 1, "p", 0))) __PYX_ERR(0, 479, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_6parameter(__pyx_self, ((struct __pyx_obj_5pycnn_Parameters *)__pyx_v_p));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_6parameter(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Parameters *__pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("parameter", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_v_5pycnn__cg);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = ((PyObject *)__pyx_f_5pycnn__parameter(((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1), __pyx_v_p)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn.parameter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":486
 * cdef class _inputExpression(Expression):
 *     cdef FloatValue val
 *     def __cinit__(self, ComputationGraph g, float s):             # <<<<<<<<<<<<<<
 *         self.val = FloatValue(s)
 *         #self.cg = g.thisptr
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_16_inputExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_16_inputExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g = 0;
  float __pyx_v_s;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_g,&__pyx_n_s_s,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_s)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 486, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 486, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_g = ((struct __pyx_obj_5pycnn_ComputationGraph *)values[0]);
    __pyx_v_s = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_s == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 486, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 486, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn._inputExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_g), __pyx_ptype_5pycnn_ComputationGraph, 1, "g", 0))) __PYX_ERR(0, 486, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_16_inputExpression___cinit__(((struct __pyx_obj_5pycnn__inputExpression *)__pyx_v_self), __pyx_v_g, __pyx_v_s);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_16_inputExpression___cinit__(struct __pyx_obj_5pycnn__inputExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, float __pyx_v_s) {
  cnn::expr::Expression __pyx_v_e;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  long __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":487
 *     cdef FloatValue val
 *     def __cinit__(self, ComputationGraph g, float s):
 *         self.val = FloatValue(s)             # <<<<<<<<<<<<<<
 *         #self.cg = g.thisptr
 *         self.cg_version = g.version()
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_s); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_FloatValue), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->val);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->val));
  __pyx_v_self->val = ((struct __pyx_obj_5pycnn_FloatValue *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":489
 *         self.val = FloatValue(s)
 *         #self.cg = g.thisptr
 *         self.cg_version = g.version()             # <<<<<<<<<<<<<<
 *         cdef CExpression e
 *         e = c_input(self.cgp()[0], self.val.addr())
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_g->__pyx_vtab)->version(__pyx_v_g, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->__pyx_base.cg_version = __pyx_t_3;

  /* "pycnn.pyx":491
 *         self.cg_version = g.version()
 *         cdef CExpression e
 *         e = c_input(self.cgp()[0], self.val.addr())             # <<<<<<<<<<<<<<
 *         self.vindex = e.i
 *         g._inputs.append(self)
 */
  __pyx_v_e = cnn::expr::input((__pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))[0]), ((struct __pyx_vtabstruct_5pycnn_FloatValue *)__pyx_v_self->val->__pyx_vtab)->addr(__pyx_v_self->val));

  /* "pycnn.pyx":492
 *         cdef CExpression e
 *         e = c_input(self.cgp()[0], self.val.addr())
 *         self.vindex = e.i             # <<<<<<<<<<<<<<
 *         g._inputs.append(self)
 *     def set(self, float s):
 */
  __pyx_t_4 = __pyx_v_e.i;
  __pyx_v_self->__pyx_base.vindex = __pyx_t_4;

  /* "pycnn.pyx":493
 *         e = c_input(self.cgp()[0], self.val.addr())
 *         self.vindex = e.i
 *         g._inputs.append(self)             # <<<<<<<<<<<<<<
 *     def set(self, float s):
 *         self.cgp().invalidate()
 */
  if (unlikely(__pyx_v_g->_inputs == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "append");
    __PYX_ERR(0, 493, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_g->_inputs, ((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 493, __pyx_L1_error)

  /* "pycnn.pyx":486
 * cdef class _inputExpression(Expression):
 *     cdef FloatValue val
 *     def __cinit__(self, ComputationGraph g, float s):             # <<<<<<<<<<<<<<
 *         self.val = FloatValue(s)
 *         #self.cg = g.thisptr
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn._inputExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":494
 *         self.vindex = e.i
 *         g._inputs.append(self)
 *     def set(self, float s):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(s)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16_inputExpression_3set(PyObject *__pyx_v_self, PyObject *__pyx_arg_s); /*proto*/
static PyObject *__pyx_pw_5pycnn_16_inputExpression_3set(PyObject *__pyx_v_self, PyObject *__pyx_arg_s) {
  float __pyx_v_s;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set (wrapper)", 0);
  assert(__pyx_arg_s); {
    __pyx_v_s = __pyx_PyFloat_AsFloat(__pyx_arg_s); if (unlikely((__pyx_v_s == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 494, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn._inputExpression.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_16_inputExpression_2set(((struct __pyx_obj_5pycnn__inputExpression *)__pyx_v_self), ((float)__pyx_v_s));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16_inputExpression_2set(struct __pyx_obj_5pycnn__inputExpression *__pyx_v_self, float __pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("set", 0);

  /* "pycnn.pyx":495
 *         g._inputs.append(self)
 *     def set(self, float s):
 *         self.cgp().invalidate()             # <<<<<<<<<<<<<<
 *         self.val.set(s)
 * 
 */
  __pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))->invalidate();

  /* "pycnn.pyx":496
 *     def set(self, float s):
 *         self.cgp().invalidate()
 *         self.val.set(s)             # <<<<<<<<<<<<<<
 * 
 * def scalarInput(float s):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->val), __pyx_n_s_set); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_s); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 496, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 496, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":494
 *         self.vindex = e.i
 *         g._inputs.append(self)
 *     def set(self, float s):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(s)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn._inputExpression.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":498
 *         self.val.set(s)
 * 
 * def scalarInput(float s):             # <<<<<<<<<<<<<<
 *     return _cg.inputValue(s)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_9scalarInput(PyObject *__pyx_self, PyObject *__pyx_arg_s); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_9scalarInput = {"scalarInput", (PyCFunction)__pyx_pw_5pycnn_9scalarInput, METH_O, 0};
static PyObject *__pyx_pw_5pycnn_9scalarInput(PyObject *__pyx_self, PyObject *__pyx_arg_s) {
  float __pyx_v_s;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scalarInput (wrapper)", 0);
  assert(__pyx_arg_s); {
    __pyx_v_s = __pyx_PyFloat_AsFloat(__pyx_arg_s); if (unlikely((__pyx_v_s == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 498, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.scalarInput", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_8scalarInput(__pyx_self, ((float)__pyx_v_s));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_8scalarInput(CYTHON_UNUSED PyObject *__pyx_self, float __pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_16ComputationGraph_inputValue __pyx_t_2;
  __Pyx_RefNannySetupContext("scalarInput", 0);

  /* "pycnn.pyx":499
 * 
 * def scalarInput(float s):
 *     return _cg.inputValue(s)             # <<<<<<<<<<<<<<
 * 
 * cdef class _vecInputExpression(Expression):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.v = __pyx_v_s;
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->inputValue(__pyx_v_5pycnn__cg, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":498
 *         self.val.set(s)
 * 
 * def scalarInput(float s):             # <<<<<<<<<<<<<<
 *     return _cg.inputValue(s)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.scalarInput", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":503
 * cdef class _vecInputExpression(Expression):
 *     cdef FloatVectorValue val
 *     def __cinit__(self, ComputationGraph g, vector[float] val, dim=None):             # <<<<<<<<<<<<<<
 *         self.val = FloatVectorValue(val)
 *         if dim is None: dim = self.val.size()
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_19_vecInputExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_19_vecInputExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g = 0;
  std::vector<float>  __pyx_v_val;
  PyObject *__pyx_v_dim = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_g,&__pyx_n_s_val,&__pyx_n_s_dim,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_val)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); __PYX_ERR(0, 503, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dim);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 503, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_g = ((struct __pyx_obj_5pycnn_ComputationGraph *)values[0]);
    __pyx_v_val = __pyx_convert_vector_from_py_float(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 503, __pyx_L3_error)
    __pyx_v_dim = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 503, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn._vecInputExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_g), __pyx_ptype_5pycnn_ComputationGraph, 1, "g", 0))) __PYX_ERR(0, 503, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_19_vecInputExpression___cinit__(((struct __pyx_obj_5pycnn__vecInputExpression *)__pyx_v_self), __pyx_v_g, __pyx_v_val, __pyx_v_dim);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_19_vecInputExpression___cinit__(struct __pyx_obj_5pycnn__vecInputExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, std::vector<float>  __pyx_v_val, PyObject *__pyx_v_dim) {
  cnn::expr::Expression __pyx_v_e;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  long __pyx_t_7;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF(__pyx_v_dim);

  /* "pycnn.pyx":504
 *     cdef FloatVectorValue val
 *     def __cinit__(self, ComputationGraph g, vector[float] val, dim=None):
 *         self.val = FloatVectorValue(val)             # <<<<<<<<<<<<<<
 *         if dim is None: dim = self.val.size()
 *         #self.cg = g.thisptr
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_float(__pyx_v_val); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_FloatVectorValue), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->val);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->val));
  __pyx_v_self->val = ((struct __pyx_obj_5pycnn_FloatVectorValue *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":505
 *     def __cinit__(self, ComputationGraph g, vector[float] val, dim=None):
 *         self.val = FloatVectorValue(val)
 *         if dim is None: dim = self.val.size()             # <<<<<<<<<<<<<<
 *         #self.cg = g.thisptr
 *         self.cg_version = g.version()
 */
  __pyx_t_3 = (__pyx_v_dim == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->val), __pyx_n_s_size); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (__pyx_t_5) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 505, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 505, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_dim, __pyx_t_1);
    __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":507
 *         if dim is None: dim = self.val.size()
 *         #self.cg = g.thisptr
 *         self.cg_version = g.version()             # <<<<<<<<<<<<<<
 *         cdef CExpression e
 *         e = c_input(self.cgp()[0], Dim(dim), self.val.addr())
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_g->__pyx_vtab)->version(__pyx_v_g, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->__pyx_base.cg_version = __pyx_t_6;

  /* "pycnn.pyx":509
 *         self.cg_version = g.version()
 *         cdef CExpression e
 *         e = c_input(self.cgp()[0], Dim(dim), self.val.addr())             # <<<<<<<<<<<<<<
 *         self.vindex = e.i
 *         g._inputs.append(self)
 */
  __pyx_v_e = cnn::expr::input((__pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))[0]), __pyx_f_5pycnn_Dim(__pyx_v_dim), ((struct __pyx_vtabstruct_5pycnn_FloatVectorValue *)__pyx_v_self->val->__pyx_vtab)->addr(__pyx_v_self->val));

  /* "pycnn.pyx":510
 *         cdef CExpression e
 *         e = c_input(self.cgp()[0], Dim(dim), self.val.addr())
 *         self.vindex = e.i             # <<<<<<<<<<<<<<
 *         g._inputs.append(self)
 *     def set(self, vector[float] data):
 */
  __pyx_t_7 = __pyx_v_e.i;
  __pyx_v_self->__pyx_base.vindex = __pyx_t_7;

  /* "pycnn.pyx":511
 *         e = c_input(self.cgp()[0], Dim(dim), self.val.addr())
 *         self.vindex = e.i
 *         g._inputs.append(self)             # <<<<<<<<<<<<<<
 *     def set(self, vector[float] data):
 *         self.cgp().invalidate()
 */
  if (unlikely(__pyx_v_g->_inputs == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "append");
    __PYX_ERR(0, 511, __pyx_L1_error)
  }
  __pyx_t_8 = __Pyx_PyList_Append(__pyx_v_g->_inputs, ((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_8 == -1)) __PYX_ERR(0, 511, __pyx_L1_error)

  /* "pycnn.pyx":503
 * cdef class _vecInputExpression(Expression):
 *     cdef FloatVectorValue val
 *     def __cinit__(self, ComputationGraph g, vector[float] val, dim=None):             # <<<<<<<<<<<<<<
 *         self.val = FloatVectorValue(val)
 *         if dim is None: dim = self.val.size()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn._vecInputExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dim);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":512
 *         self.vindex = e.i
 *         g._inputs.append(self)
 *     def set(self, vector[float] data):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(data)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_19_vecInputExpression_3set(PyObject *__pyx_v_self, PyObject *__pyx_arg_data); /*proto*/
static PyObject *__pyx_pw_5pycnn_19_vecInputExpression_3set(PyObject *__pyx_v_self, PyObject *__pyx_arg_data) {
  std::vector<float>  __pyx_v_data;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set (wrapper)", 0);
  assert(__pyx_arg_data); {
    __pyx_v_data = __pyx_convert_vector_from_py_float(__pyx_arg_data); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 512, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn._vecInputExpression.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_19_vecInputExpression_2set(((struct __pyx_obj_5pycnn__vecInputExpression *)__pyx_v_self), ((std::vector<float> )__pyx_v_data));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_19_vecInputExpression_2set(struct __pyx_obj_5pycnn__vecInputExpression *__pyx_v_self, std::vector<float>  __pyx_v_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("set", 0);

  /* "pycnn.pyx":513
 *         g._inputs.append(self)
 *     def set(self, vector[float] data):
 *         self.cgp().invalidate()             # <<<<<<<<<<<<<<
 *         self.val.set(data)
 * 
 */
  __pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))->invalidate();

  /* "pycnn.pyx":514
 *     def set(self, vector[float] data):
 *         self.cgp().invalidate()
 *         self.val.set(data)             # <<<<<<<<<<<<<<
 * 
 * def vecInput(int dim):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->val), __pyx_n_s_set); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 514, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_convert_vector_to_py_float(__pyx_v_data); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 514, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 514, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":512
 *         self.vindex = e.i
 *         g._inputs.append(self)
 *     def set(self, vector[float] data):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(data)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn._vecInputExpression.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":516
 *         self.val.set(data)
 * 
 * def vecInput(int dim):             # <<<<<<<<<<<<<<
 *     return _cg.inputVector(dim)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_11vecInput(PyObject *__pyx_self, PyObject *__pyx_arg_dim); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_11vecInput = {"vecInput", (PyCFunction)__pyx_pw_5pycnn_11vecInput, METH_O, 0};
static PyObject *__pyx_pw_5pycnn_11vecInput(PyObject *__pyx_self, PyObject *__pyx_arg_dim) {
  int __pyx_v_dim;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vecInput (wrapper)", 0);
  assert(__pyx_arg_dim); {
    __pyx_v_dim = __Pyx_PyInt_As_int(__pyx_arg_dim); if (unlikely((__pyx_v_dim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 516, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.vecInput", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_10vecInput(__pyx_self, ((int)__pyx_v_dim));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10vecInput(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_dim) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("vecInput", 0);

  /* "pycnn.pyx":517
 * 
 * def vecInput(int dim):
 *     return _cg.inputVector(dim)             # <<<<<<<<<<<<<<
 * 
 * def matInput(int d1, int d2):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->inputVector(__pyx_v_5pycnn__cg, __pyx_v_dim); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":516
 *         self.val.set(data)
 * 
 * def vecInput(int dim):             # <<<<<<<<<<<<<<
 *     return _cg.inputVector(dim)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.vecInput", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":519
 *     return _cg.inputVector(dim)
 * 
 * def matInput(int d1, int d2):             # <<<<<<<<<<<<<<
 *     return _cg.inputMatrix(d1, d2)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_13matInput(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_13matInput = {"matInput", (PyCFunction)__pyx_pw_5pycnn_13matInput, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5pycnn_13matInput(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_d1;
  int __pyx_v_d2;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("matInput (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_d1,&__pyx_n_s_d2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_d1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_d2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("matInput", 1, 2, 2, 1); __PYX_ERR(0, 519, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "matInput") < 0)) __PYX_ERR(0, 519, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_d1 = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_d1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 519, __pyx_L3_error)
    __pyx_v_d2 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_d2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 519, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("matInput", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 519, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.matInput", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_12matInput(__pyx_self, __pyx_v_d1, __pyx_v_d2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_12matInput(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_d1, int __pyx_v_d2) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("matInput", 0);

  /* "pycnn.pyx":520
 * 
 * def matInput(int d1, int d2):
 *     return _cg.inputMatrix(d1, d2)             # <<<<<<<<<<<<<<
 * 
 * cdef class _lookupExpression(Expression):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->inputMatrix(__pyx_v_5pycnn__cg, __pyx_v_d1, __pyx_v_d2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":519
 *     return _cg.inputVector(dim)
 * 
 * def matInput(int d1, int d2):             # <<<<<<<<<<<<<<
 *     return _cg.inputMatrix(d1, d2)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.matInput", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":524
 * cdef class _lookupExpression(Expression):
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, unsigned index=0, update=True):             # <<<<<<<<<<<<<<
 *         self.val = UnsignedValue(index)
 *         #self.cg = g.thisptr
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_17_lookupExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_17_lookupExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g = 0;
  struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p = 0;
  unsigned int __pyx_v_index;
  PyObject *__pyx_v_update = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_g,&__pyx_n_s_p,&__pyx_n_s_index,&__pyx_n_s_update,0};
    PyObject* values[4] = {0,0,0,0};
    values[3] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, 1); __PYX_ERR(0, 524, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_index);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 524, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_g = ((struct __pyx_obj_5pycnn_ComputationGraph *)values[0]);
    __pyx_v_p = ((struct __pyx_obj_5pycnn_LookupParameters *)values[1]);
    if (values[2]) {
      __pyx_v_index = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_index == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 524, __pyx_L3_error)
    } else {
      __pyx_v_index = ((unsigned int)0);
    }
    __pyx_v_update = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 524, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn._lookupExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_g), __pyx_ptype_5pycnn_ComputationGraph, 1, "g", 0))) __PYX_ERR(0, 524, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_5pycnn_LookupParameters, 1, "p", 0))) __PYX_ERR(0, 524, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_17_lookupExpression___cinit__(((struct __pyx_obj_5pycnn__lookupExpression *)__pyx_v_self), __pyx_v_g, __pyx_v_p, __pyx_v_index, __pyx_v_update);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_17_lookupExpression___cinit__(struct __pyx_obj_5pycnn__lookupExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, unsigned int __pyx_v_index, PyObject *__pyx_v_update) {
  cnn::expr::Expression __pyx_v_e;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  long __pyx_t_5;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":525
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, unsigned index=0, update=True):
 *         self.val = UnsignedValue(index)             # <<<<<<<<<<<<<<
 *         #self.cg = g.thisptr
 *         self.cg_version = g.version()
 */
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_UnsignedValue), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->val);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->val));
  __pyx_v_self->val = ((struct __pyx_obj_5pycnn_UnsignedValue *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":527
 *         self.val = UnsignedValue(index)
 *         #self.cg = g.thisptr
 *         self.cg_version = g.version()             # <<<<<<<<<<<<<<
 *         cdef CExpression e
 *         if update:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_g->__pyx_vtab)->version(__pyx_v_g, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 527, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->__pyx_base.cg_version = __pyx_t_3;

  /* "pycnn.pyx":529
 *         self.cg_version = g.version()
 *         cdef CExpression e
 *         if update:             # <<<<<<<<<<<<<<
 *             e = c_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 *         else:
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_update); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 529, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "pycnn.pyx":530
 *         cdef CExpression e
 *         if update:
 *             e = c_lookup(self.cgp()[0], p.thisptr, self.val.addr())             # <<<<<<<<<<<<<<
 *         else:
 *             e = c_const_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 */
    __pyx_v_e = cnn::expr::lookup((__pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))[0]), __pyx_v_p->thisptr, ((struct __pyx_vtabstruct_5pycnn_UnsignedValue *)__pyx_v_self->val->__pyx_vtab)->addr(__pyx_v_self->val));

    /* "pycnn.pyx":529
 *         self.cg_version = g.version()
 *         cdef CExpression e
 *         if update:             # <<<<<<<<<<<<<<
 *             e = c_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 *         else:
 */
    goto __pyx_L3;
  }

  /* "pycnn.pyx":532
 *             e = c_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 *         else:
 *             e = c_const_lookup(self.cgp()[0], p.thisptr, self.val.addr())             # <<<<<<<<<<<<<<
 *         self.vindex = e.i
 *         g._inputs.append(self)
 */
  /*else*/ {
    __pyx_v_e = cnn::expr::const_lookup((__pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))[0]), __pyx_v_p->thisptr, ((struct __pyx_vtabstruct_5pycnn_UnsignedValue *)__pyx_v_self->val->__pyx_vtab)->addr(__pyx_v_self->val));
  }
  __pyx_L3:;

  /* "pycnn.pyx":533
 *         else:
 *             e = c_const_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 *         self.vindex = e.i             # <<<<<<<<<<<<<<
 *         g._inputs.append(self)
 *     def set(self,i):
 */
  __pyx_t_5 = __pyx_v_e.i;
  __pyx_v_self->__pyx_base.vindex = __pyx_t_5;

  /* "pycnn.pyx":534
 *             e = c_const_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 *         self.vindex = e.i
 *         g._inputs.append(self)             # <<<<<<<<<<<<<<
 *     def set(self,i):
 *         self.cgp().invalidate()
 */
  if (unlikely(__pyx_v_g->_inputs == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "append");
    __PYX_ERR(0, 534, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyList_Append(__pyx_v_g->_inputs, ((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 534, __pyx_L1_error)

  /* "pycnn.pyx":524
 * cdef class _lookupExpression(Expression):
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, unsigned index=0, update=True):             # <<<<<<<<<<<<<<
 *         self.val = UnsignedValue(index)
 *         #self.cg = g.thisptr
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn._lookupExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":535
 *         self.vindex = e.i
 *         g._inputs.append(self)
 *     def set(self,i):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(i)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_17_lookupExpression_3set(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static PyObject *__pyx_pw_5pycnn_17_lookupExpression_3set(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_17_lookupExpression_2set(((struct __pyx_obj_5pycnn__lookupExpression *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_17_lookupExpression_2set(struct __pyx_obj_5pycnn__lookupExpression *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("set", 0);

  /* "pycnn.pyx":536
 *         g._inputs.append(self)
 *     def set(self,i):
 *         self.cgp().invalidate()             # <<<<<<<<<<<<<<
 *         self.val.set(i)
 * 
 */
  __pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))->invalidate();

  /* "pycnn.pyx":537
 *     def set(self,i):
 *         self.cgp().invalidate()
 *         self.val.set(i)             # <<<<<<<<<<<<<<
 * 
 * cdef class _lookupBatchExpression(Expression):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->val), __pyx_n_s_set); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 537, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 537, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_i);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 537, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":535
 *         self.vindex = e.i
 *         g._inputs.append(self)
 *     def set(self,i):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(i)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn._lookupExpression.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":541
 * cdef class _lookupBatchExpression(Expression):
 *     cdef UnsignedVectorValue val
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, vector[unsigned] indices, update=True):             # <<<<<<<<<<<<<<
 *         self.val = UnsignedVectorValue(indices)
 *         self.cg_version = g.version()
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_22_lookupBatchExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_22_lookupBatchExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g = 0;
  struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p = 0;
  std::vector<unsigned int>  __pyx_v_indices;
  PyObject *__pyx_v_update = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_g,&__pyx_n_s_p,&__pyx_n_s_indices,&__pyx_n_s_update,0};
    PyObject* values[4] = {0,0,0,0};
    values[3] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 4, 1); __PYX_ERR(0, 541, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_indices)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 4, 2); __PYX_ERR(0, 541, __pyx_L3_error)
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 541, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_g = ((struct __pyx_obj_5pycnn_ComputationGraph *)values[0]);
    __pyx_v_p = ((struct __pyx_obj_5pycnn_LookupParameters *)values[1]);
    __pyx_v_indices = __pyx_convert_vector_from_py_unsigned_int(values[2]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 541, __pyx_L3_error)
    __pyx_v_update = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 541, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn._lookupBatchExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_g), __pyx_ptype_5pycnn_ComputationGraph, 1, "g", 0))) __PYX_ERR(0, 541, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_5pycnn_LookupParameters, 1, "p", 0))) __PYX_ERR(0, 541, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_22_lookupBatchExpression___cinit__(((struct __pyx_obj_5pycnn__lookupBatchExpression *)__pyx_v_self), __pyx_v_g, __pyx_v_p, __pyx_v_indices, __pyx_v_update);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_22_lookupBatchExpression___cinit__(struct __pyx_obj_5pycnn__lookupBatchExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, std::vector<unsigned int>  __pyx_v_indices, PyObject *__pyx_v_update) {
  cnn::expr::Expression __pyx_v_e;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  long __pyx_t_5;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":542
 *     cdef UnsignedVectorValue val
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, vector[unsigned] indices, update=True):
 *         self.val = UnsignedVectorValue(indices)             # <<<<<<<<<<<<<<
 *         self.cg_version = g.version()
 *         cdef CExpression e
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_unsigned_int(__pyx_v_indices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_UnsignedVectorValue), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->val);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->val));
  __pyx_v_self->val = ((struct __pyx_obj_5pycnn_UnsignedVectorValue *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":543
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, vector[unsigned] indices, update=True):
 *         self.val = UnsignedVectorValue(indices)
 *         self.cg_version = g.version()             # <<<<<<<<<<<<<<
 *         cdef CExpression e
 *         if update:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_g->__pyx_vtab)->version(__pyx_v_g, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 543, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 543, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->__pyx_base.cg_version = __pyx_t_3;

  /* "pycnn.pyx":545
 *         self.cg_version = g.version()
 *         cdef CExpression e
 *         if update:             # <<<<<<<<<<<<<<
 *             e = c_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 *         else:
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_update); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 545, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "pycnn.pyx":546
 *         cdef CExpression e
 *         if update:
 *             e = c_lookup(self.cgp()[0], p.thisptr, self.val.addr())             # <<<<<<<<<<<<<<
 *         else:
 *             e = c_const_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 */
    __pyx_v_e = cnn::expr::lookup((__pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))[0]), __pyx_v_p->thisptr, ((struct __pyx_vtabstruct_5pycnn_UnsignedVectorValue *)__pyx_v_self->val->__pyx_vtab)->addr(__pyx_v_self->val));

    /* "pycnn.pyx":545
 *         self.cg_version = g.version()
 *         cdef CExpression e
 *         if update:             # <<<<<<<<<<<<<<
 *             e = c_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 *         else:
 */
    goto __pyx_L3;
  }

  /* "pycnn.pyx":548
 *             e = c_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 *         else:
 *             e = c_const_lookup(self.cgp()[0], p.thisptr, self.val.addr())             # <<<<<<<<<<<<<<
 *         self.vindex = e.i
 *         g._inputs.append(self)
 */
  /*else*/ {
    __pyx_v_e = cnn::expr::const_lookup((__pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))[0]), __pyx_v_p->thisptr, ((struct __pyx_vtabstruct_5pycnn_UnsignedVectorValue *)__pyx_v_self->val->__pyx_vtab)->addr(__pyx_v_self->val));
  }
  __pyx_L3:;

  /* "pycnn.pyx":549
 *         else:
 *             e = c_const_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 *         self.vindex = e.i             # <<<<<<<<<<<<<<
 *         g._inputs.append(self)
 *     def set(self,i):
 */
  __pyx_t_5 = __pyx_v_e.i;
  __pyx_v_self->__pyx_base.vindex = __pyx_t_5;

  /* "pycnn.pyx":550
 *             e = c_const_lookup(self.cgp()[0], p.thisptr, self.val.addr())
 *         self.vindex = e.i
 *         g._inputs.append(self)             # <<<<<<<<<<<<<<
 *     def set(self,i):
 *         self.cgp().invalidate()
 */
  if (unlikely(__pyx_v_g->_inputs == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "append");
    __PYX_ERR(0, 550, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyList_Append(__pyx_v_g->_inputs, ((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_6 == -1)) __PYX_ERR(0, 550, __pyx_L1_error)

  /* "pycnn.pyx":541
 * cdef class _lookupBatchExpression(Expression):
 *     cdef UnsignedVectorValue val
 *     def __cinit__(self, ComputationGraph g, LookupParameters p, vector[unsigned] indices, update=True):             # <<<<<<<<<<<<<<
 *         self.val = UnsignedVectorValue(indices)
 *         self.cg_version = g.version()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn._lookupBatchExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":551
 *         self.vindex = e.i
 *         g._inputs.append(self)
 *     def set(self,i):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(i)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_22_lookupBatchExpression_3set(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static PyObject *__pyx_pw_5pycnn_22_lookupBatchExpression_3set(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_22_lookupBatchExpression_2set(((struct __pyx_obj_5pycnn__lookupBatchExpression *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_22_lookupBatchExpression_2set(struct __pyx_obj_5pycnn__lookupBatchExpression *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("set", 0);

  /* "pycnn.pyx":552
 *         g._inputs.append(self)
 *     def set(self,i):
 *         self.cgp().invalidate()             # <<<<<<<<<<<<<<
 *         self.val.set(i)
 * 
 */
  __pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))->invalidate();

  /* "pycnn.pyx":553
 *     def set(self,i):
 *         self.cgp().invalidate()
 *         self.val.set(i)             # <<<<<<<<<<<<<<
 * 
 * def lookup(LookupParameters p, unsigned index=0, update=True):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->val), __pyx_n_s_set); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_i);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":551
 *         self.vindex = e.i
 *         g._inputs.append(self)
 *     def set(self,i):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(i)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn._lookupBatchExpression.set", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":555
 *         self.val.set(i)
 * 
 * def lookup(LookupParameters p, unsigned index=0, update=True):             # <<<<<<<<<<<<<<
 *     return _cg.lookup(p, index, update)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_15lookup(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_15lookup = {"lookup", (PyCFunction)__pyx_pw_5pycnn_15lookup, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5pycnn_15lookup(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p = 0;
  unsigned int __pyx_v_index;
  PyObject *__pyx_v_update = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lookup (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_p,&__pyx_n_s_index,&__pyx_n_s_update,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_index);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "lookup") < 0)) __PYX_ERR(0, 555, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_p = ((struct __pyx_obj_5pycnn_LookupParameters *)values[0]);
    if (values[1]) {
      __pyx_v_index = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_index == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 555, __pyx_L3_error)
    } else {
      __pyx_v_index = ((unsigned int)0);
    }
    __pyx_v_update = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("lookup", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 555, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.lookup", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_5pycnn_LookupParameters, 1, "p", 0))) __PYX_ERR(0, 555, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_14lookup(__pyx_self, __pyx_v_p, __pyx_v_index, __pyx_v_update);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_14lookup(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, unsigned int __pyx_v_index, PyObject *__pyx_v_update) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup __pyx_t_2;
  __Pyx_RefNannySetupContext("lookup", 0);

  /* "pycnn.pyx":556
 * 
 * def lookup(LookupParameters p, unsigned index=0, update=True):
 *     return _cg.lookup(p, index, update)             # <<<<<<<<<<<<<<
 * 
 * def lookup_batch(LookupParameters p, vector[unsigned] indices, update=True):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 2;
  __pyx_t_2.v = __pyx_v_index;
  __pyx_t_2.update = __pyx_v_update;
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->lookup(__pyx_v_5pycnn__cg, __pyx_v_p, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":555
 *         self.val.set(i)
 * 
 * def lookup(LookupParameters p, unsigned index=0, update=True):             # <<<<<<<<<<<<<<
 *     return _cg.lookup(p, index, update)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.lookup", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":558
 *     return _cg.lookup(p, index, update)
 * 
 * def lookup_batch(LookupParameters p, vector[unsigned] indices, update=True):             # <<<<<<<<<<<<<<
 *     return _cg.lookup_batch(p, indices, update)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_17lookup_batch(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_17lookup_batch = {"lookup_batch", (PyCFunction)__pyx_pw_5pycnn_17lookup_batch, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5pycnn_17lookup_batch(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p = 0;
  std::vector<unsigned int>  __pyx_v_indices;
  PyObject *__pyx_v_update = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lookup_batch (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_p,&__pyx_n_s_indices,&__pyx_n_s_update,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_indices)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("lookup_batch", 0, 2, 3, 1); __PYX_ERR(0, 558, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_update);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "lookup_batch") < 0)) __PYX_ERR(0, 558, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_p = ((struct __pyx_obj_5pycnn_LookupParameters *)values[0]);
    __pyx_v_indices = __pyx_convert_vector_from_py_unsigned_int(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 558, __pyx_L3_error)
    __pyx_v_update = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("lookup_batch", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 558, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.lookup_batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_5pycnn_LookupParameters, 1, "p", 0))) __PYX_ERR(0, 558, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_16lookup_batch(__pyx_self, __pyx_v_p, __pyx_v_indices, __pyx_v_update);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16lookup_batch(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_LookupParameters *__pyx_v_p, std::vector<unsigned int>  __pyx_v_indices, PyObject *__pyx_v_update) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup_batch __pyx_t_2;
  __Pyx_RefNannySetupContext("lookup_batch", 0);

  /* "pycnn.pyx":559
 * 
 * def lookup_batch(LookupParameters p, vector[unsigned] indices, update=True):
 *     return _cg.lookup_batch(p, indices, update)             # <<<<<<<<<<<<<<
 * 
 * cdef class _pickerExpression(Expression):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.update = __pyx_v_update;
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->lookup_batch(__pyx_v_5pycnn__cg, __pyx_v_p, __pyx_v_indices, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 559, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":558
 *     return _cg.lookup(p, index, update)
 * 
 * def lookup_batch(LookupParameters p, vector[unsigned] indices, update=True):             # <<<<<<<<<<<<<<
 *     return _cg.lookup_batch(p, indices, update)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.lookup_batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":563
 * cdef class _pickerExpression(Expression):
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, Expression e, unsigned index=0):             # <<<<<<<<<<<<<<
 *         self.val = UnsignedValue(index)
 *         #self.cg = e.cg
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_17_pickerExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_17_pickerExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_e = 0;
  unsigned int __pyx_v_index;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_g,&__pyx_n_s_e,&__pyx_n_s_index,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); __PYX_ERR(0, 563, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_index);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 563, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_g = ((struct __pyx_obj_5pycnn_ComputationGraph *)values[0]);
    __pyx_v_e = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
    if (values[2]) {
      __pyx_v_index = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_index == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 563, __pyx_L3_error)
    } else {
      __pyx_v_index = ((unsigned int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 563, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn._pickerExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_g), __pyx_ptype_5pycnn_ComputationGraph, 1, "g", 0))) __PYX_ERR(0, 563, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_e), __pyx_ptype_5pycnn_Expression, 1, "e", 0))) __PYX_ERR(0, 563, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_17_pickerExpression___cinit__(((struct __pyx_obj_5pycnn__pickerExpression *)__pyx_v_self), __pyx_v_g, __pyx_v_e, __pyx_v_index);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_17_pickerExpression___cinit__(struct __pyx_obj_5pycnn__pickerExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, unsigned int __pyx_v_index) {
  cnn::expr::Expression __pyx_v_ce;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  long __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":564
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, Expression e, unsigned index=0):
 *         self.val = UnsignedValue(index)             # <<<<<<<<<<<<<<
 *         #self.cg = e.cg
 *         self.cg_version = g.version()
 */
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 564, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 564, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_UnsignedValue), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 564, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->val);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->val));
  __pyx_v_self->val = ((struct __pyx_obj_5pycnn_UnsignedValue *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":566
 *         self.val = UnsignedValue(index)
 *         #self.cg = e.cg
 *         self.cg_version = g.version()             # <<<<<<<<<<<<<<
 *         cdef CExpression ce
 *         ce = c_pick(e.c(), self.val.addr())
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_g->__pyx_vtab)->version(__pyx_v_g, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->__pyx_base.cg_version = __pyx_t_3;

  /* "pycnn.pyx":568
 *         self.cg_version = g.version()
 *         cdef CExpression ce
 *         ce = c_pick(e.c(), self.val.addr())             # <<<<<<<<<<<<<<
 *         self.vindex = ce.i
 *         g._inputs.append(self)
 */
  __pyx_v_ce = cnn::expr::pick(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_e->__pyx_vtab)->c(__pyx_v_e), ((struct __pyx_vtabstruct_5pycnn_UnsignedValue *)__pyx_v_self->val->__pyx_vtab)->addr(__pyx_v_self->val));

  /* "pycnn.pyx":569
 *         cdef CExpression ce
 *         ce = c_pick(e.c(), self.val.addr())
 *         self.vindex = ce.i             # <<<<<<<<<<<<<<
 *         g._inputs.append(self)
 *     def set_index(self,i):
 */
  __pyx_t_4 = __pyx_v_ce.i;
  __pyx_v_self->__pyx_base.vindex = __pyx_t_4;

  /* "pycnn.pyx":570
 *         ce = c_pick(e.c(), self.val.addr())
 *         self.vindex = ce.i
 *         g._inputs.append(self)             # <<<<<<<<<<<<<<
 *     def set_index(self,i):
 *         self.cgp().invalidate()
 */
  if (unlikely(__pyx_v_g->_inputs == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "append");
    __PYX_ERR(0, 570, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_g->_inputs, ((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 570, __pyx_L1_error)

  /* "pycnn.pyx":563
 * cdef class _pickerExpression(Expression):
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, Expression e, unsigned index=0):             # <<<<<<<<<<<<<<
 *         self.val = UnsignedValue(index)
 *         #self.cg = e.cg
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn._pickerExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":571
 *         self.vindex = ce.i
 *         g._inputs.append(self)
 *     def set_index(self,i):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(i)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_17_pickerExpression_3set_index(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static PyObject *__pyx_pw_5pycnn_17_pickerExpression_3set_index(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_index (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_17_pickerExpression_2set_index(((struct __pyx_obj_5pycnn__pickerExpression *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_17_pickerExpression_2set_index(struct __pyx_obj_5pycnn__pickerExpression *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("set_index", 0);

  /* "pycnn.pyx":572
 *         g._inputs.append(self)
 *     def set_index(self,i):
 *         self.cgp().invalidate()             # <<<<<<<<<<<<<<
 *         self.val.set(i)
 * 
 */
  __pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))->invalidate();

  /* "pycnn.pyx":573
 *     def set_index(self,i):
 *         self.cgp().invalidate()
 *         self.val.set(i)             # <<<<<<<<<<<<<<
 * 
 * def pick(Expression e, unsigned index=0):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->val), __pyx_n_s_set); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 573, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 573, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_i);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 573, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":571
 *         self.vindex = ce.i
 *         g._inputs.append(self)
 *     def set_index(self,i):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(i)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn._pickerExpression.set_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":575
 *         self.val.set(i)
 * 
 * def pick(Expression e, unsigned index=0):             # <<<<<<<<<<<<<<
 *     return _cg.outputPicker(e, index)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_19pick(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_19pick = {"pick", (PyCFunction)__pyx_pw_5pycnn_19pick, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5pycnn_19pick(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_e = 0;
  unsigned int __pyx_v_index;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pick (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_e,&__pyx_n_s_index,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_index);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pick") < 0)) __PYX_ERR(0, 575, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_e = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    if (values[1]) {
      __pyx_v_index = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_index == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 575, __pyx_L3_error)
    } else {
      __pyx_v_index = ((unsigned int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pick", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 575, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.pick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_e), __pyx_ptype_5pycnn_Expression, 1, "e", 0))) __PYX_ERR(0, 575, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_18pick(__pyx_self, __pyx_v_e, __pyx_v_index);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_18pick(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, unsigned int __pyx_v_index) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_16ComputationGraph_outputPicker __pyx_t_2;
  __Pyx_RefNannySetupContext("pick", 0);

  /* "pycnn.pyx":576
 * 
 * def pick(Expression e, unsigned index=0):
 *     return _cg.outputPicker(e, index)             # <<<<<<<<<<<<<<
 * 
 * cdef class _pickerBatchExpression(Expression):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.v = __pyx_v_index;
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->outputPicker(__pyx_v_5pycnn__cg, __pyx_v_e, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":575
 *         self.val.set(i)
 * 
 * def pick(Expression e, unsigned index=0):             # <<<<<<<<<<<<<<
 *     return _cg.outputPicker(e, index)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.pick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":580
 * cdef class _pickerBatchExpression(Expression):
 *     cdef UnsignedVectorValue val
 *     def __cinit__(self, ComputationGraph g, Expression e, vector[unsigned] indices):             # <<<<<<<<<<<<<<
 *         self.val = UnsignedVectorValue(indices)
 *         self.cg_version = g.version()
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_22_pickerBatchExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_22_pickerBatchExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_e = 0;
  std::vector<unsigned int>  __pyx_v_indices;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_g,&__pyx_n_s_e,&__pyx_n_s_indices,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, 1); __PYX_ERR(0, 580, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_indices)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, 2); __PYX_ERR(0, 580, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 580, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_g = ((struct __pyx_obj_5pycnn_ComputationGraph *)values[0]);
    __pyx_v_e = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
    __pyx_v_indices = __pyx_convert_vector_from_py_unsigned_int(values[2]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 580, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 580, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn._pickerBatchExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_g), __pyx_ptype_5pycnn_ComputationGraph, 1, "g", 0))) __PYX_ERR(0, 580, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_e), __pyx_ptype_5pycnn_Expression, 1, "e", 0))) __PYX_ERR(0, 580, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_22_pickerBatchExpression___cinit__(((struct __pyx_obj_5pycnn__pickerBatchExpression *)__pyx_v_self), __pyx_v_g, __pyx_v_e, __pyx_v_indices);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_22_pickerBatchExpression___cinit__(struct __pyx_obj_5pycnn__pickerBatchExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, std::vector<unsigned int>  __pyx_v_indices) {
  cnn::expr::Expression __pyx_v_ce;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  long __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":581
 *     cdef UnsignedVectorValue val
 *     def __cinit__(self, ComputationGraph g, Expression e, vector[unsigned] indices):
 *         self.val = UnsignedVectorValue(indices)             # <<<<<<<<<<<<<<
 *         self.cg_version = g.version()
 *         cdef CExpression ce
 */
  __pyx_t_1 = __pyx_convert_vector_to_py_unsigned_int(__pyx_v_indices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_UnsignedVectorValue), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->val);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->val));
  __pyx_v_self->val = ((struct __pyx_obj_5pycnn_UnsignedVectorValue *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":582
 *     def __cinit__(self, ComputationGraph g, Expression e, vector[unsigned] indices):
 *         self.val = UnsignedVectorValue(indices)
 *         self.cg_version = g.version()             # <<<<<<<<<<<<<<
 *         cdef CExpression ce
 *         ce = c_pick(e.c(), self.val.addr())
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_g->__pyx_vtab)->version(__pyx_v_g, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 582, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->__pyx_base.cg_version = __pyx_t_3;

  /* "pycnn.pyx":584
 *         self.cg_version = g.version()
 *         cdef CExpression ce
 *         ce = c_pick(e.c(), self.val.addr())             # <<<<<<<<<<<<<<
 *         self.vindex = ce.i
 *         g._inputs.append(self)
 */
  __pyx_v_ce = cnn::expr::pick(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_e->__pyx_vtab)->c(__pyx_v_e), ((struct __pyx_vtabstruct_5pycnn_UnsignedVectorValue *)__pyx_v_self->val->__pyx_vtab)->addr(__pyx_v_self->val));

  /* "pycnn.pyx":585
 *         cdef CExpression ce
 *         ce = c_pick(e.c(), self.val.addr())
 *         self.vindex = ce.i             # <<<<<<<<<<<<<<
 *         g._inputs.append(self)
 *     def set_index(self,i):
 */
  __pyx_t_4 = __pyx_v_ce.i;
  __pyx_v_self->__pyx_base.vindex = __pyx_t_4;

  /* "pycnn.pyx":586
 *         ce = c_pick(e.c(), self.val.addr())
 *         self.vindex = ce.i
 *         g._inputs.append(self)             # <<<<<<<<<<<<<<
 *     def set_index(self,i):
 *         self.cgp().invalidate()
 */
  if (unlikely(__pyx_v_g->_inputs == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "append");
    __PYX_ERR(0, 586, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_g->_inputs, ((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 586, __pyx_L1_error)

  /* "pycnn.pyx":580
 * cdef class _pickerBatchExpression(Expression):
 *     cdef UnsignedVectorValue val
 *     def __cinit__(self, ComputationGraph g, Expression e, vector[unsigned] indices):             # <<<<<<<<<<<<<<
 *         self.val = UnsignedVectorValue(indices)
 *         self.cg_version = g.version()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn._pickerBatchExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":587
 *         self.vindex = ce.i
 *         g._inputs.append(self)
 *     def set_index(self,i):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(i)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_22_pickerBatchExpression_3set_index(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static PyObject *__pyx_pw_5pycnn_22_pickerBatchExpression_3set_index(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_index (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_22_pickerBatchExpression_2set_index(((struct __pyx_obj_5pycnn__pickerBatchExpression *)__pyx_v_self), ((PyObject *)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_22_pickerBatchExpression_2set_index(struct __pyx_obj_5pycnn__pickerBatchExpression *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("set_index", 0);

  /* "pycnn.pyx":588
 *         g._inputs.append(self)
 *     def set_index(self,i):
 *         self.cgp().invalidate()             # <<<<<<<<<<<<<<
 *         self.val.set(i)
 * 
 */
  __pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))->invalidate();

  /* "pycnn.pyx":589
 *     def set_index(self,i):
 *         self.cgp().invalidate()
 *         self.val.set(i)             # <<<<<<<<<<<<<<
 * 
 * def pick_batch(Expression e, vector[unsigned] indices):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->val), __pyx_n_s_set); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 589, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 589, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_i);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 589, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":587
 *         self.vindex = ce.i
 *         g._inputs.append(self)
 *     def set_index(self,i):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(i)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn._pickerBatchExpression.set_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":591
 *         self.val.set(i)
 * 
 * def pick_batch(Expression e, vector[unsigned] indices):             # <<<<<<<<<<<<<<
 *     return _cg.outputBatchPicker(e, indices)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_21pick_batch(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_21pick_batch = {"pick_batch", (PyCFunction)__pyx_pw_5pycnn_21pick_batch, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5pycnn_21pick_batch(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_e = 0;
  std::vector<unsigned int>  __pyx_v_indices;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pick_batch (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_e,&__pyx_n_s_indices,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_indices)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pick_batch", 1, 2, 2, 1); __PYX_ERR(0, 591, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pick_batch") < 0)) __PYX_ERR(0, 591, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_e = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_indices = __pyx_convert_vector_from_py_unsigned_int(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 591, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pick_batch", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 591, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.pick_batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_e), __pyx_ptype_5pycnn_Expression, 1, "e", 0))) __PYX_ERR(0, 591, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_20pick_batch(__pyx_self, __pyx_v_e, __pyx_v_indices);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_20pick_batch(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_e, std::vector<unsigned int>  __pyx_v_indices) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("pick_batch", 0);

  /* "pycnn.pyx":592
 * 
 * def pick_batch(Expression e, vector[unsigned] indices):
 *     return _cg.outputBatchPicker(e, indices)             # <<<<<<<<<<<<<<
 * 
 * cdef class _hingeExpression(Expression):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->outputBatchPicker(__pyx_v_5pycnn__cg, __pyx_v_e, __pyx_v_indices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":591
 *         self.val.set(i)
 * 
 * def pick_batch(Expression e, vector[unsigned] indices):             # <<<<<<<<<<<<<<
 *     return _cg.outputBatchPicker(e, indices)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.pick_batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":596
 * cdef class _hingeExpression(Expression):
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, Expression x, unsigned index, float m=1.0):             # <<<<<<<<<<<<<<
 *         self.val = UnsignedValue(index)
 *         #self.cg = x.cg
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_16_hingeExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_16_hingeExpression_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  unsigned int __pyx_v_index;
  float __pyx_v_m;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_g,&__pyx_n_s_x,&__pyx_n_s_index,&__pyx_n_s_m,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_g)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 4, 1); __PYX_ERR(0, 596, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_index)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 4, 2); __PYX_ERR(0, 596, __pyx_L3_error)
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_m);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 596, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_g = ((struct __pyx_obj_5pycnn_ComputationGraph *)values[0]);
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
    __pyx_v_index = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_index == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 596, __pyx_L3_error)
    if (values[3]) {
      __pyx_v_m = __pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_m == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 596, __pyx_L3_error)
    } else {
      __pyx_v_m = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 596, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn._hingeExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_g), __pyx_ptype_5pycnn_ComputationGraph, 1, "g", 0))) __PYX_ERR(0, 596, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 596, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_16_hingeExpression___cinit__(((struct __pyx_obj_5pycnn__hingeExpression *)__pyx_v_self), __pyx_v_g, __pyx_v_x, __pyx_v_index, __pyx_v_m);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_16_hingeExpression___cinit__(struct __pyx_obj_5pycnn__hingeExpression *__pyx_v_self, struct __pyx_obj_5pycnn_ComputationGraph *__pyx_v_g, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_index, float __pyx_v_m) {
  cnn::expr::Expression __pyx_v_e;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  long __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":597
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, Expression x, unsigned index, float m=1.0):
 *         self.val = UnsignedValue(index)             # <<<<<<<<<<<<<<
 *         #self.cg = x.cg
 *         self.cg_version = g.version()
 */
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_UnsignedValue), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->val);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->val));
  __pyx_v_self->val = ((struct __pyx_obj_5pycnn_UnsignedValue *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":599
 *         self.val = UnsignedValue(index)
 *         #self.cg = x.cg
 *         self.cg_version = g.version()             # <<<<<<<<<<<<<<
 *         cdef CExpression e
 *         e = c_hinge(x.c(), self.val.addr(), m)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_g->__pyx_vtab)->version(__pyx_v_g, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->__pyx_base.cg_version = __pyx_t_3;

  /* "pycnn.pyx":601
 *         self.cg_version = g.version()
 *         cdef CExpression e
 *         e = c_hinge(x.c(), self.val.addr(), m)             # <<<<<<<<<<<<<<
 *         self.vindex = e.i
 *         g._inputs.append(self)
 */
  __pyx_v_e = cnn::expr::hinge(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_UnsignedValue *)__pyx_v_self->val->__pyx_vtab)->addr(__pyx_v_self->val), __pyx_v_m);

  /* "pycnn.pyx":602
 *         cdef CExpression e
 *         e = c_hinge(x.c(), self.val.addr(), m)
 *         self.vindex = e.i             # <<<<<<<<<<<<<<
 *         g._inputs.append(self)
 *     def set_index(self, unsigned i):
 */
  __pyx_t_4 = __pyx_v_e.i;
  __pyx_v_self->__pyx_base.vindex = __pyx_t_4;

  /* "pycnn.pyx":603
 *         e = c_hinge(x.c(), self.val.addr(), m)
 *         self.vindex = e.i
 *         g._inputs.append(self)             # <<<<<<<<<<<<<<
 *     def set_index(self, unsigned i):
 *         self.cgp().invalidate()
 */
  if (unlikely(__pyx_v_g->_inputs == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%s'", "append");
    __PYX_ERR(0, 603, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_g->_inputs, ((PyObject *)__pyx_v_self)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 603, __pyx_L1_error)

  /* "pycnn.pyx":596
 * cdef class _hingeExpression(Expression):
 *     cdef UnsignedValue val
 *     def __cinit__(self, ComputationGraph g, Expression x, unsigned index, float m=1.0):             # <<<<<<<<<<<<<<
 *         self.val = UnsignedValue(index)
 *         #self.cg = x.cg
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pycnn._hingeExpression.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":604
 *         self.vindex = e.i
 *         g._inputs.append(self)
 *     def set_index(self, unsigned i):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(i)
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16_hingeExpression_3set_index(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static PyObject *__pyx_pw_5pycnn_16_hingeExpression_3set_index(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  unsigned int __pyx_v_i;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_index (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_unsigned_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 604, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn._hingeExpression.set_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_16_hingeExpression_2set_index(((struct __pyx_obj_5pycnn__hingeExpression *)__pyx_v_self), ((unsigned int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16_hingeExpression_2set_index(struct __pyx_obj_5pycnn__hingeExpression *__pyx_v_self, unsigned int __pyx_v_i) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("set_index", 0);

  /* "pycnn.pyx":605
 *         g._inputs.append(self)
 *     def set_index(self, unsigned i):
 *         self.cgp().invalidate()             # <<<<<<<<<<<<<<
 *         self.val.set(i)
 * 
 */
  __pyx_f_5pycnn_10Expression_cgp(((struct __pyx_obj_5pycnn_Expression *)__pyx_v_self))->invalidate();

  /* "pycnn.pyx":606
 *     def set_index(self, unsigned i):
 *         self.cgp().invalidate()
 *         self.val.set(i)             # <<<<<<<<<<<<<<
 * 
 * def hinge(Expression x, unsigned index, float m=1.0):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->val), __pyx_n_s_set); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_unsigned_int(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 606, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 606, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 606, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":604
 *         self.vindex = e.i
 *         g._inputs.append(self)
 *     def set_index(self, unsigned i):             # <<<<<<<<<<<<<<
 *         self.cgp().invalidate()
 *         self.val.set(i)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn._hingeExpression.set_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":608
 *         self.val.set(i)
 * 
 * def hinge(Expression x, unsigned index, float m=1.0):             # <<<<<<<<<<<<<<
 *     return _hingeExpression(_cg, x, index, m)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_23hinge(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_5pycnn_23hinge = {"hinge", (PyCFunction)__pyx_pw_5pycnn_23hinge, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5pycnn_23hinge(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  unsigned int __pyx_v_index;
  float __pyx_v_m;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("hinge (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_index,&__pyx_n_s_m,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_index)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("hinge", 0, 2, 3, 1); __PYX_ERR(0, 608, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_m);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "hinge") < 0)) __PYX_ERR(0, 608, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_index = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_index == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 608, __pyx_L3_error)
    if (values[2]) {
      __pyx_v_m = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_m == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 608, __pyx_L3_error)
    } else {
      __pyx_v_m = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("hinge", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 608, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.hinge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 608, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_22hinge(__pyx_self, __pyx_v_x, __pyx_v_index, __pyx_v_m);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_22hinge(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_index, float __pyx_v_m) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("hinge", 0);

  /* "pycnn.pyx":609
 * 
 * def hinge(Expression x, unsigned index, float m=1.0):
 *     return _hingeExpression(_cg, x, index, m)             # <<<<<<<<<<<<<<
 * 
 * # }}}
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_int(__pyx_v_index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_m); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_5pycnn__cg));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_5pycnn__cg));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_5pycnn__cg));
  __Pyx_INCREF(((PyObject *)__pyx_v_x));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_x));
  PyTuple_SET_ITEM(__pyx_t_3, 1, ((PyObject *)__pyx_v_x));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn__hingeExpression), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":608
 *         self.val.set(i)
 * 
 * def hinge(Expression x, unsigned index, float m=1.0):             # <<<<<<<<<<<<<<
 *     return _hingeExpression(_cg, x, index, m)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.hinge", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":615
 * 
 * # binary-exp
 * cpdef Expression cdiv(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_cdiv(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression colwise_add(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_colwise_add(x.c(), y.c()))
 * 
 */

static PyObject *__pyx_pw_5pycnn_25cdiv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_cdiv(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cdiv", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::cdiv(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.cdiv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_25cdiv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_25cdiv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cdiv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdiv", 1, 2, 2, 1); __PYX_ERR(0, 615, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cdiv") < 0)) __PYX_ERR(0, 615, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cdiv", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 615, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.cdiv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 615, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 615, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_24cdiv(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_24cdiv(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cdiv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_cdiv(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.cdiv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":616
 * # binary-exp
 * cpdef Expression cdiv(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_cdiv(x.c(), y.c()))
 * cpdef Expression colwise_add(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_colwise_add(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * 
 * cpdef Expression trace_of_product(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_trace_of_product(x.c(), y.c()))
 */

static PyObject *__pyx_pw_5pycnn_27colwise_add(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_colwise_add(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("colwise_add", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::colwise_add(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.colwise_add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_27colwise_add(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_27colwise_add(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("colwise_add (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("colwise_add", 1, 2, 2, 1); __PYX_ERR(0, 616, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "colwise_add") < 0)) __PYX_ERR(0, 616, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("colwise_add", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 616, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.colwise_add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 616, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 616, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_26colwise_add(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_26colwise_add(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("colwise_add", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_colwise_add(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.colwise_add", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":618
 * cpdef Expression colwise_add(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_colwise_add(x.c(), y.c()))
 * 
 * cpdef Expression trace_of_product(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_trace_of_product(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression cwise_multiply(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_cwise_multiply(x.c(), y.c()))
 * cpdef Expression dot_product(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_dot_product(x.c(), y.c()))
 */

static PyObject *__pyx_pw_5pycnn_29trace_of_product(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_trace_of_product(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("trace_of_product", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::trace_of_product(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.trace_of_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_29trace_of_product(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_29trace_of_product(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("trace_of_product (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("trace_of_product", 1, 2, 2, 1); __PYX_ERR(0, 618, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "trace_of_product") < 0)) __PYX_ERR(0, 618, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("trace_of_product", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 618, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.trace_of_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 618, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 618, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_28trace_of_product(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_28trace_of_product(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("trace_of_product", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_trace_of_product(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.trace_of_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":619
 * 
 * cpdef Expression trace_of_product(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_trace_of_product(x.c(), y.c()))
 * cpdef Expression cwise_multiply(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_cwise_multiply(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression dot_product(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_dot_product(x.c(), y.c()))
 * cpdef Expression squared_distance(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_squared_distance(x.c(), y.c()))
 */

static PyObject *__pyx_pw_5pycnn_31cwise_multiply(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_cwise_multiply(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cwise_multiply", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::cwise_multiply(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.cwise_multiply", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_31cwise_multiply(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_31cwise_multiply(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cwise_multiply (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cwise_multiply", 1, 2, 2, 1); __PYX_ERR(0, 619, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cwise_multiply") < 0)) __PYX_ERR(0, 619, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cwise_multiply", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 619, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.cwise_multiply", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 619, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 619, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_30cwise_multiply(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_30cwise_multiply(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cwise_multiply", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_cwise_multiply(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.cwise_multiply", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":620
 * cpdef Expression trace_of_product(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_trace_of_product(x.c(), y.c()))
 * cpdef Expression cwise_multiply(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_cwise_multiply(x.c(), y.c()))
 * cpdef Expression dot_product(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_dot_product(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression squared_distance(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_squared_distance(x.c(), y.c()))
 * cpdef Expression l1_distance(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_l1_distance(x.c(), y.c()))
 */

static PyObject *__pyx_pw_5pycnn_33dot_product(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_dot_product(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dot_product", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::dot_product(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.dot_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_33dot_product(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_33dot_product(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot_product (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dot_product", 1, 2, 2, 1); __PYX_ERR(0, 620, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dot_product") < 0)) __PYX_ERR(0, 620, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dot_product", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 620, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.dot_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 620, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 620, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_32dot_product(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_32dot_product(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dot_product", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_dot_product(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.dot_product", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":621
 * cpdef Expression cwise_multiply(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_cwise_multiply(x.c(), y.c()))
 * cpdef Expression dot_product(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_dot_product(x.c(), y.c()))
 * cpdef Expression squared_distance(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_squared_distance(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression l1_distance(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_l1_distance(x.c(), y.c()))
 * cpdef Expression binary_log_loss(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_binary_log_loss(x.c(), y.c()))
 */

static PyObject *__pyx_pw_5pycnn_35squared_distance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_squared_distance(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("squared_distance", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::squared_distance(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.squared_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_35squared_distance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_35squared_distance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("squared_distance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("squared_distance", 1, 2, 2, 1); __PYX_ERR(0, 621, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "squared_distance") < 0)) __PYX_ERR(0, 621, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("squared_distance", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 621, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.squared_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 621, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 621, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_34squared_distance(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_34squared_distance(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("squared_distance", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_squared_distance(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.squared_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":622
 * cpdef Expression dot_product(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_dot_product(x.c(), y.c()))
 * cpdef Expression squared_distance(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_squared_distance(x.c(), y.c()))
 * cpdef Expression l1_distance(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_l1_distance(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression binary_log_loss(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_binary_log_loss(x.c(), y.c()))
 * cpdef Expression conv1d_narrow(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_conv1d_narrow(x.c(), y.c()))
 */

static PyObject *__pyx_pw_5pycnn_37l1_distance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_l1_distance(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("l1_distance", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::l1_distance(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.l1_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_37l1_distance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_37l1_distance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("l1_distance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("l1_distance", 1, 2, 2, 1); __PYX_ERR(0, 622, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "l1_distance") < 0)) __PYX_ERR(0, 622, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("l1_distance", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 622, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.l1_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 622, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 622, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_36l1_distance(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_36l1_distance(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("l1_distance", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_l1_distance(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.l1_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":623
 * cpdef Expression squared_distance(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_squared_distance(x.c(), y.c()))
 * cpdef Expression l1_distance(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_l1_distance(x.c(), y.c()))
 * cpdef Expression binary_log_loss(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_binary_log_loss(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression conv1d_narrow(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_conv1d_narrow(x.c(), y.c()))
 * cpdef Expression conv1d_wide(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_conv1d_wide(x.c(), y.c()))
 */

static PyObject *__pyx_pw_5pycnn_39binary_log_loss(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_binary_log_loss(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("binary_log_loss", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::binary_log_loss(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.binary_log_loss", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_39binary_log_loss(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_39binary_log_loss(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("binary_log_loss (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("binary_log_loss", 1, 2, 2, 1); __PYX_ERR(0, 623, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "binary_log_loss") < 0)) __PYX_ERR(0, 623, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("binary_log_loss", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 623, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.binary_log_loss", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 623, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 623, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_38binary_log_loss(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_38binary_log_loss(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("binary_log_loss", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_binary_log_loss(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.binary_log_loss", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":624
 * cpdef Expression l1_distance(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_l1_distance(x.c(), y.c()))
 * cpdef Expression binary_log_loss(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_binary_log_loss(x.c(), y.c()))
 * cpdef Expression conv1d_narrow(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_conv1d_narrow(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression conv1d_wide(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_conv1d_wide(x.c(), y.c()))
 * 
 */

static PyObject *__pyx_pw_5pycnn_41conv1d_narrow(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_conv1d_narrow(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("conv1d_narrow", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 624, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::conv1d_narrow(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 624, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.conv1d_narrow", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_41conv1d_narrow(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_41conv1d_narrow(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("conv1d_narrow (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("conv1d_narrow", 1, 2, 2, 1); __PYX_ERR(0, 624, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "conv1d_narrow") < 0)) __PYX_ERR(0, 624, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("conv1d_narrow", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 624, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.conv1d_narrow", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 624, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 624, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_40conv1d_narrow(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_40conv1d_narrow(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("conv1d_narrow", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_conv1d_narrow(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 624, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.conv1d_narrow", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":625
 * cpdef Expression binary_log_loss(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_binary_log_loss(x.c(), y.c()))
 * cpdef Expression conv1d_narrow(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_conv1d_narrow(x.c(), y.c()))
 * cpdef Expression conv1d_wide(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_conv1d_wide(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * 
 * # unary-exp
 */

static PyObject *__pyx_pw_5pycnn_43conv1d_wide(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_conv1d_wide(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("conv1d_wide", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::conv1d_wide(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.conv1d_wide", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_43conv1d_wide(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_43conv1d_wide(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("conv1d_wide (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("conv1d_wide", 1, 2, 2, 1); __PYX_ERR(0, 625, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "conv1d_wide") < 0)) __PYX_ERR(0, 625, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("conv1d_wide", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 625, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.conv1d_wide", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 625, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 625, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_42conv1d_wide(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_42conv1d_wide(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("conv1d_wide", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_conv1d_wide(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.conv1d_wide", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":628
 * 
 * # unary-exp
 * cpdef Expression tanh(Expression x): return Expression.from_cexpr(x.cg_version, c_tanh(x.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression exp(Expression x): return Expression.from_cexpr(x.cg_version, c_exp(x.c()))
 * cpdef Expression square(Expression x): return Expression.from_cexpr(x.cg_version, c_square(x.c()))
 */

static PyObject *__pyx_pw_5pycnn_45tanh(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_tanh(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("tanh", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::tanh(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.tanh", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_45tanh(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_45tanh(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tanh (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 628, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_44tanh(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_44tanh(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("tanh", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_tanh(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.tanh", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":629
 * # unary-exp
 * cpdef Expression tanh(Expression x): return Expression.from_cexpr(x.cg_version, c_tanh(x.c()))
 * cpdef Expression exp(Expression x): return Expression.from_cexpr(x.cg_version, c_exp(x.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression square(Expression x): return Expression.from_cexpr(x.cg_version, c_square(x.c()))
 * cpdef Expression cube(Expression x): return Expression.from_cexpr(x.cg_version, c_cube(x.c()))
 */

static PyObject *__pyx_pw_5pycnn_47exp(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_exp(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("exp", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::exp(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.exp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_47exp(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_47exp(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("exp (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 629, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_46exp(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_46exp(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("exp", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_exp(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.exp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":630
 * cpdef Expression tanh(Expression x): return Expression.from_cexpr(x.cg_version, c_tanh(x.c()))
 * cpdef Expression exp(Expression x): return Expression.from_cexpr(x.cg_version, c_exp(x.c()))
 * cpdef Expression square(Expression x): return Expression.from_cexpr(x.cg_version, c_square(x.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression cube(Expression x): return Expression.from_cexpr(x.cg_version, c_cube(x.c()))
 * cpdef Expression log(Expression x): return Expression.from_cexpr(x.cg_version, c_log(x.c()))
 */

static PyObject *__pyx_pw_5pycnn_49square(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_square(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("square", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::square(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 630, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.square", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_49square(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_49square(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("square (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 630, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_48square(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_48square(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("square", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_square(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 630, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.square", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":631
 * cpdef Expression exp(Expression x): return Expression.from_cexpr(x.cg_version, c_exp(x.c()))
 * cpdef Expression square(Expression x): return Expression.from_cexpr(x.cg_version, c_square(x.c()))
 * cpdef Expression cube(Expression x): return Expression.from_cexpr(x.cg_version, c_cube(x.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression log(Expression x): return Expression.from_cexpr(x.cg_version, c_log(x.c()))
 * cpdef Expression logistic(Expression x): return Expression.from_cexpr(x.cg_version, c_logistic(x.c()))
 */

static PyObject *__pyx_pw_5pycnn_51cube(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_cube(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cube", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::cube(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.cube", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_51cube(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_51cube(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cube (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 631, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_50cube(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_50cube(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cube", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_cube(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.cube", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":632
 * cpdef Expression square(Expression x): return Expression.from_cexpr(x.cg_version, c_square(x.c()))
 * cpdef Expression cube(Expression x): return Expression.from_cexpr(x.cg_version, c_cube(x.c()))
 * cpdef Expression log(Expression x): return Expression.from_cexpr(x.cg_version, c_log(x.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression logistic(Expression x): return Expression.from_cexpr(x.cg_version, c_logistic(x.c()))
 * cpdef Expression rectify(Expression x): return Expression.from_cexpr(x.cg_version, c_rectify(x.c()))
 */

static PyObject *__pyx_pw_5pycnn_53log(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_log(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("log", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::log(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_53log(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_53log(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 632, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_52log(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_52log(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("log", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_log(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":633
 * cpdef Expression cube(Expression x): return Expression.from_cexpr(x.cg_version, c_cube(x.c()))
 * cpdef Expression log(Expression x): return Expression.from_cexpr(x.cg_version, c_log(x.c()))
 * cpdef Expression logistic(Expression x): return Expression.from_cexpr(x.cg_version, c_logistic(x.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression rectify(Expression x): return Expression.from_cexpr(x.cg_version, c_rectify(x.c()))
 * cpdef Expression log_softmax(Expression x, list restrict=None):
 */

static PyObject *__pyx_pw_5pycnn_55logistic(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_logistic(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("logistic", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::logistic(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.logistic", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_55logistic(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_55logistic(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("logistic (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 633, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_54logistic(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_54logistic(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("logistic", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_logistic(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.logistic", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":634
 * cpdef Expression log(Expression x): return Expression.from_cexpr(x.cg_version, c_log(x.c()))
 * cpdef Expression logistic(Expression x): return Expression.from_cexpr(x.cg_version, c_logistic(x.c()))
 * cpdef Expression rectify(Expression x): return Expression.from_cexpr(x.cg_version, c_rectify(x.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression log_softmax(Expression x, list restrict=None):
 *     if restrict is None:
 */

static PyObject *__pyx_pw_5pycnn_57rectify(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_rectify(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("rectify", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::rectify(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.rectify", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_57rectify(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_57rectify(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rectify (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 634, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_56rectify(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_56rectify(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("rectify", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_rectify(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.rectify", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":635
 * cpdef Expression logistic(Expression x): return Expression.from_cexpr(x.cg_version, c_logistic(x.c()))
 * cpdef Expression rectify(Expression x): return Expression.from_cexpr(x.cg_version, c_rectify(x.c()))
 * cpdef Expression log_softmax(Expression x, list restrict=None):             # <<<<<<<<<<<<<<
 *     if restrict is None:
 *         return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c()))
 */

static PyObject *__pyx_pw_5pycnn_59log_softmax(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_log_softmax(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_log_softmax *__pyx_optional_args) {
  PyObject *__pyx_v_restrict = ((PyObject*)Py_None);
  std::vector<unsigned int>  __pyx_v_vec;
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  std::vector<unsigned int>  __pyx_t_4;
  __Pyx_RefNannySetupContext("log_softmax", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_restrict = __pyx_optional_args->__pyx_restrict;
    }
  }

  /* "pycnn.pyx":636
 * cpdef Expression rectify(Expression x): return Expression.from_cexpr(x.cg_version, c_rectify(x.c()))
 * cpdef Expression log_softmax(Expression x, list restrict=None):
 *     if restrict is None:             # <<<<<<<<<<<<<<
 *         return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c()))
 *     cdef vector[unsigned] vec = restrict
 */
  __pyx_t_1 = (__pyx_v_restrict == ((PyObject*)Py_None));
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "pycnn.pyx":637
 * cpdef Expression log_softmax(Expression x, list restrict=None):
 *     if restrict is None:
 *         return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c()))             # <<<<<<<<<<<<<<
 *     cdef vector[unsigned] vec = restrict
 *     return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c(), vec))
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));
    __pyx_t_3 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::log_softmax(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 637, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "pycnn.pyx":636
 * cpdef Expression rectify(Expression x): return Expression.from_cexpr(x.cg_version, c_rectify(x.c()))
 * cpdef Expression log_softmax(Expression x, list restrict=None):
 *     if restrict is None:             # <<<<<<<<<<<<<<
 *         return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c()))
 *     cdef vector[unsigned] vec = restrict
 */
  }

  /* "pycnn.pyx":638
 *     if restrict is None:
 *         return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c()))
 *     cdef vector[unsigned] vec = restrict             # <<<<<<<<<<<<<<
 *     return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c(), vec))
 * cpdef Expression softmax(Expression x): return Expression.from_cexpr(x.cg_version, c_softmax(x.c()))
 */
  __pyx_t_4 = __pyx_convert_vector_from_py_unsigned_int(__pyx_v_restrict); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 638, __pyx_L1_error)
  __pyx_v_vec = __pyx_t_4;

  /* "pycnn.pyx":639
 *         return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c()))
 *     cdef vector[unsigned] vec = restrict
 *     return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c(), vec))             # <<<<<<<<<<<<<<
 * cpdef Expression softmax(Expression x): return Expression.from_cexpr(x.cg_version, c_softmax(x.c()))
 * cpdef Expression softsign(Expression x): return Expression.from_cexpr(x.cg_version, c_softsign(x.c()))
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_3 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::log_softmax(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_vec))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":635
 * cpdef Expression logistic(Expression x): return Expression.from_cexpr(x.cg_version, c_logistic(x.c()))
 * cpdef Expression rectify(Expression x): return Expression.from_cexpr(x.cg_version, c_rectify(x.c()))
 * cpdef Expression log_softmax(Expression x, list restrict=None):             # <<<<<<<<<<<<<<
 *     if restrict is None:
 *         return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.log_softmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_59log_softmax(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_59log_softmax(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  PyObject *__pyx_v_restrict = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log_softmax (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_restrict,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject*)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_restrict);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "log_softmax") < 0)) __PYX_ERR(0, 635, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_restrict = ((PyObject*)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("log_softmax", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 635, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.log_softmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 635, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_restrict), (&PyList_Type), 1, "restrict", 1))) __PYX_ERR(0, 635, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_58log_softmax(__pyx_self, __pyx_v_x, __pyx_v_restrict);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_58log_softmax(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, PyObject *__pyx_v_restrict) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_log_softmax __pyx_t_2;
  __Pyx_RefNannySetupContext("log_softmax", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.__pyx_restrict = __pyx_v_restrict;
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_log_softmax(__pyx_v_x, 0, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.log_softmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":640
 *     cdef vector[unsigned] vec = restrict
 *     return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c(), vec))
 * cpdef Expression softmax(Expression x): return Expression.from_cexpr(x.cg_version, c_softmax(x.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression softsign(Expression x): return Expression.from_cexpr(x.cg_version, c_softsign(x.c()))
 * cpdef Expression bmin(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_bmin(x.c(), y.c()))
 */

static PyObject *__pyx_pw_5pycnn_61softmax(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_softmax(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("softmax", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::softmax(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.softmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_61softmax(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_61softmax(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("softmax (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 640, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_60softmax(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_60softmax(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("softmax", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_softmax(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.softmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":641
 *     return Expression.from_cexpr(x.cg_version, c_log_softmax(x.c(), vec))
 * cpdef Expression softmax(Expression x): return Expression.from_cexpr(x.cg_version, c_softmax(x.c()))
 * cpdef Expression softsign(Expression x): return Expression.from_cexpr(x.cg_version, c_softsign(x.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression bmin(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_bmin(x.c(), y.c()))
 * cpdef Expression bmax(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_bmax(x.c(), y.c()))
 */

static PyObject *__pyx_pw_5pycnn_63softsign(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_softsign(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("softsign", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::softsign(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.softsign", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_63softsign(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_63softsign(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("softsign (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 641, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_62softsign(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_62softsign(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("softsign", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_softsign(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.softsign", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":642
 * cpdef Expression softmax(Expression x): return Expression.from_cexpr(x.cg_version, c_softmax(x.c()))
 * cpdef Expression softsign(Expression x): return Expression.from_cexpr(x.cg_version, c_softsign(x.c()))
 * cpdef Expression bmin(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_bmin(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression bmax(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_bmax(x.c(), y.c()))
 * cpdef Expression transpose(Expression x): return Expression.from_cexpr(x.cg_version, c_transpose(x.c()))
 */

static PyObject *__pyx_pw_5pycnn_65bmin(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_bmin(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("bmin", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::min(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.bmin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_65bmin(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_65bmin(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bmin (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("bmin", 1, 2, 2, 1); __PYX_ERR(0, 642, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "bmin") < 0)) __PYX_ERR(0, 642, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("bmin", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 642, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.bmin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 642, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 642, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_64bmin(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_64bmin(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("bmin", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_bmin(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.bmin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":643
 * cpdef Expression softsign(Expression x): return Expression.from_cexpr(x.cg_version, c_softsign(x.c()))
 * cpdef Expression bmin(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_bmin(x.c(), y.c()))
 * cpdef Expression bmax(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_bmax(x.c(), y.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression transpose(Expression x): return Expression.from_cexpr(x.cg_version, c_transpose(x.c()))
 * cpdef Expression sum_cols(Expression x): return Expression.from_cexpr(x.cg_version, c_sum_cols(x.c()))
 */

static PyObject *__pyx_pw_5pycnn_67bmax(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_bmax(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("bmax", 0);
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::max(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.bmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_67bmax(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_67bmax(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bmax (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("bmax", 1, 2, 2, 1); __PYX_ERR(0, 643, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "bmax") < 0)) __PYX_ERR(0, 643, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("bmax", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 643, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.bmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 643, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 643, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_66bmax(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_66bmax(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("bmax", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_bmax(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.bmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":644
 * cpdef Expression bmin(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_bmin(x.c(), y.c()))
 * cpdef Expression bmax(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_bmax(x.c(), y.c()))
 * cpdef Expression transpose(Expression x): return Expression.from_cexpr(x.cg_version, c_transpose(x.c()))             # <<<<<<<<<<<<<<
 * cpdef Expression sum_cols(Expression x): return Expression.from_cexpr(x.cg_version, c_sum_cols(x.c()))
 * 
 */

static PyObject *__pyx_pw_5pycnn_69transpose(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_transpose(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("transpose", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::transpose(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 644, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.transpose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_69transpose(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_69transpose(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transpose (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 644, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_68transpose(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_68transpose(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("transpose", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_transpose(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 644, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.transpose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":645
 * cpdef Expression bmax(Expression x, Expression y): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_bmax(x.c(), y.c()))
 * cpdef Expression transpose(Expression x): return Expression.from_cexpr(x.cg_version, c_transpose(x.c()))
 * cpdef Expression sum_cols(Expression x): return Expression.from_cexpr(x.cg_version, c_sum_cols(x.c()))             # <<<<<<<<<<<<<<
 * 
 * cpdef Expression sum_batches(Expression x): return Expression.from_cexpr(x.cg_version, c_sum_batches(x.c()))
 */

static PyObject *__pyx_pw_5pycnn_71sum_cols(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_sum_cols(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("sum_cols", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::sum_cols(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.sum_cols", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_71sum_cols(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_71sum_cols(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sum_cols (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 645, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_70sum_cols(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_70sum_cols(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("sum_cols", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_sum_cols(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.sum_cols", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":647
 * cpdef Expression sum_cols(Expression x): return Expression.from_cexpr(x.cg_version, c_sum_cols(x.c()))
 * 
 * cpdef Expression sum_batches(Expression x): return Expression.from_cexpr(x.cg_version, c_sum_batches(x.c()))             # <<<<<<<<<<<<<<
 * 
 * #expr-opt
 */

static PyObject *__pyx_pw_5pycnn_73sum_batches(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_sum_batches(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("sum_batches", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::sum_batches(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.sum_batches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_73sum_batches(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_73sum_batches(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sum_batches (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 647, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_72sum_batches(__pyx_self, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_72sum_batches(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("sum_batches", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_sum_batches(__pyx_v_x, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.sum_batches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":650
 * 
 * #expr-opt
 * cpdef Expression fold_rows(Expression x, unsigned nrows=2): return Expression.from_cexpr(x.cg_version, c_fold_rows(x.c(),nrows))             # <<<<<<<<<<<<<<
 * #expr-expr-opt
 * # x is scalar or row vector
 */

static PyObject *__pyx_pw_5pycnn_75fold_rows(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_fold_rows(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_fold_rows *__pyx_optional_args) {
  unsigned int __pyx_v_nrows = ((unsigned int)2);
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("fold_rows", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_nrows = __pyx_optional_args->nrows;
    }
  }
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::fold_rows(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_nrows))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.fold_rows", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_75fold_rows(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_75fold_rows(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  unsigned int __pyx_v_nrows;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fold_rows (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_nrows,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nrows);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fold_rows") < 0)) __PYX_ERR(0, 650, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    if (values[1]) {
      __pyx_v_nrows = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_nrows == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 650, __pyx_L3_error)
    } else {
      __pyx_v_nrows = ((unsigned int)2);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fold_rows", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 650, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.fold_rows", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 650, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_74fold_rows(__pyx_self, __pyx_v_x, __pyx_v_nrows);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_74fold_rows(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_nrows) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_fold_rows __pyx_t_2;
  __Pyx_RefNannySetupContext("fold_rows", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.nrows = __pyx_v_nrows;
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_fold_rows(__pyx_v_x, 0, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.fold_rows", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":655
 * # y is scalar or row vector
 * # res = max(0, m - x + y)
 * cpdef Expression pairwise_rank_loss(Expression x, Expression y, float m=1.0): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_pairwise_rank_loss(x.c(), y.c(), m))             # <<<<<<<<<<<<<<
 * cpdef Expression poisson_loss(Expression x, unsigned y): return Expression.from_cexpr(x.cg_version, c_poisson_loss(x.c(), y))
 * cpdef Expression huber_distance(Expression x, Expression y, float c=1.345): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_huber_distance(x.c(), y.c(), c))
 */

static PyObject *__pyx_pw_5pycnn_77pairwise_rank_loss(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_pairwise_rank_loss(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_pairwise_rank_loss *__pyx_optional_args) {
  float __pyx_v_m = ((float)1.0);
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("pairwise_rank_loss", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_m = __pyx_optional_args->m;
    }
  }
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::pairwise_rank_loss(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y), __pyx_v_m))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.pairwise_rank_loss", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_77pairwise_rank_loss(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_77pairwise_rank_loss(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  float __pyx_v_m;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pairwise_rank_loss (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_m,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pairwise_rank_loss", 0, 2, 3, 1); __PYX_ERR(0, 655, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_m);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pairwise_rank_loss") < 0)) __PYX_ERR(0, 655, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
    if (values[2]) {
      __pyx_v_m = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_m == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 655, __pyx_L3_error)
    } else {
      __pyx_v_m = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pairwise_rank_loss", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 655, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.pairwise_rank_loss", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 655, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 655, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_76pairwise_rank_loss(__pyx_self, __pyx_v_x, __pyx_v_y, __pyx_v_m);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_76pairwise_rank_loss(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, float __pyx_v_m) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_pairwise_rank_loss __pyx_t_2;
  __Pyx_RefNannySetupContext("pairwise_rank_loss", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.m = __pyx_v_m;
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_pairwise_rank_loss(__pyx_v_x, __pyx_v_y, 0, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.pairwise_rank_loss", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":656
 * # res = max(0, m - x + y)
 * cpdef Expression pairwise_rank_loss(Expression x, Expression y, float m=1.0): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_pairwise_rank_loss(x.c(), y.c(), m))
 * cpdef Expression poisson_loss(Expression x, unsigned y): return Expression.from_cexpr(x.cg_version, c_poisson_loss(x.c(), y))             # <<<<<<<<<<<<<<
 * cpdef Expression huber_distance(Expression x, Expression y, float c=1.345): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_huber_distance(x.c(), y.c(), c))
 * #expr-unsigned
 */

static PyObject *__pyx_pw_5pycnn_79poisson_loss(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_poisson_loss(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("poisson_loss", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::poisson_loss(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_y))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 656, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.poisson_loss", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_79poisson_loss(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_79poisson_loss(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  unsigned int __pyx_v_y;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("poisson_loss (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("poisson_loss", 1, 2, 2, 1); __PYX_ERR(0, 656, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "poisson_loss") < 0)) __PYX_ERR(0, 656, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_y == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 656, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("poisson_loss", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 656, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.poisson_loss", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 656, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_78poisson_loss(__pyx_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_78poisson_loss(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("poisson_loss", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_poisson_loss(__pyx_v_x, __pyx_v_y, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 656, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.poisson_loss", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":657
 * cpdef Expression pairwise_rank_loss(Expression x, Expression y, float m=1.0): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_pairwise_rank_loss(x.c(), y.c(), m))
 * cpdef Expression poisson_loss(Expression x, unsigned y): return Expression.from_cexpr(x.cg_version, c_poisson_loss(x.c(), y))
 * cpdef Expression huber_distance(Expression x, Expression y, float c=1.345): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_huber_distance(x.c(), y.c(), c))             # <<<<<<<<<<<<<<
 * #expr-unsigned
 * cpdef Expression kmax_pooling(Expression x, unsigned k): return Expression.from_cexpr(x.cg_version, c_kmax_pooling(x.c(), k))
 */

static PyObject *__pyx_pw_5pycnn_81huber_distance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_huber_distance(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_huber_distance *__pyx_optional_args) {
  float __pyx_v_c = ((float)1.345);
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("huber_distance", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_c = __pyx_optional_args->c;
    }
  }
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::huber_distance(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_y->__pyx_vtab)->c(__pyx_v_y), __pyx_v_c))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.huber_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_81huber_distance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_81huber_distance(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_y = 0;
  float __pyx_v_c;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("huber_distance (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_c,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("huber_distance", 0, 2, 3, 1); __PYX_ERR(0, 657, __pyx_L3_error)
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "huber_distance") < 0)) __PYX_ERR(0, 657, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_y = ((struct __pyx_obj_5pycnn_Expression *)values[1]);
    if (values[2]) {
      __pyx_v_c = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_c == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 657, __pyx_L3_error)
    } else {
      __pyx_v_c = ((float)1.345);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("huber_distance", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 657, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.huber_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 657, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_y), __pyx_ptype_5pycnn_Expression, 1, "y", 0))) __PYX_ERR(0, 657, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_80huber_distance(__pyx_self, __pyx_v_x, __pyx_v_y, __pyx_v_c);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_80huber_distance(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, struct __pyx_obj_5pycnn_Expression *__pyx_v_y, float __pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_huber_distance __pyx_t_2;
  __Pyx_RefNannySetupContext("huber_distance", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.c = __pyx_v_c;
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_huber_distance(__pyx_v_x, __pyx_v_y, 0, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.huber_distance", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":659
 * cpdef Expression huber_distance(Expression x, Expression y, float c=1.345): ensure_freshness(y); return Expression.from_cexpr(x.cg_version, c_huber_distance(x.c(), y.c(), c))
 * #expr-unsigned
 * cpdef Expression kmax_pooling(Expression x, unsigned k): return Expression.from_cexpr(x.cg_version, c_kmax_pooling(x.c(), k))             # <<<<<<<<<<<<<<
 * cpdef Expression pickneglogsoftmax(Expression x, unsigned v): return Expression.from_cexpr(x.cg_version, c_pickneglogsoftmax(x.c(), v))
 * cpdef Expression pickneglogsoftmax_batch(Expression x, vector[unsigned] vs): return Expression.from_cexpr(x.cg_version, c_pickneglogsoftmax(x.c(), vs))
 */

static PyObject *__pyx_pw_5pycnn_83kmax_pooling(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_kmax_pooling(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_k, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("kmax_pooling", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::kmax_pooling(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_k))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.kmax_pooling", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_83kmax_pooling(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_83kmax_pooling(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  unsigned int __pyx_v_k;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("kmax_pooling (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_k,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("kmax_pooling", 1, 2, 2, 1); __PYX_ERR(0, 659, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "kmax_pooling") < 0)) __PYX_ERR(0, 659, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_k = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_k == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 659, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("kmax_pooling", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 659, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.kmax_pooling", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 659, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_82kmax_pooling(__pyx_self, __pyx_v_x, __pyx_v_k);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_82kmax_pooling(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_k) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("kmax_pooling", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_kmax_pooling(__pyx_v_x, __pyx_v_k, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.kmax_pooling", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":660
 * #expr-unsigned
 * cpdef Expression kmax_pooling(Expression x, unsigned k): return Expression.from_cexpr(x.cg_version, c_kmax_pooling(x.c(), k))
 * cpdef Expression pickneglogsoftmax(Expression x, unsigned v): return Expression.from_cexpr(x.cg_version, c_pickneglogsoftmax(x.c(), v))             # <<<<<<<<<<<<<<
 * cpdef Expression pickneglogsoftmax_batch(Expression x, vector[unsigned] vs): return Expression.from_cexpr(x.cg_version, c_pickneglogsoftmax(x.c(), vs))
 * 
 */

static PyObject *__pyx_pw_5pycnn_85pickneglogsoftmax(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_pickneglogsoftmax(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_v, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("pickneglogsoftmax", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::pickneglogsoftmax(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_v))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.pickneglogsoftmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_85pickneglogsoftmax(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_85pickneglogsoftmax(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  unsigned int __pyx_v_v;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pickneglogsoftmax (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_v,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_v)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pickneglogsoftmax", 1, 2, 2, 1); __PYX_ERR(0, 660, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pickneglogsoftmax") < 0)) __PYX_ERR(0, 660, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_v = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_v == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 660, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pickneglogsoftmax", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 660, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.pickneglogsoftmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 660, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_84pickneglogsoftmax(__pyx_self, __pyx_v_x, __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_84pickneglogsoftmax(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("pickneglogsoftmax", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_pickneglogsoftmax(__pyx_v_x, __pyx_v_v, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.pickneglogsoftmax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":661
 * cpdef Expression kmax_pooling(Expression x, unsigned k): return Expression.from_cexpr(x.cg_version, c_kmax_pooling(x.c(), k))
 * cpdef Expression pickneglogsoftmax(Expression x, unsigned v): return Expression.from_cexpr(x.cg_version, c_pickneglogsoftmax(x.c(), v))
 * cpdef Expression pickneglogsoftmax_batch(Expression x, vector[unsigned] vs): return Expression.from_cexpr(x.cg_version, c_pickneglogsoftmax(x.c(), vs))             # <<<<<<<<<<<<<<
 * 
 * cpdef Expression kmh_ngram(Expression x, unsigned v): return Expression.from_cexpr(x.cg_version, c_kmh_ngram(x.c(), v))
 */

static PyObject *__pyx_pw_5pycnn_87pickneglogsoftmax_batch(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_pickneglogsoftmax_batch(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, std::vector<unsigned int>  __pyx_v_vs, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("pickneglogsoftmax_batch", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::pickneglogsoftmax(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_vs))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.pickneglogsoftmax_batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_87pickneglogsoftmax_batch(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_87pickneglogsoftmax_batch(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  std::vector<unsigned int>  __pyx_v_vs;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pickneglogsoftmax_batch (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_vs,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pickneglogsoftmax_batch", 1, 2, 2, 1); __PYX_ERR(0, 661, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pickneglogsoftmax_batch") < 0)) __PYX_ERR(0, 661, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_vs = __pyx_convert_vector_from_py_unsigned_int(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 661, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pickneglogsoftmax_batch", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 661, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.pickneglogsoftmax_batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 661, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_86pickneglogsoftmax_batch(__pyx_self, __pyx_v_x, __pyx_v_vs);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_86pickneglogsoftmax_batch(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, std::vector<unsigned int>  __pyx_v_vs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("pickneglogsoftmax_batch", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_pickneglogsoftmax_batch(__pyx_v_x, __pyx_v_vs, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.pickneglogsoftmax_batch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":663
 * cpdef Expression pickneglogsoftmax_batch(Expression x, vector[unsigned] vs): return Expression.from_cexpr(x.cg_version, c_pickneglogsoftmax(x.c(), vs))
 * 
 * cpdef Expression kmh_ngram(Expression x, unsigned v): return Expression.from_cexpr(x.cg_version, c_kmh_ngram(x.c(), v))             # <<<<<<<<<<<<<<
 * cpdef Expression pickrange(Expression x, unsigned v, unsigned u): return Expression.from_cexpr(x.cg_version, c_pickrange(x.c(), v, u))
 * #expr-float
 */

static PyObject *__pyx_pw_5pycnn_89kmh_ngram(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_kmh_ngram(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_v, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("kmh_ngram", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::kmh_ngram(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_v))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 663, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.kmh_ngram", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_89kmh_ngram(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_89kmh_ngram(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  unsigned int __pyx_v_v;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("kmh_ngram (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_v,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_v)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("kmh_ngram", 1, 2, 2, 1); __PYX_ERR(0, 663, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "kmh_ngram") < 0)) __PYX_ERR(0, 663, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_v = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_v == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 663, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("kmh_ngram", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 663, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.kmh_ngram", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 663, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_88kmh_ngram(__pyx_self, __pyx_v_x, __pyx_v_v);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_88kmh_ngram(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("kmh_ngram", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_kmh_ngram(__pyx_v_x, __pyx_v_v, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 663, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.kmh_ngram", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":664
 * 
 * cpdef Expression kmh_ngram(Expression x, unsigned v): return Expression.from_cexpr(x.cg_version, c_kmh_ngram(x.c(), v))
 * cpdef Expression pickrange(Expression x, unsigned v, unsigned u): return Expression.from_cexpr(x.cg_version, c_pickrange(x.c(), v, u))             # <<<<<<<<<<<<<<
 * #expr-float
 * cpdef Expression noise(Expression x, float stddev): return Expression.from_cexpr(x.cg_version, c_noise(x.c(), stddev))
 */

static PyObject *__pyx_pw_5pycnn_91pickrange(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_pickrange(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_v, unsigned int __pyx_v_u, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("pickrange", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::pickrange(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_v, __pyx_v_u))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.pickrange", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_91pickrange(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_91pickrange(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  unsigned int __pyx_v_v;
  unsigned int __pyx_v_u;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pickrange (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_v,&__pyx_n_s_u,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_v)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pickrange", 1, 3, 3, 1); __PYX_ERR(0, 664, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_u)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pickrange", 1, 3, 3, 2); __PYX_ERR(0, 664, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pickrange") < 0)) __PYX_ERR(0, 664, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_v = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_v == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 664, __pyx_L3_error)
    __pyx_v_u = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_u == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 664, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pickrange", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 664, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.pickrange", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 664, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_90pickrange(__pyx_self, __pyx_v_x, __pyx_v_v, __pyx_v_u);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_90pickrange(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, unsigned int __pyx_v_v, unsigned int __pyx_v_u) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("pickrange", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_pickrange(__pyx_v_x, __pyx_v_v, __pyx_v_u, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.pickrange", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":666
 * cpdef Expression pickrange(Expression x, unsigned v, unsigned u): return Expression.from_cexpr(x.cg_version, c_pickrange(x.c(), v, u))
 * #expr-float
 * cpdef Expression noise(Expression x, float stddev): return Expression.from_cexpr(x.cg_version, c_noise(x.c(), stddev))             # <<<<<<<<<<<<<<
 * cpdef Expression dropout(Expression x, float p): return Expression.from_cexpr(x.cg_version, c_dropout(x.c(), p))
 * cpdef Expression block_dropout(Expression x, float p): return Expression.from_cexpr(x.cg_version, c_block_dropout(x.c(), p))
 */

static PyObject *__pyx_pw_5pycnn_93noise(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_noise(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, float __pyx_v_stddev, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("noise", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::noise(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_stddev))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 666, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.noise", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_93noise(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_93noise(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  float __pyx_v_stddev;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("noise (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_stddev,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_stddev)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("noise", 1, 2, 2, 1); __PYX_ERR(0, 666, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "noise") < 0)) __PYX_ERR(0, 666, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_stddev = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_stddev == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 666, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("noise", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 666, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.noise", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 666, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_92noise(__pyx_self, __pyx_v_x, __pyx_v_stddev);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_92noise(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, float __pyx_v_stddev) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("noise", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_noise(__pyx_v_x, __pyx_v_stddev, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 666, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.noise", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":667
 * #expr-float
 * cpdef Expression noise(Expression x, float stddev): return Expression.from_cexpr(x.cg_version, c_noise(x.c(), stddev))
 * cpdef Expression dropout(Expression x, float p): return Expression.from_cexpr(x.cg_version, c_dropout(x.c(), p))             # <<<<<<<<<<<<<<
 * cpdef Expression block_dropout(Expression x, float p): return Expression.from_cexpr(x.cg_version, c_block_dropout(x.c(), p))
 * #expr-dim
 */

static PyObject *__pyx_pw_5pycnn_95dropout(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_dropout(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, float __pyx_v_p, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dropout", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::dropout(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_p))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.dropout", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_95dropout(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_95dropout(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  float __pyx_v_p;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dropout (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_p,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dropout", 1, 2, 2, 1); __PYX_ERR(0, 667, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dropout") < 0)) __PYX_ERR(0, 667, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_p = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_p == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 667, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dropout", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 667, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.dropout", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 667, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_94dropout(__pyx_self, __pyx_v_x, __pyx_v_p);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_94dropout(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, float __pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dropout", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_dropout(__pyx_v_x, __pyx_v_p, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.dropout", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":668
 * cpdef Expression noise(Expression x, float stddev): return Expression.from_cexpr(x.cg_version, c_noise(x.c(), stddev))
 * cpdef Expression dropout(Expression x, float p): return Expression.from_cexpr(x.cg_version, c_dropout(x.c(), p))
 * cpdef Expression block_dropout(Expression x, float p): return Expression.from_cexpr(x.cg_version, c_block_dropout(x.c(), p))             # <<<<<<<<<<<<<<
 * #expr-dim
 * cpdef Expression reshape(Expression x, tuple d): return Expression.from_cexpr(x.cg_version, c_reshape(x.c(),Dim(d)))
 */

static PyObject *__pyx_pw_5pycnn_97block_dropout(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_block_dropout(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, float __pyx_v_p, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("block_dropout", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::block_dropout(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_v_p))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.block_dropout", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_97block_dropout(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_97block_dropout(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  float __pyx_v_p;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("block_dropout (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_p,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("block_dropout", 1, 2, 2, 1); __PYX_ERR(0, 668, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "block_dropout") < 0)) __PYX_ERR(0, 668, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_p = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_p == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 668, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("block_dropout", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 668, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.block_dropout", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 668, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_96block_dropout(__pyx_self, __pyx_v_x, __pyx_v_p);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_96block_dropout(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, float __pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("block_dropout", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_block_dropout(__pyx_v_x, __pyx_v_p, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.block_dropout", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":670
 * cpdef Expression block_dropout(Expression x, float p): return Expression.from_cexpr(x.cg_version, c_block_dropout(x.c(), p))
 * #expr-dim
 * cpdef Expression reshape(Expression x, tuple d): return Expression.from_cexpr(x.cg_version, c_reshape(x.c(),Dim(d)))             # <<<<<<<<<<<<<<
 * 
 * cpdef Expression esum(list xs):
 */

static PyObject *__pyx_pw_5pycnn_99reshape(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_reshape(struct __pyx_obj_5pycnn_Expression *__pyx_v_x, PyObject *__pyx_v_d, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("reshape", 0);
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::reshape(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), __pyx_f_5pycnn_Dim(__pyx_v_d)))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 670, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.reshape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_99reshape(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_99reshape(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  PyObject *__pyx_v_d = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reshape (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_d,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_d)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("reshape", 1, 2, 2, 1); __PYX_ERR(0, 670, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "reshape") < 0)) __PYX_ERR(0, 670, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_x = ((struct __pyx_obj_5pycnn_Expression *)values[0]);
    __pyx_v_d = ((PyObject*)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("reshape", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 670, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.reshape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 670, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_d), (&PyTuple_Type), 1, "d", 1))) __PYX_ERR(0, 670, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_98reshape(__pyx_self, __pyx_v_x, __pyx_v_d);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_98reshape(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("reshape", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_reshape(__pyx_v_x, __pyx_v_d, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 670, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.reshape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":672
 * cpdef Expression reshape(Expression x, tuple d): return Expression.from_cexpr(x.cg_version, c_reshape(x.c(),Dim(d)))
 * 
 * cpdef Expression esum(list xs):             # <<<<<<<<<<<<<<
 *     cdef vector[CExpression] cvec
 *     cvec = vector[CExpression]()
 */

static PyObject *__pyx_pw_5pycnn_101esum(PyObject *__pyx_self, PyObject *__pyx_v_xs); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_esum(PyObject *__pyx_v_xs, CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::vector<cnn::expr::Expression>  __pyx_v_cvec;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::vector<cnn::expr::Expression>  __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("esum", 0);

  /* "pycnn.pyx":674
 * cpdef Expression esum(list xs):
 *     cdef vector[CExpression] cvec
 *     cvec = vector[CExpression]()             # <<<<<<<<<<<<<<
 *     cdef Expression x
 *     for x in xs:
 */
  try {
    __pyx_t_1 = std::vector<cnn::expr::Expression> ();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 674, __pyx_L1_error)
  }
  __pyx_v_cvec = __pyx_t_1;

  /* "pycnn.pyx":676
 *     cvec = vector[CExpression]()
 *     cdef Expression x
 *     for x in xs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 */
  if (unlikely(__pyx_v_xs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 676, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_v_xs; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
  for (;;) {
    if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 676, __pyx_L1_error)
    #else
    __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 676, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 676, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_x, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "pycnn.pyx":677
 *     cdef Expression x
 *     for x in xs:
 *         ensure_freshness(x)             # <<<<<<<<<<<<<<
 *         cvec.push_back(x.c())
 *     #print >> sys.stderr, cvec.size()
 */
    __pyx_t_4 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 677, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "pycnn.pyx":678
 *     for x in xs:
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())             # <<<<<<<<<<<<<<
 *     #print >> sys.stderr, cvec.size()
 *     return Expression.from_cexpr(x.cg_version, c_sum(cvec))
 */
    try {
      __pyx_v_cvec.push_back(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 678, __pyx_L1_error)
    }

    /* "pycnn.pyx":676
 *     cvec = vector[CExpression]()
 *     cdef Expression x
 *     for x in xs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pycnn.pyx":680
 *         cvec.push_back(x.c())
 *     #print >> sys.stderr, cvec.size()
 *     return Expression.from_cexpr(x.cg_version, c_sum(cvec))             # <<<<<<<<<<<<<<
 * 
 * cpdef Expression average(list xs):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (unlikely(!__pyx_v_x)) { __Pyx_RaiseUnboundLocalError("x"); __PYX_ERR(0, 680, __pyx_L1_error) }
  __pyx_t_2 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::sum(__pyx_v_cvec))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 680, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":672
 * cpdef Expression reshape(Expression x, tuple d): return Expression.from_cexpr(x.cg_version, c_reshape(x.c(),Dim(d)))
 * 
 * cpdef Expression esum(list xs):             # <<<<<<<<<<<<<<
 *     cdef vector[CExpression] cvec
 *     cvec = vector[CExpression]()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.esum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_x);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_101esum(PyObject *__pyx_self, PyObject *__pyx_v_xs); /*proto*/
static PyObject *__pyx_pw_5pycnn_101esum(PyObject *__pyx_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("esum (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xs), (&PyList_Type), 1, "xs", 1))) __PYX_ERR(0, 672, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_100esum(__pyx_self, ((PyObject*)__pyx_v_xs));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_100esum(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("esum", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_esum(__pyx_v_xs, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.esum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":682
 *     return Expression.from_cexpr(x.cg_version, c_sum(cvec))
 * 
 * cpdef Expression average(list xs):             # <<<<<<<<<<<<<<
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 */

static PyObject *__pyx_pw_5pycnn_103average(PyObject *__pyx_self, PyObject *__pyx_v_xs); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_average(PyObject *__pyx_v_xs, CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::vector<cnn::expr::Expression>  __pyx_v_cvec;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("average", 0);

  /* "pycnn.pyx":685
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 *     for x in xs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 */
  if (unlikely(__pyx_v_xs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 685, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_xs; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 685, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 685, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 685, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_x, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "pycnn.pyx":686
 *     cdef Expression x
 *     for x in xs:
 *         ensure_freshness(x)             # <<<<<<<<<<<<<<
 *         cvec.push_back(x.c())
 *     return Expression.from_cexpr(x.cg_version, c_average(cvec))
 */
    __pyx_t_3 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 686, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":687
 *     for x in xs:
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())             # <<<<<<<<<<<<<<
 *     return Expression.from_cexpr(x.cg_version, c_average(cvec))
 * 
 */
    try {
      __pyx_v_cvec.push_back(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 687, __pyx_L1_error)
    }

    /* "pycnn.pyx":685
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 *     for x in xs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":688
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 *     return Expression.from_cexpr(x.cg_version, c_average(cvec))             # <<<<<<<<<<<<<<
 * 
 * cpdef Expression emax(list xs):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (unlikely(!__pyx_v_x)) { __Pyx_RaiseUnboundLocalError("x"); __PYX_ERR(0, 688, __pyx_L1_error) }
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::average(__pyx_v_cvec))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":682
 *     return Expression.from_cexpr(x.cg_version, c_sum(cvec))
 * 
 * cpdef Expression average(list xs):             # <<<<<<<<<<<<<<
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.average", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_x);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_103average(PyObject *__pyx_self, PyObject *__pyx_v_xs); /*proto*/
static PyObject *__pyx_pw_5pycnn_103average(PyObject *__pyx_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("average (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xs), (&PyList_Type), 1, "xs", 1))) __PYX_ERR(0, 682, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_102average(__pyx_self, ((PyObject*)__pyx_v_xs));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_102average(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("average", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_average(__pyx_v_xs, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.average", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":690
 *     return Expression.from_cexpr(x.cg_version, c_average(cvec))
 * 
 * cpdef Expression emax(list xs):             # <<<<<<<<<<<<<<
 *     cdef Expression c
 *     cdef Expression x
 */

static PyObject *__pyx_pw_5pycnn_105emax(PyObject *__pyx_self, PyObject *__pyx_v_xs); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_emax(PyObject *__pyx_v_xs, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_c = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("emax", 0);

  /* "pycnn.pyx":693
 *     cdef Expression c
 *     cdef Expression x
 *     c = xs[0]             # <<<<<<<<<<<<<<
 *     ensure_freshness(c)
 *     for x in xs:
 */
  if (unlikely(__pyx_v_xs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 693, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_List(__pyx_v_xs, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 693, __pyx_L1_error)
  __pyx_v_c = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":694
 *     cdef Expression x
 *     c = xs[0]
 *     ensure_freshness(c)             # <<<<<<<<<<<<<<
 *     for x in xs:
 *         ensure_freshness(x)
 */
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_c); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 694, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":695
 *     c = xs[0]
 *     ensure_freshness(c)
 *     for x in xs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(x)
 *         c = Expression.from_cexpr(x.cg_version, c_bmax(x.c(),c.c()))
 */
  if (unlikely(__pyx_v_xs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 695, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_xs; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 695, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 695, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 695, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_x, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "pycnn.pyx":696
 *     ensure_freshness(c)
 *     for x in xs:
 *         ensure_freshness(x)             # <<<<<<<<<<<<<<
 *         c = Expression.from_cexpr(x.cg_version, c_bmax(x.c(),c.c()))
 *     return c
 */
    __pyx_t_3 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":697
 *     for x in xs:
 *         ensure_freshness(x)
 *         c = Expression.from_cexpr(x.cg_version, c_bmax(x.c(),c.c()))             # <<<<<<<<<<<<<<
 *     return c
 *     #return Expression.from_cexpr(x.cg_version, c_max(cvec))
 */
    __pyx_t_3 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::max(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x), ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_c->__pyx_vtab)->c(__pyx_v_c)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 697, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_c, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "pycnn.pyx":695
 *     c = xs[0]
 *     ensure_freshness(c)
 *     for x in xs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(x)
 *         c = Expression.from_cexpr(x.cg_version, c_bmax(x.c(),c.c()))
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":698
 *         ensure_freshness(x)
 *         c = Expression.from_cexpr(x.cg_version, c_bmax(x.c(),c.c()))
 *     return c             # <<<<<<<<<<<<<<
 *     #return Expression.from_cexpr(x.cg_version, c_max(cvec))
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_c));
  __pyx_r = __pyx_v_c;
  goto __pyx_L0;

  /* "pycnn.pyx":690
 *     return Expression.from_cexpr(x.cg_version, c_average(cvec))
 * 
 * cpdef Expression emax(list xs):             # <<<<<<<<<<<<<<
 *     cdef Expression c
 *     cdef Expression x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.emax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_c);
  __Pyx_XDECREF((PyObject *)__pyx_v_x);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_105emax(PyObject *__pyx_self, PyObject *__pyx_v_xs); /*proto*/
static PyObject *__pyx_pw_5pycnn_105emax(PyObject *__pyx_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("emax (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xs), (&PyList_Type), 1, "xs", 1))) __PYX_ERR(0, 690, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_104emax(__pyx_self, ((PyObject*)__pyx_v_xs));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_104emax(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("emax", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_emax(__pyx_v_xs, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.emax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":701
 *     #return Expression.from_cexpr(x.cg_version, c_max(cvec))
 * 
 * cpdef Expression concatenate_cols(list xs):             # <<<<<<<<<<<<<<
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 */

static PyObject *__pyx_pw_5pycnn_107concatenate_cols(PyObject *__pyx_self, PyObject *__pyx_v_xs); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_concatenate_cols(PyObject *__pyx_v_xs, CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::vector<cnn::expr::Expression>  __pyx_v_cvec;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("concatenate_cols", 0);

  /* "pycnn.pyx":704
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 *     for x in xs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 */
  if (unlikely(__pyx_v_xs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 704, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_xs; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 704, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 704, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 704, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_x, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "pycnn.pyx":705
 *     cdef Expression x
 *     for x in xs:
 *         ensure_freshness(x)             # <<<<<<<<<<<<<<
 *         cvec.push_back(x.c())
 *     return Expression.from_cexpr(x.cg_version, c_concat_cols(cvec))
 */
    __pyx_t_3 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 705, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":706
 *     for x in xs:
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())             # <<<<<<<<<<<<<<
 *     return Expression.from_cexpr(x.cg_version, c_concat_cols(cvec))
 * 
 */
    try {
      __pyx_v_cvec.push_back(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 706, __pyx_L1_error)
    }

    /* "pycnn.pyx":704
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 *     for x in xs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":707
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 *     return Expression.from_cexpr(x.cg_version, c_concat_cols(cvec))             # <<<<<<<<<<<<<<
 * 
 * cpdef Expression concatenate(list xs):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (unlikely(!__pyx_v_x)) { __Pyx_RaiseUnboundLocalError("x"); __PYX_ERR(0, 707, __pyx_L1_error) }
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::concatenate_cols(__pyx_v_cvec))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":701
 *     #return Expression.from_cexpr(x.cg_version, c_max(cvec))
 * 
 * cpdef Expression concatenate_cols(list xs):             # <<<<<<<<<<<<<<
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.concatenate_cols", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_x);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_107concatenate_cols(PyObject *__pyx_self, PyObject *__pyx_v_xs); /*proto*/
static PyObject *__pyx_pw_5pycnn_107concatenate_cols(PyObject *__pyx_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("concatenate_cols (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xs), (&PyList_Type), 1, "xs", 1))) __PYX_ERR(0, 701, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_106concatenate_cols(__pyx_self, ((PyObject*)__pyx_v_xs));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_106concatenate_cols(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("concatenate_cols", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_concatenate_cols(__pyx_v_xs, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.concatenate_cols", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":709
 *     return Expression.from_cexpr(x.cg_version, c_concat_cols(cvec))
 * 
 * cpdef Expression concatenate(list xs):             # <<<<<<<<<<<<<<
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 */

static PyObject *__pyx_pw_5pycnn_109concatenate(PyObject *__pyx_self, PyObject *__pyx_v_xs); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_concatenate(PyObject *__pyx_v_xs, CYTHON_UNUSED int __pyx_skip_dispatch) {
  std::vector<cnn::expr::Expression>  __pyx_v_cvec;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("concatenate", 0);

  /* "pycnn.pyx":712
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 *     for x in xs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 */
  if (unlikely(__pyx_v_xs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 712, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_xs; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 712, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 712, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 712, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_x, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "pycnn.pyx":713
 *     cdef Expression x
 *     for x in xs:
 *         ensure_freshness(x)             # <<<<<<<<<<<<<<
 *         cvec.push_back(x.c())
 *     return Expression.from_cexpr(x.cg_version, c_concat(cvec))
 */
    __pyx_t_3 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":714
 *     for x in xs:
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())             # <<<<<<<<<<<<<<
 *     return Expression.from_cexpr(x.cg_version, c_concat(cvec))
 * 
 */
    try {
      __pyx_v_cvec.push_back(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_x->__pyx_vtab)->c(__pyx_v_x));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 714, __pyx_L1_error)
    }

    /* "pycnn.pyx":712
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 *     for x in xs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":715
 *         ensure_freshness(x)
 *         cvec.push_back(x.c())
 *     return Expression.from_cexpr(x.cg_version, c_concat(cvec))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (unlikely(!__pyx_v_x)) { __Pyx_RaiseUnboundLocalError("x"); __PYX_ERR(0, 715, __pyx_L1_error) }
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_x->cg_version, cnn::expr::concatenate(__pyx_v_cvec))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 715, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":709
 *     return Expression.from_cexpr(x.cg_version, c_concat_cols(cvec))
 * 
 * cpdef Expression concatenate(list xs):             # <<<<<<<<<<<<<<
 *     cdef vector[CExpression] cvec
 *     cdef Expression x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.concatenate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_x);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_109concatenate(PyObject *__pyx_self, PyObject *__pyx_v_xs); /*proto*/
static PyObject *__pyx_pw_5pycnn_109concatenate(PyObject *__pyx_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("concatenate (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xs), (&PyList_Type), 1, "xs", 1))) __PYX_ERR(0, 709, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_108concatenate(__pyx_self, ((PyObject*)__pyx_v_xs));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_108concatenate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("concatenate", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_concatenate(__pyx_v_xs, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.concatenate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":718
 * 
 * 
 * cpdef Expression affine_transform(list exprs):             # <<<<<<<<<<<<<<
 *     cdef Expression e
 *     cdef vector[CExpression] ves
 */

static PyObject *__pyx_pw_5pycnn_111affine_transform(PyObject *__pyx_self, PyObject *__pyx_v_exprs); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_affine_transform(PyObject *__pyx_v_exprs, CYTHON_UNUSED int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_e = 0;
  std::vector<cnn::expr::Expression>  __pyx_v_ves;
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("affine_transform", 0);

  /* "pycnn.pyx":721
 *     cdef Expression e
 *     cdef vector[CExpression] ves
 *     for e in exprs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(e)
 *         ves.push_back(e.c())
 */
  if (unlikely(__pyx_v_exprs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 721, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_exprs; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 721, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 721, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 721, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_e, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "pycnn.pyx":722
 *     cdef vector[CExpression] ves
 *     for e in exprs:
 *         ensure_freshness(e)             # <<<<<<<<<<<<<<
 *         ves.push_back(e.c())
 *     return Expression.from_cexpr(e.cg_version, c_affine_transform(ves))
 */
    __pyx_t_3 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_e); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 722, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":723
 *     for e in exprs:
 *         ensure_freshness(e)
 *         ves.push_back(e.c())             # <<<<<<<<<<<<<<
 *     return Expression.from_cexpr(e.cg_version, c_affine_transform(ves))
 * 
 */
    try {
      __pyx_v_ves.push_back(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_e->__pyx_vtab)->c(__pyx_v_e));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 723, __pyx_L1_error)
    }

    /* "pycnn.pyx":721
 *     cdef Expression e
 *     cdef vector[CExpression] ves
 *     for e in exprs:             # <<<<<<<<<<<<<<
 *         ensure_freshness(e)
 *         ves.push_back(e.c())
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":724
 *         ensure_freshness(e)
 *         ves.push_back(e.c())
 *     return Expression.from_cexpr(e.cg_version, c_affine_transform(ves))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  if (unlikely(!__pyx_v_e)) { __Pyx_RaiseUnboundLocalError("e"); __PYX_ERR(0, 724, __pyx_L1_error) }
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_e->cg_version, cnn::expr::affine_transform(__pyx_v_ves))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":718
 * 
 * 
 * cpdef Expression affine_transform(list exprs):             # <<<<<<<<<<<<<<
 *     cdef Expression e
 *     cdef vector[CExpression] ves
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.affine_transform", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_e);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_111affine_transform(PyObject *__pyx_self, PyObject *__pyx_v_exprs); /*proto*/
static PyObject *__pyx_pw_5pycnn_111affine_transform(PyObject *__pyx_self, PyObject *__pyx_v_exprs) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("affine_transform (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_exprs), (&PyList_Type), 1, "exprs", 1))) __PYX_ERR(0, 718, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_110affine_transform(__pyx_self, ((PyObject*)__pyx_v_exprs));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_110affine_transform(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_exprs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("affine_transform", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_affine_transform(__pyx_v_exprs, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 718, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.affine_transform", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":736
 *     cdef RNNState _init_state
 *     cdef int cg_version
 *     def __cinit_(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):             # <<<<<<<<<<<<<<
 *         # TODO disable calling this directly.
 *         raise RuntimeError("Cannot instantiate RNNBuilder directly.")
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10RNNBuilder_1__cinit_(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_10RNNBuilder_1__cinit_(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED unsigned int __pyx_v_layers;
  CYTHON_UNUSED unsigned int __pyx_v_input_dim;
  CYTHON_UNUSED unsigned int __pyx_v_hidden_dim;
  CYTHON_UNUSED struct __pyx_obj_5pycnn_Model *__pyx_v_model = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit_ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_layers,&__pyx_n_s_input_dim,&__pyx_n_s_hidden_dim,&__pyx_n_s_model,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_layers)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_input_dim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit_", 1, 4, 4, 1); __PYX_ERR(0, 736, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hidden_dim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit_", 1, 4, 4, 2); __PYX_ERR(0, 736, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit_", 1, 4, 4, 3); __PYX_ERR(0, 736, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit_") < 0)) __PYX_ERR(0, 736, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_layers = __Pyx_PyInt_As_unsigned_int(values[0]); if (unlikely((__pyx_v_layers == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 736, __pyx_L3_error)
    __pyx_v_input_dim = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_input_dim == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 736, __pyx_L3_error)
    __pyx_v_hidden_dim = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_hidden_dim == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 736, __pyx_L3_error)
    __pyx_v_model = ((struct __pyx_obj_5pycnn_Model *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit_", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 736, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.RNNBuilder.__cinit_", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_5pycnn_Model, 1, "model", 0))) __PYX_ERR(0, 736, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_10RNNBuilder___cinit_(((struct __pyx_obj_5pycnn_RNNBuilder *)__pyx_v_self), __pyx_v_layers, __pyx_v_input_dim, __pyx_v_hidden_dim, __pyx_v_model);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10RNNBuilder___cinit_(CYTHON_UNUSED struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, CYTHON_UNUSED unsigned int __pyx_v_layers, CYTHON_UNUSED unsigned int __pyx_v_input_dim, CYTHON_UNUSED unsigned int __pyx_v_hidden_dim, CYTHON_UNUSED struct __pyx_obj_5pycnn_Model *__pyx_v_model) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__cinit_", 0);

  /* "pycnn.pyx":738
 *     def __cinit_(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *         # TODO disable calling this directly.
 *         raise RuntimeError("Cannot instantiate RNNBuilder directly.")             # <<<<<<<<<<<<<<
 *     #def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *     #    self.thisptr = 0 #new CSimpleRNNBuilder(layers, input_dim, hidden_dim, model.thisptr)
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 738, __pyx_L1_error)

  /* "pycnn.pyx":736
 *     cdef RNNState _init_state
 *     cdef int cg_version
 *     def __cinit_(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):             # <<<<<<<<<<<<<<
 *         # TODO disable calling this directly.
 *         raise RuntimeError("Cannot instantiate RNNBuilder directly.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.RNNBuilder.__cinit_", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":743
 *     #    self.cg_version = -1
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_5pycnn_10RNNBuilder_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5pycnn_10RNNBuilder_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5pycnn_10RNNBuilder_2__dealloc__(((struct __pyx_obj_5pycnn_RNNBuilder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5pycnn_10RNNBuilder_2__dealloc__(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pycnn.pyx":744
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef new_graph(self):
 */
  delete __pyx_v_self->thisptr;

  /* "pycnn.pyx":743
 *     #    self.cg_version = -1
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pycnn.pyx":746
 *         del self.thisptr
 * 
 *     cdef new_graph(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.new_graph(_cg.thisptr[0])
 *         self.cg_version = _cg.version()
 */

static PyObject *__pyx_f_5pycnn_10RNNBuilder_new_graph(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("new_graph", 0);

  /* "pycnn.pyx":747
 * 
 *     cdef new_graph(self):
 *         self.thisptr.new_graph(_cg.thisptr[0])             # <<<<<<<<<<<<<<
 *         self.cg_version = _cg.version()
 * 
 */
  __pyx_v_self->thisptr->new_graph((__pyx_v_5pycnn__cg->thisptr[0]));

  /* "pycnn.pyx":748
 *     cdef new_graph(self):
 *         self.thisptr.new_graph(_cg.thisptr[0])
 *         self.cg_version = _cg.version()             # <<<<<<<<<<<<<<
 * 
 *     cdef start_new_sequence(self, es=None):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 748, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 748, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->cg_version = __pyx_t_2;

  /* "pycnn.pyx":746
 *         del self.thisptr
 * 
 *     cdef new_graph(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.new_graph(_cg.thisptr[0])
 *         self.cg_version = _cg.version()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.RNNBuilder.new_graph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":750
 *         self.cg_version = _cg.version()
 * 
 *     cdef start_new_sequence(self, es=None):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef vector[CExpression] ces = vector[CExpression]()
 */

static PyObject *__pyx_f_5pycnn_10RNNBuilder_start_new_sequence(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, struct __pyx_opt_args_5pycnn_10RNNBuilder_start_new_sequence *__pyx_optional_args) {
  PyObject *__pyx_v_es = ((PyObject *)Py_None);
  std::vector<cnn::expr::Expression>  __pyx_v_ces;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_e = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  std::vector<cnn::expr::Expression>  __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  __Pyx_RefNannySetupContext("start_new_sequence", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_es = __pyx_optional_args->es;
    }
  }

  /* "pycnn.pyx":751
 * 
 *     cdef start_new_sequence(self, es=None):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         cdef vector[CExpression] ces = vector[CExpression]()
 *         cdef Expression e
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 751, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 751, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 751, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 751, __pyx_L1_error)
  }

  /* "pycnn.pyx":752
 *     cdef start_new_sequence(self, es=None):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef vector[CExpression] ces = vector[CExpression]()             # <<<<<<<<<<<<<<
 *         cdef Expression e
 *         if es:
 */
  try {
    __pyx_t_5 = std::vector<cnn::expr::Expression> ();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 752, __pyx_L1_error)
  }
  __pyx_v_ces = __pyx_t_5;

  /* "pycnn.pyx":754
 *         cdef vector[CExpression] ces = vector[CExpression]()
 *         cdef Expression e
 *         if es:             # <<<<<<<<<<<<<<
 *             for e in es:
 *                 ensure_freshness(e)
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_es); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 754, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "pycnn.pyx":755
 *         cdef Expression e
 *         if es:
 *             for e in es:             # <<<<<<<<<<<<<<
 *                 ensure_freshness(e)
 *                 ces.push_back(e.c())
 */
    if (likely(PyList_CheckExact(__pyx_v_es)) || PyTuple_CheckExact(__pyx_v_es)) {
      __pyx_t_3 = __pyx_v_es; __Pyx_INCREF(__pyx_t_3); __pyx_t_6 = 0;
      __pyx_t_7 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_es); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 755, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 755, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_7)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 755, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 755, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 755, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 755, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_7(__pyx_t_3);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 755, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 755, __pyx_L1_error)
      __Pyx_XDECREF_SET(__pyx_v_e, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "pycnn.pyx":756
 *         if es:
 *             for e in es:
 *                 ensure_freshness(e)             # <<<<<<<<<<<<<<
 *                 ces.push_back(e.c())
 *         self.thisptr.start_new_sequence(ces)
 */
      __pyx_t_2 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_e); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 756, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "pycnn.pyx":757
 *             for e in es:
 *                 ensure_freshness(e)
 *                 ces.push_back(e.c())             # <<<<<<<<<<<<<<
 *         self.thisptr.start_new_sequence(ces)
 * 
 */
      try {
        __pyx_v_ces.push_back(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_e->__pyx_vtab)->c(__pyx_v_e));
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 757, __pyx_L1_error)
      }

      /* "pycnn.pyx":755
 *         cdef Expression e
 *         if es:
 *             for e in es:             # <<<<<<<<<<<<<<
 *                 ensure_freshness(e)
 *                 ces.push_back(e.c())
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":754
 *         cdef vector[CExpression] ces = vector[CExpression]()
 *         cdef Expression e
 *         if es:             # <<<<<<<<<<<<<<
 *             for e in es:
 *                 ensure_freshness(e)
 */
  }

  /* "pycnn.pyx":758
 *                 ensure_freshness(e)
 *                 ces.push_back(e.c())
 *         self.thisptr.start_new_sequence(ces)             # <<<<<<<<<<<<<<
 * 
 *     cdef Expression add_input(self, Expression e):
 */
  __pyx_v_self->thisptr->start_new_sequence(__pyx_v_ces);

  /* "pycnn.pyx":750
 *         self.cg_version = _cg.version()
 * 
 *     cdef start_new_sequence(self, es=None):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef vector[CExpression] ces = vector[CExpression]()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.RNNBuilder.start_new_sequence", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_e);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":760
 *         self.thisptr.start_new_sequence(ces)
 * 
 *     cdef Expression add_input(self, Expression e):             # <<<<<<<<<<<<<<
 *         ensure_freshness(e)
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 */

static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_10RNNBuilder_add_input(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_e) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("add_input", 0);

  /* "pycnn.pyx":761
 * 
 *     cdef Expression add_input(self, Expression e):
 *         ensure_freshness(e)             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(e.c()))
 */
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_e); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 761, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":762
 *     cdef Expression add_input(self, Expression e):
 *         ensure_freshness(e)
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(e.c()))
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 762, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 762, __pyx_L1_error)
  }

  /* "pycnn.pyx":763
 *         ensure_freshness(e)
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(e.c()))             # <<<<<<<<<<<<<<
 * 
 *     cdef Expression add_input_to_prev(self, CRNNPointer prev, Expression e):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_3 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_self->cg_version, __pyx_v_self->thisptr->add_input(((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_e->__pyx_vtab)->c(__pyx_v_e)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 763, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":760
 *         self.thisptr.start_new_sequence(ces)
 * 
 *     cdef Expression add_input(self, Expression e):             # <<<<<<<<<<<<<<
 *         ensure_freshness(e)
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.RNNBuilder.add_input", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":765
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(e.c()))
 * 
 *     cdef Expression add_input_to_prev(self, CRNNPointer prev, Expression e):             # <<<<<<<<<<<<<<
 *         ensure_freshness(e)
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 */

static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_10RNNBuilder_add_input_to_prev(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, cnn::RNNPointer __pyx_v_prev, struct __pyx_obj_5pycnn_Expression *__pyx_v_e) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("add_input_to_prev", 0);

  /* "pycnn.pyx":766
 * 
 *     cdef Expression add_input_to_prev(self, CRNNPointer prev, Expression e):
 *         ensure_freshness(e)             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(prev, e.c()))
 */
  __pyx_t_1 = __pyx_f_5pycnn_ensure_freshness(__pyx_v_e); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":767
 *     cdef Expression add_input_to_prev(self, CRNNPointer prev, Expression e):
 *         ensure_freshness(e)
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(prev, e.c()))
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 767, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 767, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 767, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 767, __pyx_L1_error)
  }

  /* "pycnn.pyx":768
 *         ensure_freshness(e)
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(prev, e.c()))             # <<<<<<<<<<<<<<
 * 
 *     cdef rewind_one_step(self):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_3 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_self->cg_version, __pyx_v_self->thisptr->add_input(__pyx_v_prev, ((struct __pyx_vtabstruct_5pycnn_Expression *)__pyx_v_e->__pyx_vtab)->c(__pyx_v_e)))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":765
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(e.c()))
 * 
 *     cdef Expression add_input_to_prev(self, CRNNPointer prev, Expression e):             # <<<<<<<<<<<<<<
 *         ensure_freshness(e)
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.RNNBuilder.add_input_to_prev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":770
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(prev, e.c()))
 * 
 *     cdef rewind_one_step(self):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         self.thisptr.rewind_one_step()
 */

static PyObject *__pyx_f_5pycnn_10RNNBuilder_rewind_one_step(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("rewind_one_step", 0);

  /* "pycnn.pyx":771
 * 
 *     cdef rewind_one_step(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         self.thisptr.rewind_one_step()
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 771, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 771, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 771, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 771, __pyx_L1_error)
  }

  /* "pycnn.pyx":772
 *     cdef rewind_one_step(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         self.thisptr.rewind_one_step()             # <<<<<<<<<<<<<<
 * 
 *     cdef Expression back(self):
 */
  __pyx_v_self->thisptr->rewind_one_step();

  /* "pycnn.pyx":770
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(prev, e.c()))
 * 
 *     cdef rewind_one_step(self):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         self.thisptr.rewind_one_step()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.RNNBuilder.rewind_one_step", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":774
 *         self.thisptr.rewind_one_step()
 * 
 *     cdef Expression back(self):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.back())
 */

static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_10RNNBuilder_back(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("back", 0);

  /* "pycnn.pyx":775
 * 
 *     cdef Expression back(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.back())
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 775, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 775, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 775, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 775, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 775, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 775, __pyx_L1_error)
  }

  /* "pycnn.pyx":776
 *     cdef Expression back(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.back())             # <<<<<<<<<<<<<<
 * 
 *     cdef final_h(self):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_3 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_self->cg_version, __pyx_v_self->thisptr->back())); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":774
 *         self.thisptr.rewind_one_step()
 * 
 *     cdef Expression back(self):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.back())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.RNNBuilder.back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":778
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.back())
 * 
 *     cdef final_h(self):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []
 */

static PyObject *__pyx_f_5pycnn_10RNNBuilder_final_h(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self) {
  PyObject *__pyx_v_res = 0;
  cnn::expr::Expression __pyx_v_cexp;
  std::vector<cnn::expr::Expression>  __pyx_v_cexps;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  std::vector<cnn::expr::Expression> ::iterator __pyx_t_5;
  cnn::expr::Expression __pyx_t_6;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("final_h", 0);

  /* "pycnn.pyx":779
 * 
 *     cdef final_h(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         cdef list res = []
 *         cdef CExpression cexp
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 779, __pyx_L1_error)
  }

  /* "pycnn.pyx":780
 *     cdef final_h(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []             # <<<<<<<<<<<<<<
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.final_h()
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_res = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pycnn.pyx":782
 *         cdef list res = []
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.final_h()             # <<<<<<<<<<<<<<
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 */
  __pyx_v_cexps = __pyx_v_self->thisptr->final_h();

  /* "pycnn.pyx":783
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.final_h()
 *         for cexp in cexps:             # <<<<<<<<<<<<<<
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res
 */
  __pyx_t_5 = __pyx_v_cexps.begin();
  for (;;) {
    if (!(__pyx_t_5 != __pyx_v_cexps.end())) break;
    __pyx_t_6 = *__pyx_t_5;
    ++__pyx_t_5;
    __pyx_v_cexp = __pyx_t_6;

    /* "pycnn.pyx":784
 *         cdef vector[CExpression] cexps = self.thisptr.final_h()
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __pyx_t_3 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_self->cg_version, __pyx_v_cexp)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_res, __pyx_t_3); if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 784, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":783
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.final_h()
 *         for cexp in cexps:             # <<<<<<<<<<<<<<
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res
 */
  }

  /* "pycnn.pyx":785
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     cdef final_s(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "pycnn.pyx":778
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.back())
 * 
 *     cdef final_h(self):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.RNNBuilder.final_h", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":787
 *         return res
 * 
 *     cdef final_s(self):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []
 */

static PyObject *__pyx_f_5pycnn_10RNNBuilder_final_s(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self) {
  PyObject *__pyx_v_res = 0;
  cnn::expr::Expression __pyx_v_cexp;
  std::vector<cnn::expr::Expression>  __pyx_v_cexps;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  std::vector<cnn::expr::Expression> ::iterator __pyx_t_5;
  cnn::expr::Expression __pyx_t_6;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("final_s", 0);

  /* "pycnn.pyx":788
 * 
 *     cdef final_s(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         cdef list res = []
 *         cdef CExpression cexp
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 788, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 788, __pyx_L1_error)
  }

  /* "pycnn.pyx":789
 *     cdef final_s(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []             # <<<<<<<<<<<<<<
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.final_s()
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 789, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_res = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pycnn.pyx":791
 *         cdef list res = []
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.final_s()             # <<<<<<<<<<<<<<
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 */
  __pyx_v_cexps = __pyx_v_self->thisptr->final_s();

  /* "pycnn.pyx":792
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.final_s()
 *         for cexp in cexps:             # <<<<<<<<<<<<<<
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res
 */
  __pyx_t_5 = __pyx_v_cexps.begin();
  for (;;) {
    if (!(__pyx_t_5 != __pyx_v_cexps.end())) break;
    __pyx_t_6 = *__pyx_t_5;
    ++__pyx_t_5;
    __pyx_v_cexp = __pyx_t_6;

    /* "pycnn.pyx":793
 *         cdef vector[CExpression] cexps = self.thisptr.final_s()
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __pyx_t_3 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_self->cg_version, __pyx_v_cexp)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 793, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_res, __pyx_t_3); if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 793, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":792
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.final_s()
 *         for cexp in cexps:             # <<<<<<<<<<<<<<
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res
 */
  }

  /* "pycnn.pyx":794
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     cdef get_h(self, CRNNPointer i):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "pycnn.pyx":787
 *         return res
 * 
 *     cdef final_s(self):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.RNNBuilder.final_s", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":796
 *         return res
 * 
 *     cdef get_h(self, CRNNPointer i):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []
 */

static PyObject *__pyx_f_5pycnn_10RNNBuilder_get_h(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, cnn::RNNPointer __pyx_v_i) {
  PyObject *__pyx_v_res = 0;
  cnn::expr::Expression __pyx_v_cexp;
  std::vector<cnn::expr::Expression>  __pyx_v_cexps;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  std::vector<cnn::expr::Expression> ::iterator __pyx_t_5;
  cnn::expr::Expression __pyx_t_6;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("get_h", 0);

  /* "pycnn.pyx":797
 * 
 *     cdef get_h(self, CRNNPointer i):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         cdef list res = []
 *         cdef CExpression cexp
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 797, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 797, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 797, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 797, __pyx_L1_error)
  }

  /* "pycnn.pyx":798
 *     cdef get_h(self, CRNNPointer i):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []             # <<<<<<<<<<<<<<
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.get_h(i)
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_res = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pycnn.pyx":800
 *         cdef list res = []
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.get_h(i)             # <<<<<<<<<<<<<<
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 */
  __pyx_v_cexps = __pyx_v_self->thisptr->get_h(__pyx_v_i);

  /* "pycnn.pyx":801
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.get_h(i)
 *         for cexp in cexps:             # <<<<<<<<<<<<<<
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res
 */
  __pyx_t_5 = __pyx_v_cexps.begin();
  for (;;) {
    if (!(__pyx_t_5 != __pyx_v_cexps.end())) break;
    __pyx_t_6 = *__pyx_t_5;
    ++__pyx_t_5;
    __pyx_v_cexp = __pyx_t_6;

    /* "pycnn.pyx":802
 *         cdef vector[CExpression] cexps = self.thisptr.get_h(i)
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __pyx_t_3 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_self->cg_version, __pyx_v_cexp)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 802, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_res, __pyx_t_3); if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 802, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":801
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.get_h(i)
 *         for cexp in cexps:             # <<<<<<<<<<<<<<
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res
 */
  }

  /* "pycnn.pyx":803
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     cdef get_s(self, CRNNPointer i):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "pycnn.pyx":796
 *         return res
 * 
 *     cdef get_h(self, CRNNPointer i):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.RNNBuilder.get_h", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":805
 *         return res
 * 
 *     cdef get_s(self, CRNNPointer i):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []
 */

static PyObject *__pyx_f_5pycnn_10RNNBuilder_get_s(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, cnn::RNNPointer __pyx_v_i) {
  PyObject *__pyx_v_res = 0;
  cnn::expr::Expression __pyx_v_cexp;
  std::vector<cnn::expr::Expression>  __pyx_v_cexps;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  std::vector<cnn::expr::Expression> ::iterator __pyx_t_5;
  cnn::expr::Expression __pyx_t_6;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("get_s", 0);

  /* "pycnn.pyx":806
 * 
 *     cdef get_s(self, CRNNPointer i):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         cdef list res = []
 *         cdef CExpression cexp
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 806, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 806, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 806, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 806, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 806, __pyx_L1_error)
  }

  /* "pycnn.pyx":807
 *     cdef get_s(self, CRNNPointer i):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []             # <<<<<<<<<<<<<<
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.get_s(i)
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 807, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_res = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pycnn.pyx":809
 *         cdef list res = []
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.get_s(i)             # <<<<<<<<<<<<<<
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 */
  __pyx_v_cexps = __pyx_v_self->thisptr->get_s(__pyx_v_i);

  /* "pycnn.pyx":810
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.get_s(i)
 *         for cexp in cexps:             # <<<<<<<<<<<<<<
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res
 */
  __pyx_t_5 = __pyx_v_cexps.begin();
  for (;;) {
    if (!(__pyx_t_5 != __pyx_v_cexps.end())) break;
    __pyx_t_6 = *__pyx_t_5;
    ++__pyx_t_5;
    __pyx_v_cexp = __pyx_t_6;

    /* "pycnn.pyx":811
 *         cdef vector[CExpression] cexps = self.thisptr.get_s(i)
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))             # <<<<<<<<<<<<<<
 *         return res
 * 
 */
    __pyx_t_3 = ((PyObject *)__pyx_f_5pycnn_10Expression_from_cexpr(__pyx_v_self->cg_version, __pyx_v_cexp)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 811, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_res, __pyx_t_3); if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 811, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":810
 *         cdef CExpression cexp
 *         cdef vector[CExpression] cexps = self.thisptr.get_s(i)
 *         for cexp in cexps:             # <<<<<<<<<<<<<<
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res
 */
  }

  /* "pycnn.pyx":812
 *         for cexp in cexps:
 *             res.append(Expression.from_cexpr(self.cg_version, cexp))
 *         return res             # <<<<<<<<<<<<<<
 * 
 *     cpdef RNNState initial_state(self,vecs=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_res);
  __pyx_r = __pyx_v_res;
  goto __pyx_L0;

  /* "pycnn.pyx":805
 *         return res
 * 
 *     cdef get_s(self, CRNNPointer i):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")
 *         cdef list res = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.RNNBuilder.get_s", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":814
 *         return res
 * 
 *     cpdef RNNState initial_state(self,vecs=None):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version():
 *             self.new_graph()
 */

static PyObject *__pyx_pw_5pycnn_10RNNBuilder_5initial_state(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_RNNState *__pyx_f_5pycnn_10RNNBuilder_initial_state(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state *__pyx_optional_args) {
  PyObject *__pyx_v_vecs = ((PyObject *)Py_None);
  struct __pyx_obj_5pycnn_RNNState *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  struct __pyx_opt_args_5pycnn_10RNNBuilder_start_new_sequence __pyx_t_8;
  __Pyx_RefNannySetupContext("initial_state", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_vecs = __pyx_optional_args->vecs;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initial_state); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 814, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10RNNBuilder_5initial_state)) {
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_vecs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 814, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 814, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_vecs);
        __Pyx_GIVEREF(__pyx_v_vecs);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_vecs);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 814, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5pycnn_RNNState))))) __PYX_ERR(0, 814, __pyx_L1_error)
      __pyx_r = ((struct __pyx_obj_5pycnn_RNNState *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":815
 * 
 *     cpdef RNNState initial_state(self,vecs=None):
 *         if self.cg_version != _cg.version():             # <<<<<<<<<<<<<<
 *             self.new_graph()
 *             if vecs is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 815, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 815, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 815, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 815, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_6) {

    /* "pycnn.pyx":816
 *     cpdef RNNState initial_state(self,vecs=None):
 *         if self.cg_version != _cg.version():
 *             self.new_graph()             # <<<<<<<<<<<<<<
 *             if vecs is not None:
 *                 self.start_new_sequence(vecs)
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_5pycnn_RNNBuilder *)__pyx_v_self->__pyx_vtab)->new_graph(__pyx_v_self); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 816, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":817
 *         if self.cg_version != _cg.version():
 *             self.new_graph()
 *             if vecs is not None:             # <<<<<<<<<<<<<<
 *                 self.start_new_sequence(vecs)
 *             else:
 */
    __pyx_t_6 = (__pyx_v_vecs != Py_None);
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "pycnn.pyx":818
 *             self.new_graph()
 *             if vecs is not None:
 *                 self.start_new_sequence(vecs)             # <<<<<<<<<<<<<<
 *             else:
 *                 self.start_new_sequence()
 */
      __pyx_t_8.__pyx_n = 1;
      __pyx_t_8.es = __pyx_v_vecs;
      __pyx_t_3 = ((struct __pyx_vtabstruct_5pycnn_RNNBuilder *)__pyx_v_self->__pyx_vtab)->start_new_sequence(__pyx_v_self, &__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 818, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "pycnn.pyx":817
 *         if self.cg_version != _cg.version():
 *             self.new_graph()
 *             if vecs is not None:             # <<<<<<<<<<<<<<
 *                 self.start_new_sequence(vecs)
 *             else:
 */
      goto __pyx_L4;
    }

    /* "pycnn.pyx":820
 *                 self.start_new_sequence(vecs)
 *             else:
 *                 self.start_new_sequence()             # <<<<<<<<<<<<<<
 *             self._init_state = RNNState(self, -1)
 *         return self._init_state
 */
    /*else*/ {
      __pyx_t_3 = ((struct __pyx_vtabstruct_5pycnn_RNNBuilder *)__pyx_v_self->__pyx_vtab)->start_new_sequence(__pyx_v_self, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 820, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_L4:;

    /* "pycnn.pyx":821
 *             else:
 *                 self.start_new_sequence()
 *             self._init_state = RNNState(self, -1)             # <<<<<<<<<<<<<<
 *         return self._init_state
 * 
 */
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
    __Pyx_INCREF(__pyx_int_neg_1);
    __Pyx_GIVEREF(__pyx_int_neg_1);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_neg_1);
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_RNNState), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->_init_state);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->_init_state));
    __pyx_v_self->_init_state = ((struct __pyx_obj_5pycnn_RNNState *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "pycnn.pyx":815
 * 
 *     cpdef RNNState initial_state(self,vecs=None):
 *         if self.cg_version != _cg.version():             # <<<<<<<<<<<<<<
 *             self.new_graph()
 *             if vecs is not None:
 */
  }

  /* "pycnn.pyx":822
 *                 self.start_new_sequence()
 *             self._init_state = RNNState(self, -1)
 *         return self._init_state             # <<<<<<<<<<<<<<
 * 
 *     cpdef RNNState initial_state_from_raw_vectors(self,vecs=None):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_init_state));
  __pyx_r = __pyx_v_self->_init_state;
  goto __pyx_L0;

  /* "pycnn.pyx":814
 *         return res
 * 
 *     cpdef RNNState initial_state(self,vecs=None):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version():
 *             self.new_graph()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.RNNBuilder.initial_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10RNNBuilder_5initial_state(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_10RNNBuilder_5initial_state(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_vecs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initial_state (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_vecs,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vecs);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "initial_state") < 0)) __PYX_ERR(0, 814, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_vecs = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("initial_state", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 814, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.RNNBuilder.initial_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_10RNNBuilder_4initial_state(((struct __pyx_obj_5pycnn_RNNBuilder *)__pyx_v_self), __pyx_v_vecs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10RNNBuilder_4initial_state(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, PyObject *__pyx_v_vecs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state __pyx_t_2;
  __Pyx_RefNannySetupContext("initial_state", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.vecs = __pyx_v_vecs;
  __pyx_t_1 = ((PyObject *)__pyx_vtabptr_5pycnn_RNNBuilder->initial_state(__pyx_v_self, 1, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 814, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.RNNBuilder.initial_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":824
 *         return self._init_state
 * 
 *     cpdef RNNState initial_state_from_raw_vectors(self,vecs=None):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version():
 *             self.new_graph()
 */

static PyObject *__pyx_pw_5pycnn_10RNNBuilder_7initial_state_from_raw_vectors(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static struct __pyx_obj_5pycnn_RNNState *__pyx_f_5pycnn_10RNNBuilder_initial_state_from_raw_vectors(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state_from_raw_vectors *__pyx_optional_args) {
  PyObject *__pyx_v_vecs = ((PyObject *)Py_None);
  PyObject *__pyx_v_es = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_v_e = NULL;
  struct __pyx_obj_5pycnn_RNNState *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  struct __pyx_opt_args_5pycnn_10RNNBuilder_start_new_sequence __pyx_t_13;
  __Pyx_RefNannySetupContext("initial_state_from_raw_vectors", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_vecs = __pyx_optional_args->vecs;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initial_state_from_raw_vectors); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 824, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_10RNNBuilder_7initial_state_from_raw_vectors)) {
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_vecs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 824, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 824, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_vecs);
        __Pyx_GIVEREF(__pyx_v_vecs);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_vecs);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 824, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5pycnn_RNNState))))) __PYX_ERR(0, 824, __pyx_L1_error)
      __pyx_r = ((struct __pyx_obj_5pycnn_RNNState *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":825
 * 
 *     cpdef RNNState initial_state_from_raw_vectors(self,vecs=None):
 *         if self.cg_version != _cg.version():             # <<<<<<<<<<<<<<
 *             self.new_graph()
 *             if vecs is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->cg_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_5pycnn_ComputationGraph *)__pyx_v_5pycnn__cg->__pyx_vtab)->version(__pyx_v_5pycnn__cg, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 825, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_6) {

    /* "pycnn.pyx":826
 *     cpdef RNNState initial_state_from_raw_vectors(self,vecs=None):
 *         if self.cg_version != _cg.version():
 *             self.new_graph()             # <<<<<<<<<<<<<<
 *             if vecs is not None:
 *                 es = []
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_5pycnn_RNNBuilder *)__pyx_v_self->__pyx_vtab)->new_graph(__pyx_v_self); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 826, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pycnn.pyx":827
 *         if self.cg_version != _cg.version():
 *             self.new_graph()
 *             if vecs is not None:             # <<<<<<<<<<<<<<
 *                 es = []
 *                 for v in vecs:
 */
    __pyx_t_6 = (__pyx_v_vecs != Py_None);
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "pycnn.pyx":828
 *             self.new_graph()
 *             if vecs is not None:
 *                 es = []             # <<<<<<<<<<<<<<
 *                 for v in vecs:
 *                     e = vecInput(len(v))
 */
      __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 828, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_v_es = ((PyObject*)__pyx_t_3);
      __pyx_t_3 = 0;

      /* "pycnn.pyx":829
 *             if vecs is not None:
 *                 es = []
 *                 for v in vecs:             # <<<<<<<<<<<<<<
 *                     e = vecInput(len(v))
 *                     e.set(v)
 */
      if (likely(PyList_CheckExact(__pyx_v_vecs)) || PyTuple_CheckExact(__pyx_v_vecs)) {
        __pyx_t_3 = __pyx_v_vecs; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
        __pyx_t_9 = NULL;
      } else {
        __pyx_t_8 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_vecs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 829, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_9 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 829, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_9)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 829, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 829, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          } else {
            if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_COMPILING_IN_CPYTHON
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_2); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 829, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 829, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_9(__pyx_t_3);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 829, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "pycnn.pyx":830
 *                 es = []
 *                 for v in vecs:
 *                     e = vecInput(len(v))             # <<<<<<<<<<<<<<
 *                     e.set(v)
 *                     es.append(e)
 */
        __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_vecInput); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 830, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_10 = PyObject_Length(__pyx_v_v); if (unlikely(__pyx_t_10 == -1)) __PYX_ERR(0, 830, __pyx_L1_error)
        __pyx_t_5 = PyInt_FromSsize_t(__pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 830, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = NULL;
        if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        if (!__pyx_t_4) {
          __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 830, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else {
          __pyx_t_11 = PyTuple_New(1+1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 830, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_4); __pyx_t_4 = NULL;
          __Pyx_GIVEREF(__pyx_t_5);
          PyTuple_SET_ITEM(__pyx_t_11, 0+1, __pyx_t_5);
          __pyx_t_5 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_11, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 830, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF_SET(__pyx_v_e, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "pycnn.pyx":831
 *                 for v in vecs:
 *                     e = vecInput(len(v))
 *                     e.set(v)             # <<<<<<<<<<<<<<
 *                     es.append(e)
 *                 self.start_new_sequence(es)
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_e, __pyx_n_s_set); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 831, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_11 = NULL;
        if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_11)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_11);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        if (!__pyx_t_11) {
          __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_v); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 831, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
        } else {
          __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 831, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_GIVEREF(__pyx_t_11); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_11); __pyx_t_11 = NULL;
          __Pyx_INCREF(__pyx_v_v);
          __Pyx_GIVEREF(__pyx_v_v);
          PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_v);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 831, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "pycnn.pyx":832
 *                     e = vecInput(len(v))
 *                     e.set(v)
 *                     es.append(e)             # <<<<<<<<<<<<<<
 *                 self.start_new_sequence(es)
 *             else:
 */
        __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_es, __pyx_v_e); if (unlikely(__pyx_t_12 == -1)) __PYX_ERR(0, 832, __pyx_L1_error)

        /* "pycnn.pyx":829
 *             if vecs is not None:
 *                 es = []
 *                 for v in vecs:             # <<<<<<<<<<<<<<
 *                     e = vecInput(len(v))
 *                     e.set(v)
 */
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "pycnn.pyx":833
 *                     e.set(v)
 *                     es.append(e)
 *                 self.start_new_sequence(es)             # <<<<<<<<<<<<<<
 *             else:
 *                 self.start_new_sequence()
 */
      __pyx_t_13.__pyx_n = 1;
      __pyx_t_13.es = __pyx_v_es;
      __pyx_t_3 = ((struct __pyx_vtabstruct_5pycnn_RNNBuilder *)__pyx_v_self->__pyx_vtab)->start_new_sequence(__pyx_v_self, &__pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 833, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "pycnn.pyx":827
 *         if self.cg_version != _cg.version():
 *             self.new_graph()
 *             if vecs is not None:             # <<<<<<<<<<<<<<
 *                 es = []
 *                 for v in vecs:
 */
      goto __pyx_L4;
    }

    /* "pycnn.pyx":835
 *                 self.start_new_sequence(es)
 *             else:
 *                 self.start_new_sequence()             # <<<<<<<<<<<<<<
 *             self._init_state = RNNState(self, -1)
 *         return self._init_state
 */
    /*else*/ {
      __pyx_t_3 = ((struct __pyx_vtabstruct_5pycnn_RNNBuilder *)__pyx_v_self->__pyx_vtab)->start_new_sequence(__pyx_v_self, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 835, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_L4:;

    /* "pycnn.pyx":836
 *             else:
 *                 self.start_new_sequence()
 *             self._init_state = RNNState(self, -1)             # <<<<<<<<<<<<<<
 *         return self._init_state
 * #}}}
 */
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 836, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
    __Pyx_INCREF(__pyx_int_neg_1);
    __Pyx_GIVEREF(__pyx_int_neg_1);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_neg_1);
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_RNNState), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 836, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->_init_state);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->_init_state));
    __pyx_v_self->_init_state = ((struct __pyx_obj_5pycnn_RNNState *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "pycnn.pyx":825
 * 
 *     cpdef RNNState initial_state_from_raw_vectors(self,vecs=None):
 *         if self.cg_version != _cg.version():             # <<<<<<<<<<<<<<
 *             self.new_graph()
 *             if vecs is not None:
 */
  }

  /* "pycnn.pyx":837
 *                 self.start_new_sequence()
 *             self._init_state = RNNState(self, -1)
 *         return self._init_state             # <<<<<<<<<<<<<<
 * #}}}
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_init_state));
  __pyx_r = __pyx_v_self->_init_state;
  goto __pyx_L0;

  /* "pycnn.pyx":824
 *         return self._init_state
 * 
 *     cpdef RNNState initial_state_from_raw_vectors(self,vecs=None):             # <<<<<<<<<<<<<<
 *         if self.cg_version != _cg.version():
 *             self.new_graph()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("pycnn.RNNBuilder.initial_state_from_raw_vectors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_es);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_10RNNBuilder_7initial_state_from_raw_vectors(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_10RNNBuilder_7initial_state_from_raw_vectors(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_vecs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initial_state_from_raw_vectors (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_vecs,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vecs);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "initial_state_from_raw_vectors") < 0)) __PYX_ERR(0, 824, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_vecs = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("initial_state_from_raw_vectors", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 824, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.RNNBuilder.initial_state_from_raw_vectors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_10RNNBuilder_6initial_state_from_raw_vectors(((struct __pyx_obj_5pycnn_RNNBuilder *)__pyx_v_self), __pyx_v_vecs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_10RNNBuilder_6initial_state_from_raw_vectors(struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_self, PyObject *__pyx_v_vecs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state_from_raw_vectors __pyx_t_2;
  __Pyx_RefNannySetupContext("initial_state_from_raw_vectors", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.vecs = __pyx_v_vecs;
  __pyx_t_1 = ((PyObject *)__pyx_vtabptr_5pycnn_RNNBuilder->initial_state_from_raw_vectors(__pyx_v_self, 1, &__pyx_t_2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 824, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.RNNBuilder.initial_state_from_raw_vectors", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":841
 * 
 * cdef class SimpleRNNBuilder(RNNBuilder): # {{{
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CSimpleRNNBuilder(layers, input_dim, hidden_dim, model.thisptr)
 *         self.cg_version = -1
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_16SimpleRNNBuilder_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_16SimpleRNNBuilder_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_layers;
  unsigned int __pyx_v_input_dim;
  unsigned int __pyx_v_hidden_dim;
  struct __pyx_obj_5pycnn_Model *__pyx_v_model = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_layers,&__pyx_n_s_input_dim,&__pyx_n_s_hidden_dim,&__pyx_n_s_model,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_layers)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_input_dim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); __PYX_ERR(0, 841, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hidden_dim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); __PYX_ERR(0, 841, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); __PYX_ERR(0, 841, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 841, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_layers = __Pyx_PyInt_As_unsigned_int(values[0]); if (unlikely((__pyx_v_layers == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 841, __pyx_L3_error)
    __pyx_v_input_dim = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_input_dim == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 841, __pyx_L3_error)
    __pyx_v_hidden_dim = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_hidden_dim == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 841, __pyx_L3_error)
    __pyx_v_model = ((struct __pyx_obj_5pycnn_Model *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 841, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.SimpleRNNBuilder.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_5pycnn_Model, 1, "model", 0))) __PYX_ERR(0, 841, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_16SimpleRNNBuilder___cinit__(((struct __pyx_obj_5pycnn_SimpleRNNBuilder *)__pyx_v_self), __pyx_v_layers, __pyx_v_input_dim, __pyx_v_hidden_dim, __pyx_v_model);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_16SimpleRNNBuilder___cinit__(struct __pyx_obj_5pycnn_SimpleRNNBuilder *__pyx_v_self, unsigned int __pyx_v_layers, unsigned int __pyx_v_input_dim, unsigned int __pyx_v_hidden_dim, struct __pyx_obj_5pycnn_Model *__pyx_v_model) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":842
 * cdef class SimpleRNNBuilder(RNNBuilder): # {{{
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *         self.thisptr = new CSimpleRNNBuilder(layers, input_dim, hidden_dim, model.thisptr)             # <<<<<<<<<<<<<<
 *         self.cg_version = -1
 * 
 */
  __pyx_v_self->__pyx_base.thisptr = new cnn::SimpleRNNBuilder(__pyx_v_layers, __pyx_v_input_dim, __pyx_v_hidden_dim, __pyx_v_model->thisptr);

  /* "pycnn.pyx":843
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *         self.thisptr = new CSimpleRNNBuilder(layers, input_dim, hidden_dim, model.thisptr)
 *         self.cg_version = -1             # <<<<<<<<<<<<<<
 * 
 *     def whoami(self): return "SimpleRNNBuilder"
 */
  __pyx_v_self->__pyx_base.cg_version = -1;

  /* "pycnn.pyx":841
 * 
 * cdef class SimpleRNNBuilder(RNNBuilder): # {{{
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CSimpleRNNBuilder(layers, input_dim, hidden_dim, model.thisptr)
 *         self.cg_version = -1
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":845
 *         self.cg_version = -1
 * 
 *     def whoami(self): return "SimpleRNNBuilder"             # <<<<<<<<<<<<<<
 * #}}}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16SimpleRNNBuilder_3whoami(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16SimpleRNNBuilder_3whoami(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("whoami (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16SimpleRNNBuilder_2whoami(((struct __pyx_obj_5pycnn_SimpleRNNBuilder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16SimpleRNNBuilder_2whoami(CYTHON_UNUSED struct __pyx_obj_5pycnn_SimpleRNNBuilder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("whoami", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_SimpleRNNBuilder);
  __pyx_r = __pyx_n_s_SimpleRNNBuilder;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":849
 * 
 * cdef class LSTMBuilder(RNNBuilder): # {{{
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CLSTMBuilder(layers, input_dim, hidden_dim, model.thisptr)
 *         self.cg_version = -1
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_11LSTMBuilder_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_11LSTMBuilder_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  unsigned int __pyx_v_layers;
  unsigned int __pyx_v_input_dim;
  unsigned int __pyx_v_hidden_dim;
  struct __pyx_obj_5pycnn_Model *__pyx_v_model = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_layers,&__pyx_n_s_input_dim,&__pyx_n_s_hidden_dim,&__pyx_n_s_model,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_layers)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_input_dim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); __PYX_ERR(0, 849, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hidden_dim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); __PYX_ERR(0, 849, __pyx_L3_error)
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_model)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); __PYX_ERR(0, 849, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 849, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_layers = __Pyx_PyInt_As_unsigned_int(values[0]); if (unlikely((__pyx_v_layers == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 849, __pyx_L3_error)
    __pyx_v_input_dim = __Pyx_PyInt_As_unsigned_int(values[1]); if (unlikely((__pyx_v_input_dim == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 849, __pyx_L3_error)
    __pyx_v_hidden_dim = __Pyx_PyInt_As_unsigned_int(values[2]); if (unlikely((__pyx_v_hidden_dim == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 849, __pyx_L3_error)
    __pyx_v_model = ((struct __pyx_obj_5pycnn_Model *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 849, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.LSTMBuilder.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_model), __pyx_ptype_5pycnn_Model, 1, "model", 0))) __PYX_ERR(0, 849, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_11LSTMBuilder___cinit__(((struct __pyx_obj_5pycnn_LSTMBuilder *)__pyx_v_self), __pyx_v_layers, __pyx_v_input_dim, __pyx_v_hidden_dim, __pyx_v_model);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_11LSTMBuilder___cinit__(struct __pyx_obj_5pycnn_LSTMBuilder *__pyx_v_self, unsigned int __pyx_v_layers, unsigned int __pyx_v_input_dim, unsigned int __pyx_v_hidden_dim, struct __pyx_obj_5pycnn_Model *__pyx_v_model) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":850
 * cdef class LSTMBuilder(RNNBuilder): # {{{
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *         self.thisptr = new CLSTMBuilder(layers, input_dim, hidden_dim, model.thisptr)             # <<<<<<<<<<<<<<
 *         self.cg_version = -1
 * 
 */
  __pyx_v_self->__pyx_base.thisptr = new cnn::LSTMBuilder(__pyx_v_layers, __pyx_v_input_dim, __pyx_v_hidden_dim, __pyx_v_model->thisptr);

  /* "pycnn.pyx":851
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *         self.thisptr = new CLSTMBuilder(layers, input_dim, hidden_dim, model.thisptr)
 *         self.cg_version = -1             # <<<<<<<<<<<<<<
 * 
 *     def whoami(self): return "LSTMBuilder"
 */
  __pyx_v_self->__pyx_base.cg_version = -1;

  /* "pycnn.pyx":849
 * 
 * cdef class LSTMBuilder(RNNBuilder): # {{{
 *     def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CLSTMBuilder(layers, input_dim, hidden_dim, model.thisptr)
 *         self.cg_version = -1
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":853
 *         self.cg_version = -1
 * 
 *     def whoami(self): return "LSTMBuilder"             # <<<<<<<<<<<<<<
 * # }}}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_11LSTMBuilder_3whoami(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_11LSTMBuilder_3whoami(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("whoami (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_11LSTMBuilder_2whoami(((struct __pyx_obj_5pycnn_LSTMBuilder *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_11LSTMBuilder_2whoami(CYTHON_UNUSED struct __pyx_obj_5pycnn_LSTMBuilder *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("whoami", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_n_s_LSTMBuilder);
  __pyx_r = __pyx_n_s_LSTMBuilder;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":866
 *     cdef Expression _out
 *     # TODO: should be callable only from C
 *     def __cinit__(self, RNNBuilder builder, int state_idx=-1, RNNState prev_state=None, Expression out=None):             # <<<<<<<<<<<<<<
 *         self.builder = builder
 *         self.state_idx=state_idx
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_8RNNState_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_8RNNState_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_builder = 0;
  int __pyx_v_state_idx;
  struct __pyx_obj_5pycnn_RNNState *__pyx_v_prev_state = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_out = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_builder,&__pyx_n_s_state_idx,&__pyx_n_s_prev_state,&__pyx_n_s_out,0};
    PyObject* values[4] = {0,0,0,0};
    values[2] = (PyObject *)((struct __pyx_obj_5pycnn_RNNState *)Py_None);
    values[3] = (PyObject *)((struct __pyx_obj_5pycnn_Expression *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_builder)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_state_idx);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prev_state);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_out);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 866, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_builder = ((struct __pyx_obj_5pycnn_RNNBuilder *)values[0]);
    if (values[1]) {
      __pyx_v_state_idx = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_state_idx == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 866, __pyx_L3_error)
    } else {
      __pyx_v_state_idx = ((int)-1);
    }
    __pyx_v_prev_state = ((struct __pyx_obj_5pycnn_RNNState *)values[2]);
    __pyx_v_out = ((struct __pyx_obj_5pycnn_Expression *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 866, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.RNNState.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_builder), __pyx_ptype_5pycnn_RNNBuilder, 1, "builder", 0))) __PYX_ERR(0, 866, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prev_state), __pyx_ptype_5pycnn_RNNState, 1, "prev_state", 0))) __PYX_ERR(0, 866, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_out), __pyx_ptype_5pycnn_Expression, 1, "out", 0))) __PYX_ERR(0, 866, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_8RNNState___cinit__(((struct __pyx_obj_5pycnn_RNNState *)__pyx_v_self), __pyx_v_builder, __pyx_v_state_idx, __pyx_v_prev_state, __pyx_v_out);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_8RNNState___cinit__(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, struct __pyx_obj_5pycnn_RNNBuilder *__pyx_v_builder, int __pyx_v_state_idx, struct __pyx_obj_5pycnn_RNNState *__pyx_v_prev_state, struct __pyx_obj_5pycnn_Expression *__pyx_v_out) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":867
 *     # TODO: should be callable only from C
 *     def __cinit__(self, RNNBuilder builder, int state_idx=-1, RNNState prev_state=None, Expression out=None):
 *         self.builder = builder             # <<<<<<<<<<<<<<
 *         self.state_idx=state_idx
 *         self._prev = prev_state
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_builder));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_builder));
  __Pyx_GOTREF(__pyx_v_self->builder);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->builder));
  __pyx_v_self->builder = __pyx_v_builder;

  /* "pycnn.pyx":868
 *     def __cinit__(self, RNNBuilder builder, int state_idx=-1, RNNState prev_state=None, Expression out=None):
 *         self.builder = builder
 *         self.state_idx=state_idx             # <<<<<<<<<<<<<<
 *         self._prev = prev_state
 *         self._out = out
 */
  __pyx_v_self->state_idx = __pyx_v_state_idx;

  /* "pycnn.pyx":869
 *         self.builder = builder
 *         self.state_idx=state_idx
 *         self._prev = prev_state             # <<<<<<<<<<<<<<
 *         self._out = out
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_prev_state));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_prev_state));
  __Pyx_GOTREF(__pyx_v_self->_prev);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_prev));
  __pyx_v_self->_prev = __pyx_v_prev_state;

  /* "pycnn.pyx":870
 *         self.state_idx=state_idx
 *         self._prev = prev_state
 *         self._out = out             # <<<<<<<<<<<<<<
 * 
 *     cpdef RNNState add_input(self, Expression x):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_out));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_out));
  __Pyx_GOTREF(__pyx_v_self->_out);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_out));
  __pyx_v_self->_out = __pyx_v_out;

  /* "pycnn.pyx":866
 *     cdef Expression _out
 *     # TODO: should be callable only from C
 *     def __cinit__(self, RNNBuilder builder, int state_idx=-1, RNNState prev_state=None, Expression out=None):             # <<<<<<<<<<<<<<
 *         self.builder = builder
 *         self.state_idx=state_idx
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":872
 *         self._out = out
 * 
 *     cpdef RNNState add_input(self, Expression x):             # <<<<<<<<<<<<<<
 *         cdef Expression res = self.builder.add_input_to_prev(CRNNPointer(self.state_idx), x)
 *         cdef int state_idx = <int>self.builder.thisptr.state()
 */

static PyObject *__pyx_pw_5pycnn_8RNNState_3add_input(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_RNNState *__pyx_f_5pycnn_8RNNState_add_input(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_v_res = 0;
  int __pyx_v_state_idx;
  struct __pyx_obj_5pycnn_RNNState *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("add_input", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_add_input); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 872, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_8RNNState_3add_input)) {
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_x)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 872, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 872, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(((PyObject *)__pyx_v_x));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_x));
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_x));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 872, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5pycnn_RNNState))))) __PYX_ERR(0, 872, __pyx_L1_error)
      __pyx_r = ((struct __pyx_obj_5pycnn_RNNState *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":873
 * 
 *     cpdef RNNState add_input(self, Expression x):
 *         cdef Expression res = self.builder.add_input_to_prev(CRNNPointer(self.state_idx), x)             # <<<<<<<<<<<<<<
 *         cdef int state_idx = <int>self.builder.thisptr.state()
 *         return RNNState(self.builder, state_idx, self, res)
 */
  __pyx_t_1 = ((PyObject *)((struct __pyx_vtabstruct_5pycnn_RNNBuilder *)__pyx_v_self->builder->__pyx_vtab)->add_input_to_prev(__pyx_v_self->builder, cnn::RNNPointer(__pyx_v_self->state_idx), __pyx_v_x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 873, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_res = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":874
 *     cpdef RNNState add_input(self, Expression x):
 *         cdef Expression res = self.builder.add_input_to_prev(CRNNPointer(self.state_idx), x)
 *         cdef int state_idx = <int>self.builder.thisptr.state()             # <<<<<<<<<<<<<<
 *         return RNNState(self.builder, state_idx, self, res)
 * 
 */
  __pyx_v_state_idx = ((int)__pyx_v_self->builder->thisptr->state());

  /* "pycnn.pyx":875
 *         cdef Expression res = self.builder.add_input_to_prev(CRNNPointer(self.state_idx), x)
 *         cdef int state_idx = <int>self.builder.thisptr.state()
 *         return RNNState(self.builder, state_idx, self, res)             # <<<<<<<<<<<<<<
 * 
 *     def add_inputs(self, xs):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_state_idx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->builder));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->builder));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self->builder));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 2, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(((PyObject *)__pyx_v_res));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_res));
  PyTuple_SET_ITEM(__pyx_t_2, 3, ((PyObject *)__pyx_v_res));
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_RNNState), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = ((struct __pyx_obj_5pycnn_RNNState *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":872
 *         self._out = out
 * 
 *     cpdef RNNState add_input(self, Expression x):             # <<<<<<<<<<<<<<
 *         cdef Expression res = self.builder.add_input_to_prev(CRNNPointer(self.state_idx), x)
 *         cdef int state_idx = <int>self.builder.thisptr.state()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.RNNState.add_input", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_res);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_8RNNState_3add_input(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_8RNNState_3add_input(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_input (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 872, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_8RNNState_2add_input(((struct __pyx_obj_5pycnn_RNNState *)__pyx_v_self), ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_8RNNState_2add_input(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("add_input", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_8RNNState_add_input(__pyx_v_self, __pyx_v_x, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.RNNState.add_input", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":877
 *         return RNNState(self.builder, state_idx, self, res)
 * 
 *     def add_inputs(self, xs):             # <<<<<<<<<<<<<<
 *         """
 *         returns the list of states obtained by adding the given inputs
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_8RNNState_5add_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_xs); /*proto*/
static char __pyx_doc_5pycnn_8RNNState_4add_inputs[] = "\n        returns the list of states obtained by adding the given inputs\n        to the current state, one by one.\n\n        see also transduce(xs)\n\n        .transduce(xs) is different from .add_inputs(xs) in the following way:\n\n            .add_inputs(xs) returns a list of RNNState. RNNState objects can be\n             queried in various ways. In particular, they allow access to the previous\n             state, as well as to the state-vectors (h() and s() )\n\n            .transduce(xs) returns a list of Expression. These are just the output\n             expressions. For many cases, this suffices. \n             transduce is much more memory efficient than add_inputs. \n        ";
static PyObject *__pyx_pw_5pycnn_8RNNState_5add_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_inputs (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_8RNNState_4add_inputs(((struct __pyx_obj_5pycnn_RNNState *)__pyx_v_self), ((PyObject *)__pyx_v_xs));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_8RNNState_4add_inputs(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_v_states = NULL;
  struct __pyx_obj_5pycnn_RNNState *__pyx_v_cur = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("add_inputs", 0);

  /* "pycnn.pyx":894
 *              transduce is much more memory efficient than add_inputs.
 *         """
 *         states = []             # <<<<<<<<<<<<<<
 *         cur = self
 *         for x in xs:
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 894, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_states = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":895
 *         """
 *         states = []
 *         cur = self             # <<<<<<<<<<<<<<
 *         for x in xs:
 *             cur = cur.add_input(x)
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_v_cur = __pyx_v_self;

  /* "pycnn.pyx":896
 *         states = []
 *         cur = self
 *         for x in xs:             # <<<<<<<<<<<<<<
 *             cur = cur.add_input(x)
 *             states.append(cur)
 */
  if (likely(PyList_CheckExact(__pyx_v_xs)) || PyTuple_CheckExact(__pyx_v_xs)) {
    __pyx_t_1 = __pyx_v_xs; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_xs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 896, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 896, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 896, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 896, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 896, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 896, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "pycnn.pyx":897
 *         cur = self
 *         for x in xs:
 *             cur = cur.add_input(x)             # <<<<<<<<<<<<<<
 *             states.append(cur)
 *         return states
 */
    if (!(likely(((__pyx_v_x) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_x, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 897, __pyx_L1_error)
    __pyx_t_4 = ((PyObject *)((struct __pyx_vtabstruct_5pycnn_RNNState *)__pyx_v_cur->__pyx_vtab)->add_input(__pyx_v_cur, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x), 0)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 897, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF_SET(__pyx_v_cur, ((struct __pyx_obj_5pycnn_RNNState *)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "pycnn.pyx":898
 *         for x in xs:
 *             cur = cur.add_input(x)
 *             states.append(cur)             # <<<<<<<<<<<<<<
 *         return states
 * 
 */
    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_states, ((PyObject *)__pyx_v_cur)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 898, __pyx_L1_error)

    /* "pycnn.pyx":896
 *         states = []
 *         cur = self
 *         for x in xs:             # <<<<<<<<<<<<<<
 *             cur = cur.add_input(x)
 *             states.append(cur)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":899
 *             cur = cur.add_input(x)
 *             states.append(cur)
 *         return states             # <<<<<<<<<<<<<<
 * 
 *     cpdef transduce(self, xs):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_states);
  __pyx_r = __pyx_v_states;
  goto __pyx_L0;

  /* "pycnn.pyx":877
 *         return RNNState(self.builder, state_idx, self, res)
 * 
 *     def add_inputs(self, xs):             # <<<<<<<<<<<<<<
 *         """
 *         returns the list of states obtained by adding the given inputs
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.RNNState.add_inputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_states);
  __Pyx_XDECREF((PyObject *)__pyx_v_cur);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":901
 *         return states
 * 
 *     cpdef transduce(self, xs):             # <<<<<<<<<<<<<<
 *         """
 *         returns the list of output Expressions obtained by adding the given inputs
 */

static PyObject *__pyx_pw_5pycnn_8RNNState_7transduce(PyObject *__pyx_v_self, PyObject *__pyx_v_xs); /*proto*/
static PyObject *__pyx_f_5pycnn_8RNNState_transduce(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, PyObject *__pyx_v_xs, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_exprs = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_res = 0;
  struct __pyx_obj_5pycnn_Expression *__pyx_v_x = 0;
  int __pyx_v_state_idx;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  __Pyx_RefNannySetupContext("transduce", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transduce); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 901, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_8RNNState_7transduce)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_xs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 901, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 901, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(__pyx_v_xs);
        __Pyx_GIVEREF(__pyx_v_xs);
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_v_xs);
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 901, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":918
 *              transduce is much more memory efficient than add_inputs.
 *         """
 *         cdef list exprs = []             # <<<<<<<<<<<<<<
 *         cdef Expression res
 *         cdef Expression x
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 918, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_exprs = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":921
 *         cdef Expression res
 *         cdef Expression x
 *         cdef int state_idx = self.state_idx             # <<<<<<<<<<<<<<
 *         for x in xs:
 *             res = self.builder.add_input_to_prev(CRNNPointer(state_idx), x)
 */
  __pyx_t_6 = __pyx_v_self->state_idx;
  __pyx_v_state_idx = __pyx_t_6;

  /* "pycnn.pyx":922
 *         cdef Expression x
 *         cdef int state_idx = self.state_idx
 *         for x in xs:             # <<<<<<<<<<<<<<
 *             res = self.builder.add_input_to_prev(CRNNPointer(state_idx), x)
 *             state_idx = <int>self.builder.thisptr.state()
 */
  if (likely(PyList_CheckExact(__pyx_v_xs)) || PyTuple_CheckExact(__pyx_v_xs)) {
    __pyx_t_1 = __pyx_v_xs; __Pyx_INCREF(__pyx_t_1); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_xs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 922, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 922, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 922, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 922, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 922, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_8(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 922, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 922, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_x, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "pycnn.pyx":923
 *         cdef int state_idx = self.state_idx
 *         for x in xs:
 *             res = self.builder.add_input_to_prev(CRNNPointer(state_idx), x)             # <<<<<<<<<<<<<<
 *             state_idx = <int>self.builder.thisptr.state()
 *             exprs.append(res)
 */
    __pyx_t_2 = ((PyObject *)((struct __pyx_vtabstruct_5pycnn_RNNBuilder *)__pyx_v_self->builder->__pyx_vtab)->add_input_to_prev(__pyx_v_self->builder, cnn::RNNPointer(__pyx_v_state_idx), __pyx_v_x)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 923, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_res, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "pycnn.pyx":924
 *         for x in xs:
 *             res = self.builder.add_input_to_prev(CRNNPointer(state_idx), x)
 *             state_idx = <int>self.builder.thisptr.state()             # <<<<<<<<<<<<<<
 *             exprs.append(res)
 *         return exprs
 */
    __pyx_v_state_idx = ((int)__pyx_v_self->builder->thisptr->state());

    /* "pycnn.pyx":925
 *             res = self.builder.add_input_to_prev(CRNNPointer(state_idx), x)
 *             state_idx = <int>self.builder.thisptr.state()
 *             exprs.append(res)             # <<<<<<<<<<<<<<
 *         return exprs
 * 
 */
    __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_exprs, ((PyObject *)__pyx_v_res)); if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 925, __pyx_L1_error)

    /* "pycnn.pyx":922
 *         cdef Expression x
 *         cdef int state_idx = self.state_idx
 *         for x in xs:             # <<<<<<<<<<<<<<
 *             res = self.builder.add_input_to_prev(CRNNPointer(state_idx), x)
 *             state_idx = <int>self.builder.thisptr.state()
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":926
 *             state_idx = <int>self.builder.thisptr.state()
 *             exprs.append(res)
 *         return exprs             # <<<<<<<<<<<<<<
 * 
 *     #cpdef int state(self): return self.state_idx
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_exprs);
  __pyx_r = __pyx_v_exprs;
  goto __pyx_L0;

  /* "pycnn.pyx":901
 *         return states
 * 
 *     cpdef transduce(self, xs):             # <<<<<<<<<<<<<<
 *         """
 *         returns the list of output Expressions obtained by adding the given inputs
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.RNNState.transduce", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_exprs);
  __Pyx_XDECREF((PyObject *)__pyx_v_res);
  __Pyx_XDECREF((PyObject *)__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_8RNNState_7transduce(PyObject *__pyx_v_self, PyObject *__pyx_v_xs); /*proto*/
static char __pyx_doc_5pycnn_8RNNState_6transduce[] = "\n        returns the list of output Expressions obtained by adding the given inputs\n        to the current state, one by one.\n        \n        see also add_inputs(xs)\n\n        .transduce(xs) is different from .add_inputs(xs) in the following way:\n\n            .add_inputs(xs) returns a list of RNNState. RNNState objects can be\n             queried in various ways. In particular, they allow access to the previous\n             state, as well as to the state-vectors (h() and s() )\n\n            .transduce(xs) returns a list of Expression. These are just the output\n             expressions. For many cases, this suffices. \n             transduce is much more memory efficient than add_inputs. \n        ";
static PyObject *__pyx_pw_5pycnn_8RNNState_7transduce(PyObject *__pyx_v_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transduce (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_8RNNState_6transduce(((struct __pyx_obj_5pycnn_RNNState *)__pyx_v_self), ((PyObject *)__pyx_v_xs));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_8RNNState_6transduce(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("transduce", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_8RNNState_transduce(__pyx_v_self, __pyx_v_xs, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 901, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.RNNState.transduce", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":930
 *     #cpdef int state(self): return self.state_idx
 * 
 *     cpdef Expression output(self): return self._out             # <<<<<<<<<<<<<<
 * 
 *     cpdef tuple h(self):
 */

static PyObject *__pyx_pw_5pycnn_8RNNState_9output(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static struct __pyx_obj_5pycnn_Expression *__pyx_f_5pycnn_8RNNState_output(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_Expression *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("output", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_output); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_8RNNState_9output)) {
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 930, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 930, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 930, __pyx_L1_error)
      __pyx_r = ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_out));
  __pyx_r = __pyx_v_self->_out;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.RNNState.output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_8RNNState_9output(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_8RNNState_9output(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("output (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_8RNNState_8output(((struct __pyx_obj_5pycnn_RNNState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_8RNNState_8output(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("output", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_8RNNState_output(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 930, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.RNNState.output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":932
 *     cpdef Expression output(self): return self._out
 * 
 *     cpdef tuple h(self):             # <<<<<<<<<<<<<<
 *         """
 *         tuple of expressions representing the output of each hidden layer
 */

static PyObject *__pyx_pw_5pycnn_8RNNState_11h(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_8RNNState_h(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("h", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_h); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 932, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_8RNNState_11h)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 932, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 932, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!(likely(PyTuple_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 932, __pyx_L1_error)
      __pyx_r = ((PyObject*)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":938
 *         the actual output of the network is at h()[-1].
 *         """
 *         return tuple(self.builder.get_h(CRNNPointer(self.state_idx)))             # <<<<<<<<<<<<<<
 * 
 *     cpdef tuple s(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_RNNBuilder *)__pyx_v_self->builder->__pyx_vtab)->get_h(__pyx_v_self->builder, cnn::RNNPointer(__pyx_v_self->state_idx)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PySequence_Tuple(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":932
 *     cpdef Expression output(self): return self._out
 * 
 *     cpdef tuple h(self):             # <<<<<<<<<<<<<<
 *         """
 *         tuple of expressions representing the output of each hidden layer
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.RNNState.h", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_8RNNState_11h(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_5pycnn_8RNNState_10h[] = "\n        tuple of expressions representing the output of each hidden layer\n        of the current step.\n        the actual output of the network is at h()[-1].\n        ";
static PyObject *__pyx_pw_5pycnn_8RNNState_11h(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("h (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_8RNNState_10h(((struct __pyx_obj_5pycnn_RNNState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_8RNNState_10h(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("h", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_8RNNState_h(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.RNNState.h", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":940
 *         return tuple(self.builder.get_h(CRNNPointer(self.state_idx)))
 * 
 *     cpdef tuple s(self):             # <<<<<<<<<<<<<<
 *         """
 *         tuple of expressions representing the hidden state of the current
 */

static PyObject *__pyx_pw_5pycnn_8RNNState_13s(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_8RNNState_s(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("s", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_s); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 940, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_8RNNState_13s)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 940, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 940, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!(likely(PyTuple_CheckExact(__pyx_t_2))||((__pyx_t_2) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_2)->tp_name), 0))) __PYX_ERR(0, 940, __pyx_L1_error)
      __pyx_r = ((PyObject*)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":949
 *                   followed by the series returned by h().
 *         """
 *         return tuple(self.builder.get_s(CRNNPointer(self.state_idx)))             # <<<<<<<<<<<<<<
 * 
 *     cpdef RNNState prev(self): return self._prev
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_5pycnn_RNNBuilder *)__pyx_v_self->builder->__pyx_vtab)->get_s(__pyx_v_self->builder, cnn::RNNPointer(__pyx_v_self->state_idx)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 949, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PySequence_Tuple(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 949, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":940
 *         return tuple(self.builder.get_h(CRNNPointer(self.state_idx)))
 * 
 *     cpdef tuple s(self):             # <<<<<<<<<<<<<<
 *         """
 *         tuple of expressions representing the hidden state of the current
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.RNNState.s", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_8RNNState_13s(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_5pycnn_8RNNState_12s[] = "\n        tuple of expressions representing the hidden state of the current\n        step.\n\n        For SimpleRNN, s() is the same as h()\n        For LSTM, s() is a series of of memory vectors, followed the series\n                  followed by the series returned by h().\n        ";
static PyObject *__pyx_pw_5pycnn_8RNNState_13s(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("s (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_8RNNState_12s(((struct __pyx_obj_5pycnn_RNNState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_8RNNState_12s(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("s", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_8RNNState_s(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.RNNState.s", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":951
 *         return tuple(self.builder.get_s(CRNNPointer(self.state_idx)))
 * 
 *     cpdef RNNState prev(self): return self._prev             # <<<<<<<<<<<<<<
 * 
 *     def b(self): return self.builder
 */

static PyObject *__pyx_pw_5pycnn_8RNNState_15prev(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static struct __pyx_obj_5pycnn_RNNState *__pyx_f_5pycnn_8RNNState_prev(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self, int __pyx_skip_dispatch) {
  struct __pyx_obj_5pycnn_RNNState *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("prev", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_prev); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 951, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_8RNNState_15prev)) {
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 951, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 951, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5pycnn_RNNState))))) __PYX_ERR(0, 951, __pyx_L1_error)
      __pyx_r = ((struct __pyx_obj_5pycnn_RNNState *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_prev));
  __pyx_r = __pyx_v_self->_prev;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.RNNState.prev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_8RNNState_15prev(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_8RNNState_15prev(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prev (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_8RNNState_14prev(((struct __pyx_obj_5pycnn_RNNState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_8RNNState_14prev(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("prev", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_8RNNState_prev(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 951, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.RNNState.prev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":953
 *     cpdef RNNState prev(self): return self._prev
 * 
 *     def b(self): return self.builder             # <<<<<<<<<<<<<<
 *     #}}}
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_8RNNState_17b(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_8RNNState_17b(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("b (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_8RNNState_16b(((struct __pyx_obj_5pycnn_RNNState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_8RNNState_16b(struct __pyx_obj_5pycnn_RNNState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("b", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->builder));
  __pyx_r = ((PyObject *)__pyx_v_self->builder);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":960
 *     cdef list states
 *     cdef StackedRNNState prev
 *     def __init__(self, list states, StackedRNNState prev=None):             # <<<<<<<<<<<<<<
 *         self.states = states
 *         self.prev = prev
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_15StackedRNNState_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_15StackedRNNState_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_states = 0;
  struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_prev = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_states,&__pyx_n_s_prev,0};
    PyObject* values[2] = {0,0};
    values[1] = (PyObject *)((struct __pyx_obj_5pycnn_StackedRNNState *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_states)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prev);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 960, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_states = ((PyObject*)values[0]);
    __pyx_v_prev = ((struct __pyx_obj_5pycnn_StackedRNNState *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 960, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.StackedRNNState.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_states), (&PyList_Type), 1, "states", 1))) __PYX_ERR(0, 960, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prev), __pyx_ptype_5pycnn_StackedRNNState, 1, "prev", 0))) __PYX_ERR(0, 960, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_15StackedRNNState___init__(((struct __pyx_obj_5pycnn_StackedRNNState *)__pyx_v_self), __pyx_v_states, __pyx_v_prev);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_15StackedRNNState___init__(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self, PyObject *__pyx_v_states, struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_prev) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "pycnn.pyx":961
 *     cdef StackedRNNState prev
 *     def __init__(self, list states, StackedRNNState prev=None):
 *         self.states = states             # <<<<<<<<<<<<<<
 *         self.prev = prev
 * 
 */
  __Pyx_INCREF(__pyx_v_states);
  __Pyx_GIVEREF(__pyx_v_states);
  __Pyx_GOTREF(__pyx_v_self->states);
  __Pyx_DECREF(__pyx_v_self->states);
  __pyx_v_self->states = __pyx_v_states;

  /* "pycnn.pyx":962
 *     def __init__(self, list states, StackedRNNState prev=None):
 *         self.states = states
 *         self.prev = prev             # <<<<<<<<<<<<<<
 * 
 *     cpdef StackedRNNState add_input(self, Expression x):
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_prev, ((PyObject *)__pyx_v_prev)) < 0) __PYX_ERR(0, 962, __pyx_L1_error)

  /* "pycnn.pyx":960
 *     cdef list states
 *     cdef StackedRNNState prev
 *     def __init__(self, list states, StackedRNNState prev=None):             # <<<<<<<<<<<<<<
 *         self.states = states
 *         self.prev = prev
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pycnn.StackedRNNState.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":964
 *         self.prev = prev
 * 
 *     cpdef StackedRNNState add_input(self, Expression x):             # <<<<<<<<<<<<<<
 *         cdef list next_states
 *         next_states = []
 */

static PyObject *__pyx_pw_5pycnn_15StackedRNNState_3add_input(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static struct __pyx_obj_5pycnn_StackedRNNState *__pyx_f_5pycnn_15StackedRNNState_add_input(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_next_states = 0;
  PyObject *__pyx_v_s = NULL;
  struct __pyx_obj_5pycnn_StackedRNNState *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("add_input", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_x);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_add_input); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_15StackedRNNState_3add_input)) {
      __Pyx_XDECREF(((PyObject *)__pyx_r));
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (!__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_x)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 964, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 964, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
        __Pyx_INCREF(((PyObject *)__pyx_v_x));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_x));
        PyTuple_SET_ITEM(__pyx_t_5, 0+1, ((PyObject *)__pyx_v_x));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 964, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5pycnn_StackedRNNState))))) __PYX_ERR(0, 964, __pyx_L1_error)
      __pyx_r = ((struct __pyx_obj_5pycnn_StackedRNNState *)__pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":966
 *     cpdef StackedRNNState add_input(self, Expression x):
 *         cdef list next_states
 *         next_states = []             # <<<<<<<<<<<<<<
 *         for s in self.states:
 *             next_states.append(s.add_input(x))
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 966, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_next_states = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":967
 *         cdef list next_states
 *         next_states = []
 *         for s in self.states:             # <<<<<<<<<<<<<<
 *             next_states.append(s.add_input(x))
 *             x = next_states[-1].output()
 */
  if (unlikely(__pyx_v_self->states == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 967, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->states; __Pyx_INCREF(__pyx_t_1); __pyx_t_6 = 0;
  for (;;) {
    if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 967, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 967, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_s, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "pycnn.pyx":968
 *         next_states = []
 *         for s in self.states:
 *             next_states.append(s.add_input(x))             # <<<<<<<<<<<<<<
 *             x = next_states[-1].output()
 *         return StackedRNNState(next_states, self)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_add_input); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_x)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
      __Pyx_INCREF(((PyObject *)__pyx_v_x));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_x));
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_x));
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_next_states, __pyx_t_2); if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 968, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "pycnn.pyx":969
 *         for s in self.states:
 *             next_states.append(s.add_input(x))
 *             x = next_states[-1].output()             # <<<<<<<<<<<<<<
 *         return StackedRNNState(next_states, self)
 * 
 */
    __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_next_states, -1L, long, 1, __Pyx_PyInt_From_long, 1, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_output); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (__pyx_t_3) {
      __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 969, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 969, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 969, __pyx_L1_error)
    __Pyx_DECREF_SET(__pyx_v_x, ((struct __pyx_obj_5pycnn_Expression *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "pycnn.pyx":967
 *         cdef list next_states
 *         next_states = []
 *         for s in self.states:             # <<<<<<<<<<<<<<
 *             next_states.append(s.add_input(x))
 *             x = next_states[-1].output()
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":970
 *             next_states.append(s.add_input(x))
 *             x = next_states[-1].output()
 *         return StackedRNNState(next_states, self)             # <<<<<<<<<<<<<<
 * 
 *     def output(self): return self.states[-1].output()
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_next_states);
  __Pyx_GIVEREF(__pyx_v_next_states);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_next_states);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_StackedRNNState), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 970, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = ((struct __pyx_obj_5pycnn_StackedRNNState *)__pyx_t_2);
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pycnn.pyx":964
 *         self.prev = prev
 * 
 *     cpdef StackedRNNState add_input(self, Expression x):             # <<<<<<<<<<<<<<
 *         cdef list next_states
 *         next_states = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("pycnn.StackedRNNState.add_input", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_next_states);
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XDECREF((PyObject *)__pyx_v_x);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_3add_input(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_3add_input(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_input (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_x), __pyx_ptype_5pycnn_Expression, 1, "x", 0))) __PYX_ERR(0, 964, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_15StackedRNNState_2add_input(((struct __pyx_obj_5pycnn_StackedRNNState *)__pyx_v_self), ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_15StackedRNNState_2add_input(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self, struct __pyx_obj_5pycnn_Expression *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("add_input", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_5pycnn_15StackedRNNState_add_input(__pyx_v_self, __pyx_v_x, 1)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 964, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.StackedRNNState.add_input", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":972
 *         return StackedRNNState(next_states, self)
 * 
 *     def output(self): return self.states[-1].output()             # <<<<<<<<<<<<<<
 * 
 *     def prev(self): return self.prev
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_5output(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_5output(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("output (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_15StackedRNNState_4output(((struct __pyx_obj_5pycnn_StackedRNNState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_15StackedRNNState_4output(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("output", 0);
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_self->states == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 972, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_GetItemInt_List(__pyx_v_self->states, -1L, long, 1, __Pyx_PyInt_From_long, 1, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_output); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 972, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 972, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pycnn.StackedRNNState.output", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":974
 *     def output(self): return self.states[-1].output()
 * 
 *     def prev(self): return self.prev             # <<<<<<<<<<<<<<
 *     def h(self): return [s.h() for s in self.states]
 *     def s(self): return [s.s() for s in self.states]
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_7prev(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_7prev(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prev (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_15StackedRNNState_6prev(((struct __pyx_obj_5pycnn_StackedRNNState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_15StackedRNNState_6prev(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("prev", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_prev); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 974, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.StackedRNNState.prev", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":975
 * 
 *     def prev(self): return self.prev
 *     def h(self): return [s.h() for s in self.states]             # <<<<<<<<<<<<<<
 *     def s(self): return [s.s() for s in self.states]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_9h(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_9h(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("h (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_15StackedRNNState_8h(((struct __pyx_obj_5pycnn_StackedRNNState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_15StackedRNNState_8h(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self) {
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("h", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 975, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_v_self->states == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 975, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_v_self->states; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
  for (;;) {
    if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 975, __pyx_L1_error)
    #else
    __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 975, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_s, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_h); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 975, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (__pyx_t_6) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 975, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 975, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 975, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.StackedRNNState.h", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":976
 *     def prev(self): return self.prev
 *     def h(self): return [s.h() for s in self.states]
 *     def s(self): return [s.s() for s in self.states]             # <<<<<<<<<<<<<<
 * 
 *     def add_inputs(self, xs):
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_11s(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_11s(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("s (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_15StackedRNNState_10s(((struct __pyx_obj_5pycnn_StackedRNNState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_15StackedRNNState_10s(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self) {
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("s", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 976, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_v_self->states == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 976, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_v_self->states; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
  for (;;) {
    if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 976, __pyx_L1_error)
    #else
    __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 976, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_s, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_s); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 976, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    if (__pyx_t_6) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 976, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    } else {
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 976, __pyx_L1_error)
    }
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 976, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.StackedRNNState.s", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":978
 *     def s(self): return [s.s() for s in self.states]
 * 
 *     def add_inputs(self, xs):             # <<<<<<<<<<<<<<
 *         """
 *         returns the list of states obtained by adding the given inputs
 */

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_13add_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_xs); /*proto*/
static char __pyx_doc_5pycnn_15StackedRNNState_12add_inputs[] = "\n        returns the list of states obtained by adding the given inputs\n        to the current state, one by one.\n        ";
static PyObject *__pyx_pw_5pycnn_15StackedRNNState_13add_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_inputs (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_15StackedRNNState_12add_inputs(((struct __pyx_obj_5pycnn_StackedRNNState *)__pyx_v_self), ((PyObject *)__pyx_v_xs));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_15StackedRNNState_12add_inputs(struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_self, PyObject *__pyx_v_xs) {
  PyObject *__pyx_v_states = NULL;
  struct __pyx_obj_5pycnn_StackedRNNState *__pyx_v_cur = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("add_inputs", 0);

  /* "pycnn.pyx":983
 *         to the current state, one by one.
 *         """
 *         states = []             # <<<<<<<<<<<<<<
 *         cur = self
 *         for x in xs:
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 983, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_states = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":984
 *         """
 *         states = []
 *         cur = self             # <<<<<<<<<<<<<<
 *         for x in xs:
 *             cur = cur.add_input(x)
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_v_cur = __pyx_v_self;

  /* "pycnn.pyx":985
 *         states = []
 *         cur = self
 *         for x in xs:             # <<<<<<<<<<<<<<
 *             cur = cur.add_input(x)
 *             states.append(cur)
 */
  if (likely(PyList_CheckExact(__pyx_v_xs)) || PyTuple_CheckExact(__pyx_v_xs)) {
    __pyx_t_1 = __pyx_v_xs; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_xs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 985, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 985, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 985, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 985, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 985, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 985, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 985, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "pycnn.pyx":986
 *         cur = self
 *         for x in xs:
 *             cur = cur.add_input(x)             # <<<<<<<<<<<<<<
 *             states.append(cur)
 *         return states
 */
    if (!(likely(((__pyx_v_x) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_x, __pyx_ptype_5pycnn_Expression))))) __PYX_ERR(0, 986, __pyx_L1_error)
    __pyx_t_4 = ((PyObject *)((struct __pyx_vtabstruct_5pycnn_StackedRNNState *)__pyx_v_cur->__pyx_vtab)->add_input(__pyx_v_cur, ((struct __pyx_obj_5pycnn_Expression *)__pyx_v_x), 0)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 986, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF_SET(__pyx_v_cur, ((struct __pyx_obj_5pycnn_StackedRNNState *)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "pycnn.pyx":987
 *         for x in xs:
 *             cur = cur.add_input(x)
 *             states.append(cur)             # <<<<<<<<<<<<<<
 *         return states
 * #}}}
 */
    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_states, ((PyObject *)__pyx_v_cur)); if (unlikely(__pyx_t_5 == -1)) __PYX_ERR(0, 987, __pyx_L1_error)

    /* "pycnn.pyx":985
 *         states = []
 *         cur = self
 *         for x in xs:             # <<<<<<<<<<<<<<
 *             cur = cur.add_input(x)
 *             states.append(cur)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":988
 *             cur = cur.add_input(x)
 *             states.append(cur)
 *         return states             # <<<<<<<<<<<<<<
 * #}}}
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_states);
  __pyx_r = __pyx_v_states;
  goto __pyx_L0;

  /* "pycnn.pyx":978
 *     def s(self): return [s.s() for s in self.states]
 * 
 *     def add_inputs(self, xs):             # <<<<<<<<<<<<<<
 *         """
 *         returns the list of states obtained by adding the given inputs
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.StackedRNNState.add_inputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_states);
  __Pyx_XDECREF((PyObject *)__pyx_v_cur);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":996
 * cdef class SimpleSGDTrainer:
 *     cdef CSimpleSGDTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CSimpleSGDTrainer(m.thisptr, lam, e0)
 *     def __dealloc__(self):
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_16SimpleSGDTrainer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_16SimpleSGDTrainer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Model *__pyx_v_m = 0;
  float __pyx_v_lam;
  float __pyx_v_e0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_m,&__pyx_n_s_lam,&__pyx_n_s_e0,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_lam);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e0);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 996, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_m = ((struct __pyx_obj_5pycnn_Model *)values[0]);
    if (values[1]) {
      __pyx_v_lam = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_lam == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 996, __pyx_L3_error)
    } else {
      __pyx_v_lam = ((float)1e-6);
    }
    if (values[2]) {
      __pyx_v_e0 = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_e0 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 996, __pyx_L3_error)
    } else {
      __pyx_v_e0 = ((float)0.1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 996, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.SimpleSGDTrainer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_m), __pyx_ptype_5pycnn_Model, 1, "m", 0))) __PYX_ERR(0, 996, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_16SimpleSGDTrainer___cinit__(((struct __pyx_obj_5pycnn_SimpleSGDTrainer *)__pyx_v_self), __pyx_v_m, __pyx_v_lam, __pyx_v_e0);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_16SimpleSGDTrainer___cinit__(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, struct __pyx_obj_5pycnn_Model *__pyx_v_m, float __pyx_v_lam, float __pyx_v_e0) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":997
 *     cdef CSimpleSGDTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1):
 *         self.thisptr = new CSimpleSGDTrainer(m.thisptr, lam, e0)             # <<<<<<<<<<<<<<
 *     def __dealloc__(self):
 *         del self.thisptr
 */
  __pyx_v_self->thisptr = new cnn::SimpleSGDTrainer(__pyx_v_m->thisptr, __pyx_v_lam, __pyx_v_e0);

  /* "pycnn.pyx":996
 * cdef class SimpleSGDTrainer:
 *     cdef CSimpleSGDTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CSimpleSGDTrainer(m.thisptr, lam, e0)
 *     def __dealloc__(self):
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":998
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1):
 *         self.thisptr = new CSimpleSGDTrainer(m.thisptr, lam, e0)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 */

/* Python wrapper */
static void __pyx_pw_5pycnn_16SimpleSGDTrainer_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5pycnn_16SimpleSGDTrainer_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5pycnn_16SimpleSGDTrainer_2__dealloc__(((struct __pyx_obj_5pycnn_SimpleSGDTrainer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5pycnn_16SimpleSGDTrainer_2__dealloc__(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pycnn.pyx":999
 *         self.thisptr = new CSimpleSGDTrainer(m.thisptr, lam, e0)
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 */
  delete __pyx_v_self->thisptr;

  /* "pycnn.pyx":998
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1):
 *         self.thisptr = new CSimpleSGDTrainer(m.thisptr, lam, e0)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pycnn.pyx":1000
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */

static PyObject *__pyx_pw_5pycnn_16SimpleSGDTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_16SimpleSGDTrainer_update(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update *__pyx_optional_args) {
  float __pyx_v_s = ((float)1.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("update", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_s = __pyx_optional_args->s;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1000, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16SimpleSGDTrainer_5update)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_s); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1000, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1000, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1000, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1000, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1001
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)             # <<<<<<<<<<<<<<
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 */
  __pyx_v_self->thisptr->update(__pyx_v_s);

  /* "pycnn.pyx":1000
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.SimpleSGDTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16SimpleSGDTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_16SimpleSGDTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_s;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_s,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_s);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update") < 0)) __PYX_ERR(0, 1000, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_s = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_s == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1000, __pyx_L3_error)
    } else {
      __pyx_v_s = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1000, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.SimpleSGDTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_16SimpleSGDTrainer_4update(((struct __pyx_obj_5pycnn_SimpleSGDTrainer *)__pyx_v_self), __pyx_v_s);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16SimpleSGDTrainer_4update(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, float __pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update __pyx_t_2;
  __Pyx_RefNannySetupContext("update", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.s = __pyx_v_s;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_SimpleSGDTrainer->update(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.SimpleSGDTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1002
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */

static PyObject *__pyx_pw_5pycnn_16SimpleSGDTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_16SimpleSGDTrainer_update_epoch(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update_epoch *__pyx_optional_args) {
  float __pyx_v_r = ((float)1.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("update_epoch", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_r = __pyx_optional_args->r;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_epoch); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1002, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16SimpleSGDTrainer_7update_epoch)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_r); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1002, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1002, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1002, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1002, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1003
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)             # <<<<<<<<<<<<<<
 *     cpdef status(self):
 *         self.thisptr.status()
 */
  __pyx_v_self->thisptr->update_epoch(__pyx_v_r);

  /* "pycnn.pyx":1002
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.SimpleSGDTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16SimpleSGDTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_16SimpleSGDTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_r;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_epoch (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_r,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_epoch") < 0)) __PYX_ERR(0, 1002, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_r = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_r == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1002, __pyx_L3_error)
    } else {
      __pyx_v_r = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_epoch", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1002, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.SimpleSGDTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_16SimpleSGDTrainer_6update_epoch(((struct __pyx_obj_5pycnn_SimpleSGDTrainer *)__pyx_v_self), __pyx_v_r);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16SimpleSGDTrainer_6update_epoch(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, float __pyx_v_r) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update_epoch __pyx_t_2;
  __Pyx_RefNannySetupContext("update_epoch", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.r = __pyx_v_r;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_SimpleSGDTrainer->update_epoch(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.SimpleSGDTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1004
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.status()
 * 
 */

static PyObject *__pyx_pw_5pycnn_16SimpleSGDTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_16SimpleSGDTrainer_status(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("status", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1004, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_16SimpleSGDTrainer_9status)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1004, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1004, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1005
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 *         self.thisptr.status()             # <<<<<<<<<<<<<<
 * 
 * cdef class MomentumSGDTrainer:
 */
  __pyx_v_self->thisptr->status();

  /* "pycnn.pyx":1004
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.status()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.SimpleSGDTrainer.status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_16SimpleSGDTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_16SimpleSGDTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("status (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_16SimpleSGDTrainer_8status(((struct __pyx_obj_5pycnn_SimpleSGDTrainer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_16SimpleSGDTrainer_8status(struct __pyx_obj_5pycnn_SimpleSGDTrainer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("status", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_16SimpleSGDTrainer_status(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1004, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.SimpleSGDTrainer.status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1009
 * cdef class MomentumSGDTrainer:
 *     cdef CMomentumSGDTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.01, float mom = 0.9):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CMomentumSGDTrainer(m.thisptr, lam, e0, mom)
 *     def __dealloc__(self):
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_18MomentumSGDTrainer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_18MomentumSGDTrainer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Model *__pyx_v_m = 0;
  float __pyx_v_lam;
  float __pyx_v_e0;
  float __pyx_v_mom;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_m,&__pyx_n_s_lam,&__pyx_n_s_e0,&__pyx_n_s_mom,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_lam);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e0);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mom);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1009, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_m = ((struct __pyx_obj_5pycnn_Model *)values[0]);
    if (values[1]) {
      __pyx_v_lam = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_lam == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1009, __pyx_L3_error)
    } else {
      __pyx_v_lam = ((float)1e-6);
    }
    if (values[2]) {
      __pyx_v_e0 = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_e0 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1009, __pyx_L3_error)
    } else {
      __pyx_v_e0 = ((float)0.01);
    }
    if (values[3]) {
      __pyx_v_mom = __pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_mom == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1009, __pyx_L3_error)
    } else {
      __pyx_v_mom = ((float)0.9);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1009, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.MomentumSGDTrainer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_m), __pyx_ptype_5pycnn_Model, 1, "m", 0))) __PYX_ERR(0, 1009, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_18MomentumSGDTrainer___cinit__(((struct __pyx_obj_5pycnn_MomentumSGDTrainer *)__pyx_v_self), __pyx_v_m, __pyx_v_lam, __pyx_v_e0, __pyx_v_mom);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_18MomentumSGDTrainer___cinit__(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, struct __pyx_obj_5pycnn_Model *__pyx_v_m, float __pyx_v_lam, float __pyx_v_e0, float __pyx_v_mom) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":1010
 *     cdef CMomentumSGDTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.01, float mom = 0.9):
 *         self.thisptr = new CMomentumSGDTrainer(m.thisptr, lam, e0, mom)             # <<<<<<<<<<<<<<
 *     def __dealloc__(self):
 *         del self.thisptr
 */
  __pyx_v_self->thisptr = new cnn::MomentumSGDTrainer(__pyx_v_m->thisptr, __pyx_v_lam, __pyx_v_e0, __pyx_v_mom);

  /* "pycnn.pyx":1009
 * cdef class MomentumSGDTrainer:
 *     cdef CMomentumSGDTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.01, float mom = 0.9):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CMomentumSGDTrainer(m.thisptr, lam, e0, mom)
 *     def __dealloc__(self):
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1011
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.01, float mom = 0.9):
 *         self.thisptr = new CMomentumSGDTrainer(m.thisptr, lam, e0, mom)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 */

/* Python wrapper */
static void __pyx_pw_5pycnn_18MomentumSGDTrainer_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5pycnn_18MomentumSGDTrainer_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5pycnn_18MomentumSGDTrainer_2__dealloc__(((struct __pyx_obj_5pycnn_MomentumSGDTrainer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5pycnn_18MomentumSGDTrainer_2__dealloc__(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pycnn.pyx":1012
 *         self.thisptr = new CMomentumSGDTrainer(m.thisptr, lam, e0, mom)
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 */
  delete __pyx_v_self->thisptr;

  /* "pycnn.pyx":1011
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.01, float mom = 0.9):
 *         self.thisptr = new CMomentumSGDTrainer(m.thisptr, lam, e0, mom)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pycnn.pyx":1013
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */

static PyObject *__pyx_pw_5pycnn_18MomentumSGDTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_18MomentumSGDTrainer_update(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update *__pyx_optional_args) {
  float __pyx_v_s = ((float)1.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("update", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_s = __pyx_optional_args->s;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1013, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_18MomentumSGDTrainer_5update)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_s); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1013, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1013, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1013, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1013, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1014
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)             # <<<<<<<<<<<<<<
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 */
  __pyx_v_self->thisptr->update(__pyx_v_s);

  /* "pycnn.pyx":1013
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.MomentumSGDTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_18MomentumSGDTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_18MomentumSGDTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_s;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_s,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_s);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update") < 0)) __PYX_ERR(0, 1013, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_s = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_s == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1013, __pyx_L3_error)
    } else {
      __pyx_v_s = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1013, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.MomentumSGDTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_18MomentumSGDTrainer_4update(((struct __pyx_obj_5pycnn_MomentumSGDTrainer *)__pyx_v_self), __pyx_v_s);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_18MomentumSGDTrainer_4update(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, float __pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update __pyx_t_2;
  __Pyx_RefNannySetupContext("update", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.s = __pyx_v_s;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_MomentumSGDTrainer->update(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1013, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.MomentumSGDTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1015
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */

static PyObject *__pyx_pw_5pycnn_18MomentumSGDTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_18MomentumSGDTrainer_update_epoch(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update_epoch *__pyx_optional_args) {
  float __pyx_v_r = ((float)1.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("update_epoch", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_r = __pyx_optional_args->r;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_epoch); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1015, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_18MomentumSGDTrainer_7update_epoch)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_r); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1015, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1015, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1015, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1015, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1016
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)             # <<<<<<<<<<<<<<
 *     cpdef status(self):
 *         self.thisptr.status()
 */
  __pyx_v_self->thisptr->update_epoch(__pyx_v_r);

  /* "pycnn.pyx":1015
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.MomentumSGDTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_18MomentumSGDTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_18MomentumSGDTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_r;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_epoch (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_r,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_epoch") < 0)) __PYX_ERR(0, 1015, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_r = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_r == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1015, __pyx_L3_error)
    } else {
      __pyx_v_r = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_epoch", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1015, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.MomentumSGDTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_18MomentumSGDTrainer_6update_epoch(((struct __pyx_obj_5pycnn_MomentumSGDTrainer *)__pyx_v_self), __pyx_v_r);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_18MomentumSGDTrainer_6update_epoch(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, float __pyx_v_r) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update_epoch __pyx_t_2;
  __Pyx_RefNannySetupContext("update_epoch", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.r = __pyx_v_r;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_MomentumSGDTrainer->update_epoch(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.MomentumSGDTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1017
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.status()
 * 
 */

static PyObject *__pyx_pw_5pycnn_18MomentumSGDTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_18MomentumSGDTrainer_status(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("status", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1017, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_18MomentumSGDTrainer_9status)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1017, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1017, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1018
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 *         self.thisptr.status()             # <<<<<<<<<<<<<<
 * 
 * cdef class AdagradTrainer:
 */
  __pyx_v_self->thisptr->status();

  /* "pycnn.pyx":1017
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.status()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.MomentumSGDTrainer.status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_18MomentumSGDTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_18MomentumSGDTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("status (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_18MomentumSGDTrainer_8status(((struct __pyx_obj_5pycnn_MomentumSGDTrainer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_18MomentumSGDTrainer_8status(struct __pyx_obj_5pycnn_MomentumSGDTrainer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("status", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_18MomentumSGDTrainer_status(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.MomentumSGDTrainer.status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1022
 * cdef class AdagradTrainer:
 *     cdef CAdagradTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1, float eps = 1e-20):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CAdagradTrainer(m.thisptr, lam, e0, eps)
 *     def __dealloc__(self):
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_14AdagradTrainer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_14AdagradTrainer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Model *__pyx_v_m = 0;
  float __pyx_v_lam;
  float __pyx_v_e0;
  float __pyx_v_eps;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_m,&__pyx_n_s_lam,&__pyx_n_s_e0,&__pyx_n_s_eps,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_lam);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_e0);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_eps);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1022, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_m = ((struct __pyx_obj_5pycnn_Model *)values[0]);
    if (values[1]) {
      __pyx_v_lam = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_lam == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1022, __pyx_L3_error)
    } else {
      __pyx_v_lam = ((float)1e-6);
    }
    if (values[2]) {
      __pyx_v_e0 = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_e0 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1022, __pyx_L3_error)
    } else {
      __pyx_v_e0 = ((float)0.1);
    }
    if (values[3]) {
      __pyx_v_eps = __pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_eps == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1022, __pyx_L3_error)
    } else {
      __pyx_v_eps = ((float)1e-20);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1022, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.AdagradTrainer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_m), __pyx_ptype_5pycnn_Model, 1, "m", 0))) __PYX_ERR(0, 1022, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_14AdagradTrainer___cinit__(((struct __pyx_obj_5pycnn_AdagradTrainer *)__pyx_v_self), __pyx_v_m, __pyx_v_lam, __pyx_v_e0, __pyx_v_eps);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_14AdagradTrainer___cinit__(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, struct __pyx_obj_5pycnn_Model *__pyx_v_m, float __pyx_v_lam, float __pyx_v_e0, float __pyx_v_eps) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":1023
 *     cdef CAdagradTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1, float eps = 1e-20):
 *         self.thisptr = new CAdagradTrainer(m.thisptr, lam, e0, eps)             # <<<<<<<<<<<<<<
 *     def __dealloc__(self):
 *         del self.thisptr
 */
  __pyx_v_self->thisptr = new cnn::AdagradTrainer(__pyx_v_m->thisptr, __pyx_v_lam, __pyx_v_e0, __pyx_v_eps);

  /* "pycnn.pyx":1022
 * cdef class AdagradTrainer:
 *     cdef CAdagradTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1, float eps = 1e-20):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CAdagradTrainer(m.thisptr, lam, e0, eps)
 *     def __dealloc__(self):
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1024
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1, float eps = 1e-20):
 *         self.thisptr = new CAdagradTrainer(m.thisptr, lam, e0, eps)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 */

/* Python wrapper */
static void __pyx_pw_5pycnn_14AdagradTrainer_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5pycnn_14AdagradTrainer_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5pycnn_14AdagradTrainer_2__dealloc__(((struct __pyx_obj_5pycnn_AdagradTrainer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5pycnn_14AdagradTrainer_2__dealloc__(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pycnn.pyx":1025
 *         self.thisptr = new CAdagradTrainer(m.thisptr, lam, e0, eps)
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 */
  delete __pyx_v_self->thisptr;

  /* "pycnn.pyx":1024
 *     def __cinit__(self, Model m, float lam = 1e-6, float e0 = 0.1, float eps = 1e-20):
 *         self.thisptr = new CAdagradTrainer(m.thisptr, lam, e0, eps)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pycnn.pyx":1026
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */

static PyObject *__pyx_pw_5pycnn_14AdagradTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_14AdagradTrainer_update(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_14AdagradTrainer_update *__pyx_optional_args) {
  float __pyx_v_s = ((float)1.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("update", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_s = __pyx_optional_args->s;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_14AdagradTrainer_5update)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_s); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1026, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1026, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1026, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1026, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1027
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)             # <<<<<<<<<<<<<<
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 */
  __pyx_v_self->thisptr->update(__pyx_v_s);

  /* "pycnn.pyx":1026
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.AdagradTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_14AdagradTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_14AdagradTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_s;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_s,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_s);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update") < 0)) __PYX_ERR(0, 1026, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_s = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_s == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1026, __pyx_L3_error)
    } else {
      __pyx_v_s = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1026, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.AdagradTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_14AdagradTrainer_4update(((struct __pyx_obj_5pycnn_AdagradTrainer *)__pyx_v_self), __pyx_v_s);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_14AdagradTrainer_4update(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, float __pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_14AdagradTrainer_update __pyx_t_2;
  __Pyx_RefNannySetupContext("update", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.s = __pyx_v_s;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_AdagradTrainer->update(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.AdagradTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1028
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */

static PyObject *__pyx_pw_5pycnn_14AdagradTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_14AdagradTrainer_update_epoch(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_14AdagradTrainer_update_epoch *__pyx_optional_args) {
  float __pyx_v_r = ((float)1.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("update_epoch", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_r = __pyx_optional_args->r;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_epoch); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1028, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_14AdagradTrainer_7update_epoch)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_r); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1028, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1028, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1028, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1028, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1029
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)             # <<<<<<<<<<<<<<
 *     cpdef status(self):
 *         self.thisptr.status()
 */
  __pyx_v_self->thisptr->update_epoch(__pyx_v_r);

  /* "pycnn.pyx":1028
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.AdagradTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_14AdagradTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_14AdagradTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_r;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_epoch (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_r,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_epoch") < 0)) __PYX_ERR(0, 1028, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_r = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_r == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1028, __pyx_L3_error)
    } else {
      __pyx_v_r = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_epoch", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1028, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.AdagradTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_14AdagradTrainer_6update_epoch(((struct __pyx_obj_5pycnn_AdagradTrainer *)__pyx_v_self), __pyx_v_r);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_14AdagradTrainer_6update_epoch(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, float __pyx_v_r) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_14AdagradTrainer_update_epoch __pyx_t_2;
  __Pyx_RefNannySetupContext("update_epoch", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.r = __pyx_v_r;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_AdagradTrainer->update_epoch(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.AdagradTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1030
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.status()
 * 
 */

static PyObject *__pyx_pw_5pycnn_14AdagradTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_14AdagradTrainer_status(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("status", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1030, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_14AdagradTrainer_9status)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1030, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1030, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1031
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 *         self.thisptr.status()             # <<<<<<<<<<<<<<
 * 
 * cdef class AdadeltaTrainer:
 */
  __pyx_v_self->thisptr->status();

  /* "pycnn.pyx":1030
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.status()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.AdagradTrainer.status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_14AdagradTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_14AdagradTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("status (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_14AdagradTrainer_8status(((struct __pyx_obj_5pycnn_AdagradTrainer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_14AdagradTrainer_8status(struct __pyx_obj_5pycnn_AdagradTrainer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("status", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_14AdagradTrainer_status(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1030, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.AdagradTrainer.status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1035
 * cdef class AdadeltaTrainer:
 *     cdef CAdadeltaTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float eps = 1e-6, float rho = 0.95):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CAdadeltaTrainer(m.thisptr, lam, eps, rho)
 *     def __dealloc__(self):
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_15AdadeltaTrainer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_15AdadeltaTrainer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Model *__pyx_v_m = 0;
  float __pyx_v_lam;
  float __pyx_v_eps;
  float __pyx_v_rho;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_m,&__pyx_n_s_lam,&__pyx_n_s_eps,&__pyx_n_s_rho,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_lam);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_eps);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rho);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1035, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_m = ((struct __pyx_obj_5pycnn_Model *)values[0]);
    if (values[1]) {
      __pyx_v_lam = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_lam == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1035, __pyx_L3_error)
    } else {
      __pyx_v_lam = ((float)1e-6);
    }
    if (values[2]) {
      __pyx_v_eps = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_eps == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1035, __pyx_L3_error)
    } else {
      __pyx_v_eps = ((float)1e-6);
    }
    if (values[3]) {
      __pyx_v_rho = __pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_rho == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1035, __pyx_L3_error)
    } else {
      __pyx_v_rho = ((float)0.95);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1035, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.AdadeltaTrainer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_m), __pyx_ptype_5pycnn_Model, 1, "m", 0))) __PYX_ERR(0, 1035, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_15AdadeltaTrainer___cinit__(((struct __pyx_obj_5pycnn_AdadeltaTrainer *)__pyx_v_self), __pyx_v_m, __pyx_v_lam, __pyx_v_eps, __pyx_v_rho);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_15AdadeltaTrainer___cinit__(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, struct __pyx_obj_5pycnn_Model *__pyx_v_m, float __pyx_v_lam, float __pyx_v_eps, float __pyx_v_rho) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":1036
 *     cdef CAdadeltaTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float eps = 1e-6, float rho = 0.95):
 *         self.thisptr = new CAdadeltaTrainer(m.thisptr, lam, eps, rho)             # <<<<<<<<<<<<<<
 *     def __dealloc__(self):
 *         del self.thisptr
 */
  __pyx_v_self->thisptr = new cnn::AdadeltaTrainer(__pyx_v_m->thisptr, __pyx_v_lam, __pyx_v_eps, __pyx_v_rho);

  /* "pycnn.pyx":1035
 * cdef class AdadeltaTrainer:
 *     cdef CAdadeltaTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float eps = 1e-6, float rho = 0.95):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CAdadeltaTrainer(m.thisptr, lam, eps, rho)
 *     def __dealloc__(self):
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1037
 *     def __cinit__(self, Model m, float lam = 1e-6, float eps = 1e-6, float rho = 0.95):
 *         self.thisptr = new CAdadeltaTrainer(m.thisptr, lam, eps, rho)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 */

/* Python wrapper */
static void __pyx_pw_5pycnn_15AdadeltaTrainer_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5pycnn_15AdadeltaTrainer_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5pycnn_15AdadeltaTrainer_2__dealloc__(((struct __pyx_obj_5pycnn_AdadeltaTrainer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5pycnn_15AdadeltaTrainer_2__dealloc__(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pycnn.pyx":1038
 *         self.thisptr = new CAdadeltaTrainer(m.thisptr, lam, eps, rho)
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 */
  delete __pyx_v_self->thisptr;

  /* "pycnn.pyx":1037
 *     def __cinit__(self, Model m, float lam = 1e-6, float eps = 1e-6, float rho = 0.95):
 *         self.thisptr = new CAdadeltaTrainer(m.thisptr, lam, eps, rho)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pycnn.pyx":1039
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */

static PyObject *__pyx_pw_5pycnn_15AdadeltaTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_15AdadeltaTrainer_update(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update *__pyx_optional_args) {
  float __pyx_v_s = ((float)1.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("update", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_s = __pyx_optional_args->s;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1039, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_15AdadeltaTrainer_5update)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_s); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1039, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1039, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1039, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1039, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1040
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)             # <<<<<<<<<<<<<<
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 */
  __pyx_v_self->thisptr->update(__pyx_v_s);

  /* "pycnn.pyx":1039
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.AdadeltaTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_15AdadeltaTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_15AdadeltaTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_s;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_s,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_s);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update") < 0)) __PYX_ERR(0, 1039, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_s = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_s == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1039, __pyx_L3_error)
    } else {
      __pyx_v_s = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1039, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.AdadeltaTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_15AdadeltaTrainer_4update(((struct __pyx_obj_5pycnn_AdadeltaTrainer *)__pyx_v_self), __pyx_v_s);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_15AdadeltaTrainer_4update(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, float __pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update __pyx_t_2;
  __Pyx_RefNannySetupContext("update", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.s = __pyx_v_s;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_AdadeltaTrainer->update(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.AdadeltaTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1041
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */

static PyObject *__pyx_pw_5pycnn_15AdadeltaTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_15AdadeltaTrainer_update_epoch(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update_epoch *__pyx_optional_args) {
  float __pyx_v_r = ((float)1.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("update_epoch", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_r = __pyx_optional_args->r;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_epoch); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1041, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_15AdadeltaTrainer_7update_epoch)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_r); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1041, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1041, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1041, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1041, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1042
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)             # <<<<<<<<<<<<<<
 *     cpdef status(self):
 *         self.thisptr.status()
 */
  __pyx_v_self->thisptr->update_epoch(__pyx_v_r);

  /* "pycnn.pyx":1041
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.AdadeltaTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_15AdadeltaTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_15AdadeltaTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_r;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_epoch (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_r,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_epoch") < 0)) __PYX_ERR(0, 1041, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_r = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_r == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1041, __pyx_L3_error)
    } else {
      __pyx_v_r = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_epoch", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1041, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.AdadeltaTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_15AdadeltaTrainer_6update_epoch(((struct __pyx_obj_5pycnn_AdadeltaTrainer *)__pyx_v_self), __pyx_v_r);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_15AdadeltaTrainer_6update_epoch(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, float __pyx_v_r) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update_epoch __pyx_t_2;
  __Pyx_RefNannySetupContext("update_epoch", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.r = __pyx_v_r;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_AdadeltaTrainer->update_epoch(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.AdadeltaTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1043
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.status()
 * 
 */

static PyObject *__pyx_pw_5pycnn_15AdadeltaTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_15AdadeltaTrainer_status(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("status", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_15AdadeltaTrainer_9status)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1043, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1043, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1044
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 *         self.thisptr.status()             # <<<<<<<<<<<<<<
 * 
 * cdef class AdamTrainer:
 */
  __pyx_v_self->thisptr->status();

  /* "pycnn.pyx":1043
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.status()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.AdadeltaTrainer.status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_15AdadeltaTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_15AdadeltaTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("status (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_15AdadeltaTrainer_8status(((struct __pyx_obj_5pycnn_AdadeltaTrainer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_15AdadeltaTrainer_8status(struct __pyx_obj_5pycnn_AdadeltaTrainer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("status", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_15AdadeltaTrainer_status(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.AdadeltaTrainer.status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1048
 * cdef class AdamTrainer:
 *     cdef CAdamTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float alpha = 0.001, float beta_1 = 0.9, float beta_2 = 0.999, eps = 1e-8 ):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CAdamTrainer(m.thisptr, lam, alpha, beta_1, beta_2, eps)
 *     def __dealloc__(self):
 */

/* Python wrapper */
static int __pyx_pw_5pycnn_11AdamTrainer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_5pycnn_11AdamTrainer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_5pycnn_Model *__pyx_v_m = 0;
  float __pyx_v_lam;
  float __pyx_v_alpha;
  float __pyx_v_beta_1;
  float __pyx_v_beta_2;
  PyObject *__pyx_v_eps = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_m,&__pyx_n_s_lam,&__pyx_n_s_alpha,&__pyx_n_s_beta_1,&__pyx_n_s_beta_2,&__pyx_n_s_eps,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[5] = ((PyObject *)__pyx_float_1eneg_8);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_lam);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_beta_1);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_beta_2);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_eps);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1048, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_m = ((struct __pyx_obj_5pycnn_Model *)values[0]);
    if (values[1]) {
      __pyx_v_lam = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_lam == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1048, __pyx_L3_error)
    } else {
      __pyx_v_lam = ((float)1e-6);
    }
    if (values[2]) {
      __pyx_v_alpha = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_alpha == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1048, __pyx_L3_error)
    } else {
      __pyx_v_alpha = ((float)0.001);
    }
    if (values[3]) {
      __pyx_v_beta_1 = __pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_beta_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1048, __pyx_L3_error)
    } else {
      __pyx_v_beta_1 = ((float)0.9);
    }
    if (values[4]) {
      __pyx_v_beta_2 = __pyx_PyFloat_AsFloat(values[4]); if (unlikely((__pyx_v_beta_2 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1048, __pyx_L3_error)
    } else {
      __pyx_v_beta_2 = ((float)0.999);
    }
    __pyx_v_eps = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1048, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.AdamTrainer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_m), __pyx_ptype_5pycnn_Model, 1, "m", 0))) __PYX_ERR(0, 1048, __pyx_L1_error)
  __pyx_r = __pyx_pf_5pycnn_11AdamTrainer___cinit__(((struct __pyx_obj_5pycnn_AdamTrainer *)__pyx_v_self), __pyx_v_m, __pyx_v_lam, __pyx_v_alpha, __pyx_v_beta_1, __pyx_v_beta_2, __pyx_v_eps);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5pycnn_11AdamTrainer___cinit__(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, struct __pyx_obj_5pycnn_Model *__pyx_v_m, float __pyx_v_lam, float __pyx_v_alpha, float __pyx_v_beta_1, float __pyx_v_beta_2, PyObject *__pyx_v_eps) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  float __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "pycnn.pyx":1049
 *     cdef CAdamTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float alpha = 0.001, float beta_1 = 0.9, float beta_2 = 0.999, eps = 1e-8 ):
 *         self.thisptr = new CAdamTrainer(m.thisptr, lam, alpha, beta_1, beta_2, eps)             # <<<<<<<<<<<<<<
 *     def __dealloc__(self):
 *         del self.thisptr
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_eps); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1049, __pyx_L1_error)
  __pyx_v_self->thisptr = new cnn::AdamTrainer(__pyx_v_m->thisptr, __pyx_v_lam, __pyx_v_alpha, __pyx_v_beta_1, __pyx_v_beta_2, __pyx_t_1);

  /* "pycnn.pyx":1048
 * cdef class AdamTrainer:
 *     cdef CAdamTrainer *thisptr
 *     def __cinit__(self, Model m, float lam = 1e-6, float alpha = 0.001, float beta_1 = 0.9, float beta_2 = 0.999, eps = 1e-8 ):             # <<<<<<<<<<<<<<
 *         self.thisptr = new CAdamTrainer(m.thisptr, lam, alpha, beta_1, beta_2, eps)
 *     def __dealloc__(self):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pycnn.AdamTrainer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1050
 *     def __cinit__(self, Model m, float lam = 1e-6, float alpha = 0.001, float beta_1 = 0.9, float beta_2 = 0.999, eps = 1e-8 ):
 *         self.thisptr = new CAdamTrainer(m.thisptr, lam, alpha, beta_1, beta_2, eps)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 */

/* Python wrapper */
static void __pyx_pw_5pycnn_11AdamTrainer_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_5pycnn_11AdamTrainer_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_5pycnn_11AdamTrainer_2__dealloc__(((struct __pyx_obj_5pycnn_AdamTrainer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5pycnn_11AdamTrainer_2__dealloc__(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "pycnn.pyx":1051
 *         self.thisptr = new CAdamTrainer(m.thisptr, lam, alpha, beta_1, beta_2, eps)
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 */
  delete __pyx_v_self->thisptr;

  /* "pycnn.pyx":1050
 *     def __cinit__(self, Model m, float lam = 1e-6, float alpha = 0.001, float beta_1 = 0.9, float beta_2 = 0.999, eps = 1e-8 ):
 *         self.thisptr = new CAdamTrainer(m.thisptr, lam, alpha, beta_1, beta_2, eps)
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "pycnn.pyx":1052
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */

static PyObject *__pyx_pw_5pycnn_11AdamTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_11AdamTrainer_update(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_11AdamTrainer_update *__pyx_optional_args) {
  float __pyx_v_s = ((float)1.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("update", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_s = __pyx_optional_args->s;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1052, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_11AdamTrainer_5update)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_s); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1052, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1052, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1052, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1052, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1053
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)             # <<<<<<<<<<<<<<
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 */
  __pyx_v_self->thisptr->update(__pyx_v_s);

  /* "pycnn.pyx":1052
 *     def __dealloc__(self):
 *         del self.thisptr
 *     cpdef update(self, float s=1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.AdamTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_11AdamTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_11AdamTrainer_5update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_s;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_s,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_s);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update") < 0)) __PYX_ERR(0, 1052, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_s = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_s == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1052, __pyx_L3_error)
    } else {
      __pyx_v_s = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1052, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.AdamTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_11AdamTrainer_4update(((struct __pyx_obj_5pycnn_AdamTrainer *)__pyx_v_self), __pyx_v_s);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_11AdamTrainer_4update(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, float __pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_11AdamTrainer_update __pyx_t_2;
  __Pyx_RefNannySetupContext("update", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.s = __pyx_v_s;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_AdamTrainer->update(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.AdamTrainer.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1054
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */

static PyObject *__pyx_pw_5pycnn_11AdamTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_5pycnn_11AdamTrainer_update_epoch(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_11AdamTrainer_update_epoch *__pyx_optional_args) {
  float __pyx_v_r = ((float)1.0);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("update_epoch", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_r = __pyx_optional_args->r;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_epoch); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1054, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_11AdamTrainer_7update_epoch)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_r); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1054, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1054, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1054, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1054, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1055
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)             # <<<<<<<<<<<<<<
 *     cpdef status(self):
 *         self.thisptr.status()
 */
  __pyx_v_self->thisptr->update_epoch(__pyx_v_r);

  /* "pycnn.pyx":1054
 *     cpdef update(self, float s=1.0):
 *         self.thisptr.update(s)
 *     cpdef update_epoch(self, float r = 1.0):             # <<<<<<<<<<<<<<
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("pycnn.AdamTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_11AdamTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_5pycnn_11AdamTrainer_7update_epoch(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_r;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_epoch (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_r,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_epoch") < 0)) __PYX_ERR(0, 1054, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_r = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_r == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1054, __pyx_L3_error)
    } else {
      __pyx_v_r = ((float)1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_epoch", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1054, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("pycnn.AdamTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5pycnn_11AdamTrainer_6update_epoch(((struct __pyx_obj_5pycnn_AdamTrainer *)__pyx_v_self), __pyx_v_r);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_11AdamTrainer_6update_epoch(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, float __pyx_v_r) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_5pycnn_11AdamTrainer_update_epoch __pyx_t_2;
  __Pyx_RefNannySetupContext("update_epoch", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.r = __pyx_v_r;
  __pyx_t_1 = __pyx_vtabptr_5pycnn_AdamTrainer->update_epoch(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.AdamTrainer.update_epoch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pycnn.pyx":1056
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.status()
 * #}}}
 */

static PyObject *__pyx_pw_5pycnn_11AdamTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_5pycnn_11AdamTrainer_status(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("status", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1056, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_5pycnn_11AdamTrainer_9status)) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1056, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1056, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pycnn.pyx":1057
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):
 *         self.thisptr.status()             # <<<<<<<<<<<<<<
 * #}}}
 * 
 */
  __pyx_v_self->thisptr->status();

  /* "pycnn.pyx":1056
 *     cpdef update_epoch(self, float r = 1.0):
 *         self.thisptr.update_epoch(r)
 *     cpdef status(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.status()
 * #}}}
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pycnn.AdamTrainer.status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_5pycnn_11AdamTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_5pycnn_11AdamTrainer_9status(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("status (wrapper)", 0);
  __pyx_r = __pyx_pf_5pycnn_11AdamTrainer_8status(((struct __pyx_obj_5pycnn_AdamTrainer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5pycnn_11AdamTrainer_8status(struct __pyx_obj_5pycnn_AdamTrainer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("status", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_5pycnn_11AdamTrainer_status(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1056, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pycnn.AdamTrainer.status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.from_py":49
 * 
 * @cname("__pyx_convert_vector_from_py_unsigned_int")
 * cdef vector[X] __pyx_convert_vector_from_py_unsigned_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<unsigned int>  __pyx_convert_vector_from_py_unsigned_int(PyObject *__pyx_v_o) {
  std::vector<unsigned int>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<unsigned int>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_unsigned_int", 0);

  /* "vector.from_py":51
 * cdef vector[X] __pyx_convert_vector_from_py_unsigned_int(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 51, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 51, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 51, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 51, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 51, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 51, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":52
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(X_from_py(item))             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __Pyx_PyInt_As_unsigned_int(__pyx_v_item); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) __PYX_ERR(1, 52, __pyx_L1_error)
    __pyx_v_v.push_back(__pyx_t_5);

    /* "vector.from_py":51
 * cdef vector[X] __pyx_convert_vector_from_py_unsigned_int(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":53
 *     for item in o:
 *         v.push_back(X_from_py(item))
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":49
 * 
 * @cname("__pyx_convert_vector_from_py_unsigned_int")
 * cdef vector[X] __pyx_convert_vector_from_py_unsigned_int(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_unsigned_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static std::vector<float>  __pyx_convert_vector_from_py_float(PyObject *__pyx_v_o) {
  std::vector<float>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<float>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  float __pyx_t_5;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_float", 0);

  /* "vector.from_py":51
 * cdef vector[X] __pyx_convert_vector_from_py_float(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 51, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 51, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 51, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 51, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(1, 51, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 51, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 51, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":52
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(X_from_py(item))             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsFloat(__pyx_v_item); if (unlikely(__pyx_t_5 == -1.0 && PyErr_Occurred())) __PYX_ERR(1, 52, __pyx_L1_error)
    __pyx_v_v.push_back(__pyx_t_5);

    /* "vector.from_py":51
 * cdef vector[X] __pyx_convert_vector_from_py_float(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(X_from_py(item))
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":53
 *     for item in o:
 *         v.push_back(X_from_py(item))
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":49
 * 
 * @cname("__pyx_convert_vector_from_py_float")
 * cdef vector[X] __pyx_convert_vector_from_py_float(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_float", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__in_string", 0);

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == NULL)) __PYX_ERR(1, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length
 *     cdef char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_float")
 * cdef object __pyx_convert_vector_to_py_float(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

static PyObject *__pyx_convert_vector_to_py_float(const std::vector<float>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_float", 0);

  /* "vector.to_py":68
 * @cname("__pyx_convert_vector_to_py_float")
 * cdef object __pyx_convert_vector_to_py_float(vector[X]& v):
 *     return [X_to_py(v[i]) for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;
    __pyx_t_4 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) __PYX_ERR(1, 68, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_float")
 * cdef object __pyx_convert_vector_to_py_float(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_float", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_unsigned_int(const std::vector<unsigned int>  &__pyx_v_v) {
  size_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_unsigned_int", 0);

  /* "vector.to_py":68
 * @cname("__pyx_convert_vector_to_py_unsigned_int")
 * cdef object __pyx_convert_vector_to_py_unsigned_int(vector[X]& v):
 *     return [X_to_py(v[i]) for i in range(v.size())]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_v.size();
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;
    __pyx_t_4 = __Pyx_PyInt_From_unsigned_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) __PYX_ERR(1, 68, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_unsigned_int")
 * cdef object __pyx_convert_vector_to_py_unsigned_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_unsigned_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_5pycnn_Parameters __pyx_vtable_5pycnn_Parameters;

static PyObject *__pyx_tp_new_5pycnn_Parameters(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5pycnn_Parameters *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_Parameters *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_Parameters;
  if (unlikely(__pyx_pw_5pycnn_10Parameters_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_Parameters(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_5pycnn_Parameters[] = {
  {"shape", (PyCFunction)__pyx_pw_5pycnn_10Parameters_3shape, METH_NOARGS, 0},
  {"as_array", (PyCFunction)__pyx_pw_5pycnn_10Parameters_5as_array, METH_NOARGS, __pyx_doc_5pycnn_10Parameters_4as_array},
  {"load_array", (PyCFunction)__pyx_pw_5pycnn_10Parameters_7load_array, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_Parameters = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.Parameters", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_Parameters), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_Parameters, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_Parameters, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_Parameters, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_LookupParameters __pyx_vtable_5pycnn_LookupParameters;

static PyObject *__pyx_tp_new_5pycnn_LookupParameters(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5pycnn_LookupParameters *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_LookupParameters *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_LookupParameters;
  if (unlikely(__pyx_pw_5pycnn_16LookupParameters_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_LookupParameters(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_5pycnn_LookupParameters(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_5pycnn_LookupParameters[] = {
  {"init_from_array", (PyCFunction)__pyx_pw_5pycnn_16LookupParameters_3init_from_array, METH_O, 0},
  {"shape", (PyCFunction)__pyx_pw_5pycnn_16LookupParameters_5shape, METH_NOARGS, 0},
  {"batch", (PyCFunction)__pyx_pw_5pycnn_16LookupParameters_9batch, METH_O, 0},
  {"init_row", (PyCFunction)__pyx_pw_5pycnn_16LookupParameters_11init_row, METH_VARARGS|METH_KEYWORDS, 0},
  {"as_array", (PyCFunction)__pyx_pw_5pycnn_16LookupParameters_13as_array, METH_NOARGS, __pyx_doc_5pycnn_16LookupParameters_12as_array},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_LookupParameters = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_5pycnn_LookupParameters, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LookupParameters = {
  0, /*mp_length*/
  __pyx_pw_5pycnn_16LookupParameters_7__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_5pycnn_LookupParameters = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.LookupParameters", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_LookupParameters), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_LookupParameters, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_LookupParameters, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LookupParameters, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_LookupParameters, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_LookupParameters, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_5pycnn_Model(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5pycnn_Model *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_Model *)o);
  p->named_params = Py_None; Py_INCREF(Py_None);
  p->lookups = Py_None; Py_INCREF(Py_None);
  p->regular = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5pycnn_5Model_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_Model(PyObject *o) {
  struct __pyx_obj_5pycnn_Model *p = (struct __pyx_obj_5pycnn_Model *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_5pycnn_5Model_5__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->named_params);
  Py_CLEAR(p->lookups);
  Py_CLEAR(p->regular);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5pycnn_Model(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn_Model *p = (struct __pyx_obj_5pycnn_Model *)o;
  if (p->named_params) {
    e = (*v)(p->named_params, a); if (e) return e;
  }
  if (p->lookups) {
    e = (*v)(p->lookups, a); if (e) return e;
  }
  if (p->regular) {
    e = (*v)(p->regular, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn_Model(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn_Model *p = (struct __pyx_obj_5pycnn_Model *)o;
  tmp = ((PyObject*)p->named_params);
  p->named_params = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->lookups);
  p->lookups = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->regular);
  p->regular = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
static PyObject *__pyx_sq_item_5pycnn_Model(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static PyMethodDef __pyx_methods_5pycnn_Model[] = {
  {"add_parameters", (PyCFunction)__pyx_pw_5pycnn_5Model_7add_parameters, METH_VARARGS|METH_KEYWORDS, 0},
  {"add_lookup_parameters", (PyCFunction)__pyx_pw_5pycnn_5Model_9add_lookup_parameters, METH_VARARGS|METH_KEYWORDS, 0},
  {"save", (PyCFunction)__pyx_pw_5pycnn_5Model_15save, METH_O, 0},
  {"load", (PyCFunction)__pyx_pw_5pycnn_5Model_17load, METH_O, 0},
  {0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_Model = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_5pycnn_Model, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  __pyx_pw_5pycnn_5Model_13__contains__, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Model = {
  0, /*mp_length*/
  __pyx_pw_5pycnn_5Model_11__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_5pycnn_Model = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.Model", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_Model), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_Model, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Model, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Model, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn_Model, /*tp_traverse*/
  __pyx_tp_clear_5pycnn_Model, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_Model, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5pycnn_5Model_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_Model, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_UnsignedValue __pyx_vtable_5pycnn_UnsignedValue;

static PyObject *__pyx_tp_new_5pycnn_UnsignedValue(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_UnsignedValue *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_UnsignedValue *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_UnsignedValue;
  if (unlikely(__pyx_pw_5pycnn_13UnsignedValue_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_UnsignedValue(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_5pycnn_UnsignedValue[] = {
  {"set", (PyCFunction)__pyx_pw_5pycnn_13UnsignedValue_3set, METH_O, 0},
  {"get", (PyCFunction)__pyx_pw_5pycnn_13UnsignedValue_5get, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_UnsignedValue = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.UnsignedValue", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_UnsignedValue), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_UnsignedValue, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_UnsignedValue, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_UnsignedValue, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_FloatValue __pyx_vtable_5pycnn_FloatValue;

static PyObject *__pyx_tp_new_5pycnn_FloatValue(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_FloatValue *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_FloatValue *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_FloatValue;
  if (unlikely(__pyx_pw_5pycnn_10FloatValue_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_FloatValue(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_5pycnn_FloatValue[] = {
  {"set", (PyCFunction)__pyx_pw_5pycnn_10FloatValue_3set, METH_O, 0},
  {"get", (PyCFunction)__pyx_pw_5pycnn_10FloatValue_5get, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_FloatValue = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.FloatValue", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_FloatValue), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_FloatValue, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_FloatValue, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_FloatValue, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_UnsignedVectorValue __pyx_vtable_5pycnn_UnsignedVectorValue;

static PyObject *__pyx_tp_new_5pycnn_UnsignedVectorValue(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_UnsignedVectorValue *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_UnsignedVectorValue *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_UnsignedVectorValue;
  if (unlikely(__pyx_pw_5pycnn_19UnsignedVectorValue_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_UnsignedVectorValue(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_5pycnn_19UnsignedVectorValue_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_5pycnn_UnsignedVectorValue[] = {
  {"set", (PyCFunction)__pyx_pw_5pycnn_19UnsignedVectorValue_5set, METH_O, 0},
  {"get", (PyCFunction)__pyx_pw_5pycnn_19UnsignedVectorValue_7get, METH_NOARGS, 0},
  {"size", (PyCFunction)__pyx_pw_5pycnn_19UnsignedVectorValue_9size, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_UnsignedVectorValue = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.UnsignedVectorValue", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_UnsignedVectorValue), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_UnsignedVectorValue, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_UnsignedVectorValue, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_UnsignedVectorValue, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_FloatVectorValue __pyx_vtable_5pycnn_FloatVectorValue;

static PyObject *__pyx_tp_new_5pycnn_FloatVectorValue(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_FloatVectorValue *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_FloatVectorValue *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_FloatVectorValue;
  if (unlikely(__pyx_pw_5pycnn_16FloatVectorValue_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_FloatVectorValue(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_5pycnn_16FloatVectorValue_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_5pycnn_FloatVectorValue[] = {
  {"set", (PyCFunction)__pyx_pw_5pycnn_16FloatVectorValue_5set, METH_O, 0},
  {"get", (PyCFunction)__pyx_pw_5pycnn_16FloatVectorValue_7get, METH_NOARGS, 0},
  {"size", (PyCFunction)__pyx_pw_5pycnn_16FloatVectorValue_9size, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_FloatVectorValue = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.FloatVectorValue", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_FloatVectorValue), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_FloatVectorValue, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_FloatVectorValue, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_FloatVectorValue, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_ComputationGraph __pyx_vtable_5pycnn_ComputationGraph;

static PyObject *__pyx_tp_new_5pycnn_ComputationGraph(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_ComputationGraph *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_ComputationGraph *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_ComputationGraph;
  p->_inputs = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5pycnn_16ComputationGraph_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_ComputationGraph(PyObject *o) {
  struct __pyx_obj_5pycnn_ComputationGraph *p = (struct __pyx_obj_5pycnn_ComputationGraph *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_5pycnn_16ComputationGraph_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_inputs);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5pycnn_ComputationGraph(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn_ComputationGraph *p = (struct __pyx_obj_5pycnn_ComputationGraph *)o;
  if (p->_inputs) {
    e = (*v)(p->_inputs, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn_ComputationGraph(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn_ComputationGraph *p = (struct __pyx_obj_5pycnn_ComputationGraph *)o;
  tmp = ((PyObject*)p->_inputs);
  p->_inputs = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn_ComputationGraph[] = {
  {"renew", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_5renew, METH_NOARGS, 0},
  {"version", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_7version, METH_NOARGS, 0},
  {"parameters", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_9parameters, METH_O, 0},
  {"forward_scalar", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_11forward_scalar, METH_NOARGS, 0},
  {"inc_forward_scalar", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_13inc_forward_scalar, METH_NOARGS, 0},
  {"forward_vec", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_15forward_vec, METH_NOARGS, 0},
  {"inc_forward_vec", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_17inc_forward_vec, METH_NOARGS, 0},
  {"forward", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_19forward, METH_NOARGS, 0},
  {"inc_forward", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_21inc_forward, METH_NOARGS, 0},
  {"backward", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_23backward, METH_NOARGS, 0},
  {"PrintGraphviz", (PyCFunction)__pyx_pw_5pycnn_16ComputationGraph_25PrintGraphviz, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_ComputationGraph = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.ComputationGraph", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_ComputationGraph), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_ComputationGraph, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn_ComputationGraph, /*tp_traverse*/
  __pyx_tp_clear_5pycnn_ComputationGraph, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_ComputationGraph, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_ComputationGraph, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_Expression __pyx_vtable_5pycnn_Expression;

static PyObject *__pyx_tp_new_5pycnn_Expression(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5pycnn_Expression *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_Expression *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_Expression;
  if (unlikely(__pyx_pw_5pycnn_10Expression_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_Expression(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_5pycnn_Expression(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}
#if PY_MAJOR_VERSION >= 3
#error __getslice__, __setslice__, and __delslice__ not supported in Python 3.
#endif

static PyMethodDef __pyx_methods_5pycnn_Expression[] = {
  {"scalar_value", (PyCFunction)__pyx_pw_5pycnn_10Expression_11scalar_value, METH_VARARGS|METH_KEYWORDS, 0},
  {"vec_value", (PyCFunction)__pyx_pw_5pycnn_10Expression_13vec_value, METH_VARARGS|METH_KEYWORDS, 0},
  {"npvalue", (PyCFunction)__pyx_pw_5pycnn_10Expression_15npvalue, METH_VARARGS|METH_KEYWORDS, 0},
  {"value", (PyCFunction)__pyx_pw_5pycnn_10Expression_17value, METH_VARARGS|METH_KEYWORDS, 0},
  {"forward", (PyCFunction)__pyx_pw_5pycnn_10Expression_19forward, METH_VARARGS|METH_KEYWORDS, 0},
  {"backward", (PyCFunction)__pyx_pw_5pycnn_10Expression_21backward, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Expression = {
  __pyx_pw_5pycnn_10Expression_23__add__, /*nb_add*/
  __pyx_pw_5pycnn_10Expression_31__sub__, /*nb_subtract*/
  __pyx_pw_5pycnn_10Expression_25__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_27__div__, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  __pyx_pw_5pycnn_10Expression_29__neg__, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Expression = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_5pycnn_Expression, /*sq_item*/
  __pyx_pw_5pycnn_10Expression_9__getslice__, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Expression = {
  0, /*mp_length*/
  __pyx_pw_5pycnn_10Expression_7__getitem__, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyTypeObject __pyx_type_5pycnn_Expression = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.Expression", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_Expression), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_Expression, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_5pycnn_10Expression_3__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Expression, /*tp_as_number*/
  &__pyx_tp_as_sequence_Expression, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Expression, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_5pycnn_10Expression_5__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_Expression, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_Expression, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn__inputExpression __pyx_vtable_5pycnn__inputExpression;

static PyObject *__pyx_tp_new_5pycnn__inputExpression(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn__inputExpression *p;
  PyObject *o = __pyx_tp_new_5pycnn_Expression(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn__inputExpression *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5pycnn_Expression*)__pyx_vtabptr_5pycnn__inputExpression;
  p->val = ((struct __pyx_obj_5pycnn_FloatValue *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5pycnn_16_inputExpression_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn__inputExpression(PyObject *o) {
  struct __pyx_obj_5pycnn__inputExpression *p = (struct __pyx_obj_5pycnn__inputExpression *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->val);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_5pycnn_Expression(o);
}

static int __pyx_tp_traverse_5pycnn__inputExpression(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn__inputExpression *p = (struct __pyx_obj_5pycnn__inputExpression *)o;
  e = ((likely(__pyx_ptype_5pycnn_Expression)) ? ((__pyx_ptype_5pycnn_Expression->tp_traverse) ? __pyx_ptype_5pycnn_Expression->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_5pycnn__inputExpression)); if (e) return e;
  if (p->val) {
    e = (*v)(((PyObject*)p->val), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn__inputExpression(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn__inputExpression *p = (struct __pyx_obj_5pycnn__inputExpression *)o;
  if (likely(__pyx_ptype_5pycnn_Expression)) { if (__pyx_ptype_5pycnn_Expression->tp_clear) __pyx_ptype_5pycnn_Expression->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_5pycnn__inputExpression);
  tmp = ((PyObject*)p->val);
  p->val = ((struct __pyx_obj_5pycnn_FloatValue *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn__inputExpression[] = {
  {"set", (PyCFunction)__pyx_pw_5pycnn_16_inputExpression_3set, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn__inputExpression = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn._inputExpression", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn__inputExpression), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn__inputExpression, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_3__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_5__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn__inputExpression, /*tp_traverse*/
  __pyx_tp_clear_5pycnn__inputExpression, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn__inputExpression, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn__inputExpression, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn__vecInputExpression __pyx_vtable_5pycnn__vecInputExpression;

static PyObject *__pyx_tp_new_5pycnn__vecInputExpression(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn__vecInputExpression *p;
  PyObject *o = __pyx_tp_new_5pycnn_Expression(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn__vecInputExpression *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5pycnn_Expression*)__pyx_vtabptr_5pycnn__vecInputExpression;
  p->val = ((struct __pyx_obj_5pycnn_FloatVectorValue *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5pycnn_19_vecInputExpression_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn__vecInputExpression(PyObject *o) {
  struct __pyx_obj_5pycnn__vecInputExpression *p = (struct __pyx_obj_5pycnn__vecInputExpression *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->val);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_5pycnn_Expression(o);
}

static int __pyx_tp_traverse_5pycnn__vecInputExpression(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn__vecInputExpression *p = (struct __pyx_obj_5pycnn__vecInputExpression *)o;
  e = ((likely(__pyx_ptype_5pycnn_Expression)) ? ((__pyx_ptype_5pycnn_Expression->tp_traverse) ? __pyx_ptype_5pycnn_Expression->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_5pycnn__vecInputExpression)); if (e) return e;
  if (p->val) {
    e = (*v)(((PyObject*)p->val), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn__vecInputExpression(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn__vecInputExpression *p = (struct __pyx_obj_5pycnn__vecInputExpression *)o;
  if (likely(__pyx_ptype_5pycnn_Expression)) { if (__pyx_ptype_5pycnn_Expression->tp_clear) __pyx_ptype_5pycnn_Expression->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_5pycnn__vecInputExpression);
  tmp = ((PyObject*)p->val);
  p->val = ((struct __pyx_obj_5pycnn_FloatVectorValue *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn__vecInputExpression[] = {
  {"set", (PyCFunction)__pyx_pw_5pycnn_19_vecInputExpression_3set, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn__vecInputExpression = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn._vecInputExpression", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn__vecInputExpression), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn__vecInputExpression, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_3__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_5__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn__vecInputExpression, /*tp_traverse*/
  __pyx_tp_clear_5pycnn__vecInputExpression, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn__vecInputExpression, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn__vecInputExpression, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn__lookupExpression __pyx_vtable_5pycnn__lookupExpression;

static PyObject *__pyx_tp_new_5pycnn__lookupExpression(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn__lookupExpression *p;
  PyObject *o = __pyx_tp_new_5pycnn_Expression(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn__lookupExpression *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5pycnn_Expression*)__pyx_vtabptr_5pycnn__lookupExpression;
  p->val = ((struct __pyx_obj_5pycnn_UnsignedValue *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5pycnn_17_lookupExpression_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn__lookupExpression(PyObject *o) {
  struct __pyx_obj_5pycnn__lookupExpression *p = (struct __pyx_obj_5pycnn__lookupExpression *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->val);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_5pycnn_Expression(o);
}

static int __pyx_tp_traverse_5pycnn__lookupExpression(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn__lookupExpression *p = (struct __pyx_obj_5pycnn__lookupExpression *)o;
  e = ((likely(__pyx_ptype_5pycnn_Expression)) ? ((__pyx_ptype_5pycnn_Expression->tp_traverse) ? __pyx_ptype_5pycnn_Expression->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_5pycnn__lookupExpression)); if (e) return e;
  if (p->val) {
    e = (*v)(((PyObject*)p->val), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn__lookupExpression(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn__lookupExpression *p = (struct __pyx_obj_5pycnn__lookupExpression *)o;
  if (likely(__pyx_ptype_5pycnn_Expression)) { if (__pyx_ptype_5pycnn_Expression->tp_clear) __pyx_ptype_5pycnn_Expression->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_5pycnn__lookupExpression);
  tmp = ((PyObject*)p->val);
  p->val = ((struct __pyx_obj_5pycnn_UnsignedValue *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn__lookupExpression[] = {
  {"set", (PyCFunction)__pyx_pw_5pycnn_17_lookupExpression_3set, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn__lookupExpression = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn._lookupExpression", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn__lookupExpression), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn__lookupExpression, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_3__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_5__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn__lookupExpression, /*tp_traverse*/
  __pyx_tp_clear_5pycnn__lookupExpression, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn__lookupExpression, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn__lookupExpression, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn__lookupBatchExpression __pyx_vtable_5pycnn__lookupBatchExpression;

static PyObject *__pyx_tp_new_5pycnn__lookupBatchExpression(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn__lookupBatchExpression *p;
  PyObject *o = __pyx_tp_new_5pycnn_Expression(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn__lookupBatchExpression *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5pycnn_Expression*)__pyx_vtabptr_5pycnn__lookupBatchExpression;
  p->val = ((struct __pyx_obj_5pycnn_UnsignedVectorValue *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5pycnn_22_lookupBatchExpression_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn__lookupBatchExpression(PyObject *o) {
  struct __pyx_obj_5pycnn__lookupBatchExpression *p = (struct __pyx_obj_5pycnn__lookupBatchExpression *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->val);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_5pycnn_Expression(o);
}

static int __pyx_tp_traverse_5pycnn__lookupBatchExpression(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn__lookupBatchExpression *p = (struct __pyx_obj_5pycnn__lookupBatchExpression *)o;
  e = ((likely(__pyx_ptype_5pycnn_Expression)) ? ((__pyx_ptype_5pycnn_Expression->tp_traverse) ? __pyx_ptype_5pycnn_Expression->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_5pycnn__lookupBatchExpression)); if (e) return e;
  if (p->val) {
    e = (*v)(((PyObject*)p->val), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn__lookupBatchExpression(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn__lookupBatchExpression *p = (struct __pyx_obj_5pycnn__lookupBatchExpression *)o;
  if (likely(__pyx_ptype_5pycnn_Expression)) { if (__pyx_ptype_5pycnn_Expression->tp_clear) __pyx_ptype_5pycnn_Expression->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_5pycnn__lookupBatchExpression);
  tmp = ((PyObject*)p->val);
  p->val = ((struct __pyx_obj_5pycnn_UnsignedVectorValue *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn__lookupBatchExpression[] = {
  {"set", (PyCFunction)__pyx_pw_5pycnn_22_lookupBatchExpression_3set, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn__lookupBatchExpression = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn._lookupBatchExpression", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn__lookupBatchExpression), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn__lookupBatchExpression, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_3__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_5__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn__lookupBatchExpression, /*tp_traverse*/
  __pyx_tp_clear_5pycnn__lookupBatchExpression, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn__lookupBatchExpression, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn__lookupBatchExpression, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn__pickerExpression __pyx_vtable_5pycnn__pickerExpression;

static PyObject *__pyx_tp_new_5pycnn__pickerExpression(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn__pickerExpression *p;
  PyObject *o = __pyx_tp_new_5pycnn_Expression(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn__pickerExpression *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5pycnn_Expression*)__pyx_vtabptr_5pycnn__pickerExpression;
  p->val = ((struct __pyx_obj_5pycnn_UnsignedValue *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5pycnn_17_pickerExpression_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn__pickerExpression(PyObject *o) {
  struct __pyx_obj_5pycnn__pickerExpression *p = (struct __pyx_obj_5pycnn__pickerExpression *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->val);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_5pycnn_Expression(o);
}

static int __pyx_tp_traverse_5pycnn__pickerExpression(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn__pickerExpression *p = (struct __pyx_obj_5pycnn__pickerExpression *)o;
  e = ((likely(__pyx_ptype_5pycnn_Expression)) ? ((__pyx_ptype_5pycnn_Expression->tp_traverse) ? __pyx_ptype_5pycnn_Expression->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_5pycnn__pickerExpression)); if (e) return e;
  if (p->val) {
    e = (*v)(((PyObject*)p->val), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn__pickerExpression(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn__pickerExpression *p = (struct __pyx_obj_5pycnn__pickerExpression *)o;
  if (likely(__pyx_ptype_5pycnn_Expression)) { if (__pyx_ptype_5pycnn_Expression->tp_clear) __pyx_ptype_5pycnn_Expression->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_5pycnn__pickerExpression);
  tmp = ((PyObject*)p->val);
  p->val = ((struct __pyx_obj_5pycnn_UnsignedValue *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn__pickerExpression[] = {
  {"set_index", (PyCFunction)__pyx_pw_5pycnn_17_pickerExpression_3set_index, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn__pickerExpression = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn._pickerExpression", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn__pickerExpression), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn__pickerExpression, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_3__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_5__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn__pickerExpression, /*tp_traverse*/
  __pyx_tp_clear_5pycnn__pickerExpression, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn__pickerExpression, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn__pickerExpression, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn__pickerBatchExpression __pyx_vtable_5pycnn__pickerBatchExpression;

static PyObject *__pyx_tp_new_5pycnn__pickerBatchExpression(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn__pickerBatchExpression *p;
  PyObject *o = __pyx_tp_new_5pycnn_Expression(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn__pickerBatchExpression *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5pycnn_Expression*)__pyx_vtabptr_5pycnn__pickerBatchExpression;
  p->val = ((struct __pyx_obj_5pycnn_UnsignedVectorValue *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5pycnn_22_pickerBatchExpression_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn__pickerBatchExpression(PyObject *o) {
  struct __pyx_obj_5pycnn__pickerBatchExpression *p = (struct __pyx_obj_5pycnn__pickerBatchExpression *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->val);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_5pycnn_Expression(o);
}

static int __pyx_tp_traverse_5pycnn__pickerBatchExpression(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn__pickerBatchExpression *p = (struct __pyx_obj_5pycnn__pickerBatchExpression *)o;
  e = ((likely(__pyx_ptype_5pycnn_Expression)) ? ((__pyx_ptype_5pycnn_Expression->tp_traverse) ? __pyx_ptype_5pycnn_Expression->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_5pycnn__pickerBatchExpression)); if (e) return e;
  if (p->val) {
    e = (*v)(((PyObject*)p->val), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn__pickerBatchExpression(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn__pickerBatchExpression *p = (struct __pyx_obj_5pycnn__pickerBatchExpression *)o;
  if (likely(__pyx_ptype_5pycnn_Expression)) { if (__pyx_ptype_5pycnn_Expression->tp_clear) __pyx_ptype_5pycnn_Expression->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_5pycnn__pickerBatchExpression);
  tmp = ((PyObject*)p->val);
  p->val = ((struct __pyx_obj_5pycnn_UnsignedVectorValue *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn__pickerBatchExpression[] = {
  {"set_index", (PyCFunction)__pyx_pw_5pycnn_22_pickerBatchExpression_3set_index, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn__pickerBatchExpression = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn._pickerBatchExpression", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn__pickerBatchExpression), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn__pickerBatchExpression, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_3__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_5__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn__pickerBatchExpression, /*tp_traverse*/
  __pyx_tp_clear_5pycnn__pickerBatchExpression, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn__pickerBatchExpression, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn__pickerBatchExpression, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn__hingeExpression __pyx_vtable_5pycnn__hingeExpression;

static PyObject *__pyx_tp_new_5pycnn__hingeExpression(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn__hingeExpression *p;
  PyObject *o = __pyx_tp_new_5pycnn_Expression(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn__hingeExpression *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5pycnn_Expression*)__pyx_vtabptr_5pycnn__hingeExpression;
  p->val = ((struct __pyx_obj_5pycnn_UnsignedValue *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5pycnn_16_hingeExpression_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn__hingeExpression(PyObject *o) {
  struct __pyx_obj_5pycnn__hingeExpression *p = (struct __pyx_obj_5pycnn__hingeExpression *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->val);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_5pycnn_Expression(o);
}

static int __pyx_tp_traverse_5pycnn__hingeExpression(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn__hingeExpression *p = (struct __pyx_obj_5pycnn__hingeExpression *)o;
  e = ((likely(__pyx_ptype_5pycnn_Expression)) ? ((__pyx_ptype_5pycnn_Expression->tp_traverse) ? __pyx_ptype_5pycnn_Expression->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_5pycnn__hingeExpression)); if (e) return e;
  if (p->val) {
    e = (*v)(((PyObject*)p->val), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn__hingeExpression(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn__hingeExpression *p = (struct __pyx_obj_5pycnn__hingeExpression *)o;
  if (likely(__pyx_ptype_5pycnn_Expression)) { if (__pyx_ptype_5pycnn_Expression->tp_clear) __pyx_ptype_5pycnn_Expression->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_5pycnn__hingeExpression);
  tmp = ((PyObject*)p->val);
  p->val = ((struct __pyx_obj_5pycnn_UnsignedValue *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn__hingeExpression[] = {
  {"set_index", (PyCFunction)__pyx_pw_5pycnn_16_hingeExpression_3set_index, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn__hingeExpression = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn._hingeExpression", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn__hingeExpression), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn__hingeExpression, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_3__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_5pycnn_10Expression_5__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn__hingeExpression, /*tp_traverse*/
  __pyx_tp_clear_5pycnn__hingeExpression, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn__hingeExpression, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn__hingeExpression, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_RNNBuilder __pyx_vtable_5pycnn_RNNBuilder;

static PyObject *__pyx_tp_new_5pycnn_RNNBuilder(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5pycnn_RNNBuilder *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_RNNBuilder *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_RNNBuilder;
  p->_init_state = ((struct __pyx_obj_5pycnn_RNNState *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_5pycnn_RNNBuilder(PyObject *o) {
  struct __pyx_obj_5pycnn_RNNBuilder *p = (struct __pyx_obj_5pycnn_RNNBuilder *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_5pycnn_10RNNBuilder_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_init_state);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5pycnn_RNNBuilder(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn_RNNBuilder *p = (struct __pyx_obj_5pycnn_RNNBuilder *)o;
  if (p->_init_state) {
    e = (*v)(((PyObject*)p->_init_state), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn_RNNBuilder(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn_RNNBuilder *p = (struct __pyx_obj_5pycnn_RNNBuilder *)o;
  tmp = ((PyObject*)p->_init_state);
  p->_init_state = ((struct __pyx_obj_5pycnn_RNNState *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn_RNNBuilder[] = {
  {"__cinit_", (PyCFunction)__pyx_pw_5pycnn_10RNNBuilder_1__cinit_, METH_VARARGS|METH_KEYWORDS, 0},
  {"initial_state", (PyCFunction)__pyx_pw_5pycnn_10RNNBuilder_5initial_state, METH_VARARGS|METH_KEYWORDS, 0},
  {"initial_state_from_raw_vectors", (PyCFunction)__pyx_pw_5pycnn_10RNNBuilder_7initial_state_from_raw_vectors, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_RNNBuilder = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.RNNBuilder", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_RNNBuilder), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_RNNBuilder, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn_RNNBuilder, /*tp_traverse*/
  __pyx_tp_clear_5pycnn_RNNBuilder, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_RNNBuilder, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_RNNBuilder, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_SimpleRNNBuilder __pyx_vtable_5pycnn_SimpleRNNBuilder;

static PyObject *__pyx_tp_new_5pycnn_SimpleRNNBuilder(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_SimpleRNNBuilder *p;
  PyObject *o = __pyx_tp_new_5pycnn_RNNBuilder(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_SimpleRNNBuilder *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5pycnn_RNNBuilder*)__pyx_vtabptr_5pycnn_SimpleRNNBuilder;
  if (unlikely(__pyx_pw_5pycnn_16SimpleRNNBuilder_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_5pycnn_SimpleRNNBuilder[] = {
  {"whoami", (PyCFunction)__pyx_pw_5pycnn_16SimpleRNNBuilder_3whoami, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_SimpleRNNBuilder = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.SimpleRNNBuilder", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_SimpleRNNBuilder), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_RNNBuilder, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn_RNNBuilder, /*tp_traverse*/
  __pyx_tp_clear_5pycnn_RNNBuilder, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_SimpleRNNBuilder, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_SimpleRNNBuilder, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_LSTMBuilder __pyx_vtable_5pycnn_LSTMBuilder;

static PyObject *__pyx_tp_new_5pycnn_LSTMBuilder(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_LSTMBuilder *p;
  PyObject *o = __pyx_tp_new_5pycnn_RNNBuilder(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_LSTMBuilder *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_5pycnn_RNNBuilder*)__pyx_vtabptr_5pycnn_LSTMBuilder;
  if (unlikely(__pyx_pw_5pycnn_11LSTMBuilder_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_5pycnn_LSTMBuilder[] = {
  {"whoami", (PyCFunction)__pyx_pw_5pycnn_11LSTMBuilder_3whoami, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_LSTMBuilder = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.LSTMBuilder", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_LSTMBuilder), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_RNNBuilder, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn_RNNBuilder, /*tp_traverse*/
  __pyx_tp_clear_5pycnn_RNNBuilder, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_LSTMBuilder, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_LSTMBuilder, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_RNNState __pyx_vtable_5pycnn_RNNState;

static PyObject *__pyx_tp_new_5pycnn_RNNState(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_RNNState *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_RNNState *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_RNNState;
  p->builder = ((struct __pyx_obj_5pycnn_RNNBuilder *)Py_None); Py_INCREF(Py_None);
  p->_prev = ((struct __pyx_obj_5pycnn_RNNState *)Py_None); Py_INCREF(Py_None);
  p->_out = ((struct __pyx_obj_5pycnn_Expression *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_5pycnn_8RNNState_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_RNNState(PyObject *o) {
  struct __pyx_obj_5pycnn_RNNState *p = (struct __pyx_obj_5pycnn_RNNState *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->builder);
  Py_CLEAR(p->_prev);
  Py_CLEAR(p->_out);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5pycnn_RNNState(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn_RNNState *p = (struct __pyx_obj_5pycnn_RNNState *)o;
  if (p->builder) {
    e = (*v)(((PyObject*)p->builder), a); if (e) return e;
  }
  if (p->_prev) {
    e = (*v)(((PyObject*)p->_prev), a); if (e) return e;
  }
  if (p->_out) {
    e = (*v)(((PyObject*)p->_out), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn_RNNState(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn_RNNState *p = (struct __pyx_obj_5pycnn_RNNState *)o;
  tmp = ((PyObject*)p->builder);
  p->builder = ((struct __pyx_obj_5pycnn_RNNBuilder *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_prev);
  p->_prev = ((struct __pyx_obj_5pycnn_RNNState *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_out);
  p->_out = ((struct __pyx_obj_5pycnn_Expression *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn_RNNState[] = {
  {"add_input", (PyCFunction)__pyx_pw_5pycnn_8RNNState_3add_input, METH_O, 0},
  {"add_inputs", (PyCFunction)__pyx_pw_5pycnn_8RNNState_5add_inputs, METH_O, __pyx_doc_5pycnn_8RNNState_4add_inputs},
  {"transduce", (PyCFunction)__pyx_pw_5pycnn_8RNNState_7transduce, METH_O, __pyx_doc_5pycnn_8RNNState_6transduce},
  {"output", (PyCFunction)__pyx_pw_5pycnn_8RNNState_9output, METH_NOARGS, 0},
  {"h", (PyCFunction)__pyx_pw_5pycnn_8RNNState_11h, METH_NOARGS, __pyx_doc_5pycnn_8RNNState_10h},
  {"s", (PyCFunction)__pyx_pw_5pycnn_8RNNState_13s, METH_NOARGS, __pyx_doc_5pycnn_8RNNState_12s},
  {"prev", (PyCFunction)__pyx_pw_5pycnn_8RNNState_15prev, METH_NOARGS, 0},
  {"b", (PyCFunction)__pyx_pw_5pycnn_8RNNState_17b, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_RNNState = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.RNNState", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_RNNState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_RNNState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    This is the main class for working with RNNs / LSTMs / GRUs.\n    Request an RNNState initial_state() from a builder, and then progress from there.\n    ", /*tp_doc*/
  __pyx_tp_traverse_5pycnn_RNNState, /*tp_traverse*/
  __pyx_tp_clear_5pycnn_RNNState, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_RNNState, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_RNNState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_StackedRNNState __pyx_vtable_5pycnn_StackedRNNState;

static PyObject *__pyx_tp_new_5pycnn_StackedRNNState(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_5pycnn_StackedRNNState *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_StackedRNNState *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_StackedRNNState;
  p->states = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->prev = ((struct __pyx_obj_5pycnn_StackedRNNState *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_5pycnn_StackedRNNState(PyObject *o) {
  struct __pyx_obj_5pycnn_StackedRNNState *p = (struct __pyx_obj_5pycnn_StackedRNNState *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->states);
  Py_CLEAR(p->prev);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_5pycnn_StackedRNNState(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5pycnn_StackedRNNState *p = (struct __pyx_obj_5pycnn_StackedRNNState *)o;
  if (p->states) {
    e = (*v)(p->states, a); if (e) return e;
  }
  if (p->prev) {
    e = (*v)(((PyObject*)p->prev), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_5pycnn_StackedRNNState(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_5pycnn_StackedRNNState *p = (struct __pyx_obj_5pycnn_StackedRNNState *)o;
  tmp = ((PyObject*)p->states);
  p->states = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->prev);
  p->prev = ((struct __pyx_obj_5pycnn_StackedRNNState *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_5pycnn_StackedRNNState[] = {
  {"add_input", (PyCFunction)__pyx_pw_5pycnn_15StackedRNNState_3add_input, METH_O, 0},
  {"output", (PyCFunction)__pyx_pw_5pycnn_15StackedRNNState_5output, METH_NOARGS, 0},
  {"prev", (PyCFunction)__pyx_pw_5pycnn_15StackedRNNState_7prev, METH_NOARGS, 0},
  {"h", (PyCFunction)__pyx_pw_5pycnn_15StackedRNNState_9h, METH_NOARGS, 0},
  {"s", (PyCFunction)__pyx_pw_5pycnn_15StackedRNNState_11s, METH_NOARGS, 0},
  {"add_inputs", (PyCFunction)__pyx_pw_5pycnn_15StackedRNNState_13add_inputs, METH_O, __pyx_doc_5pycnn_15StackedRNNState_12add_inputs},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_StackedRNNState = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.StackedRNNState", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_StackedRNNState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_StackedRNNState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5pycnn_StackedRNNState, /*tp_traverse*/
  __pyx_tp_clear_5pycnn_StackedRNNState, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_StackedRNNState, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_5pycnn_15StackedRNNState_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_StackedRNNState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_SimpleSGDTrainer __pyx_vtable_5pycnn_SimpleSGDTrainer;

static PyObject *__pyx_tp_new_5pycnn_SimpleSGDTrainer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_SimpleSGDTrainer *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_SimpleSGDTrainer *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_SimpleSGDTrainer;
  if (unlikely(__pyx_pw_5pycnn_16SimpleSGDTrainer_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_SimpleSGDTrainer(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_5pycnn_16SimpleSGDTrainer_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_5pycnn_SimpleSGDTrainer[] = {
  {"update", (PyCFunction)__pyx_pw_5pycnn_16SimpleSGDTrainer_5update, METH_VARARGS|METH_KEYWORDS, 0},
  {"update_epoch", (PyCFunction)__pyx_pw_5pycnn_16SimpleSGDTrainer_7update_epoch, METH_VARARGS|METH_KEYWORDS, 0},
  {"status", (PyCFunction)__pyx_pw_5pycnn_16SimpleSGDTrainer_9status, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_SimpleSGDTrainer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.SimpleSGDTrainer", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_SimpleSGDTrainer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_SimpleSGDTrainer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_SimpleSGDTrainer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_SimpleSGDTrainer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_MomentumSGDTrainer __pyx_vtable_5pycnn_MomentumSGDTrainer;

static PyObject *__pyx_tp_new_5pycnn_MomentumSGDTrainer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_MomentumSGDTrainer *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_MomentumSGDTrainer *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_MomentumSGDTrainer;
  if (unlikely(__pyx_pw_5pycnn_18MomentumSGDTrainer_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_MomentumSGDTrainer(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_5pycnn_18MomentumSGDTrainer_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_5pycnn_MomentumSGDTrainer[] = {
  {"update", (PyCFunction)__pyx_pw_5pycnn_18MomentumSGDTrainer_5update, METH_VARARGS|METH_KEYWORDS, 0},
  {"update_epoch", (PyCFunction)__pyx_pw_5pycnn_18MomentumSGDTrainer_7update_epoch, METH_VARARGS|METH_KEYWORDS, 0},
  {"status", (PyCFunction)__pyx_pw_5pycnn_18MomentumSGDTrainer_9status, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_MomentumSGDTrainer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.MomentumSGDTrainer", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_MomentumSGDTrainer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_MomentumSGDTrainer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_MomentumSGDTrainer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_MomentumSGDTrainer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_AdagradTrainer __pyx_vtable_5pycnn_AdagradTrainer;

static PyObject *__pyx_tp_new_5pycnn_AdagradTrainer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_AdagradTrainer *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_AdagradTrainer *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_AdagradTrainer;
  if (unlikely(__pyx_pw_5pycnn_14AdagradTrainer_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_AdagradTrainer(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_5pycnn_14AdagradTrainer_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_5pycnn_AdagradTrainer[] = {
  {"update", (PyCFunction)__pyx_pw_5pycnn_14AdagradTrainer_5update, METH_VARARGS|METH_KEYWORDS, 0},
  {"update_epoch", (PyCFunction)__pyx_pw_5pycnn_14AdagradTrainer_7update_epoch, METH_VARARGS|METH_KEYWORDS, 0},
  {"status", (PyCFunction)__pyx_pw_5pycnn_14AdagradTrainer_9status, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_AdagradTrainer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.AdagradTrainer", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_AdagradTrainer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_AdagradTrainer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_AdagradTrainer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_AdagradTrainer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_AdadeltaTrainer __pyx_vtable_5pycnn_AdadeltaTrainer;

static PyObject *__pyx_tp_new_5pycnn_AdadeltaTrainer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_AdadeltaTrainer *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_AdadeltaTrainer *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_AdadeltaTrainer;
  if (unlikely(__pyx_pw_5pycnn_15AdadeltaTrainer_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_AdadeltaTrainer(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_5pycnn_15AdadeltaTrainer_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_5pycnn_AdadeltaTrainer[] = {
  {"update", (PyCFunction)__pyx_pw_5pycnn_15AdadeltaTrainer_5update, METH_VARARGS|METH_KEYWORDS, 0},
  {"update_epoch", (PyCFunction)__pyx_pw_5pycnn_15AdadeltaTrainer_7update_epoch, METH_VARARGS|METH_KEYWORDS, 0},
  {"status", (PyCFunction)__pyx_pw_5pycnn_15AdadeltaTrainer_9status, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_AdadeltaTrainer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.AdadeltaTrainer", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_AdadeltaTrainer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_AdadeltaTrainer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_AdadeltaTrainer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_AdadeltaTrainer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_5pycnn_AdamTrainer __pyx_vtable_5pycnn_AdamTrainer;

static PyObject *__pyx_tp_new_5pycnn_AdamTrainer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_5pycnn_AdamTrainer *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_5pycnn_AdamTrainer *)o);
  p->__pyx_vtab = __pyx_vtabptr_5pycnn_AdamTrainer;
  if (unlikely(__pyx_pw_5pycnn_11AdamTrainer_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_5pycnn_AdamTrainer(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_5pycnn_11AdamTrainer_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_5pycnn_AdamTrainer[] = {
  {"update", (PyCFunction)__pyx_pw_5pycnn_11AdamTrainer_5update, METH_VARARGS|METH_KEYWORDS, 0},
  {"update_epoch", (PyCFunction)__pyx_pw_5pycnn_11AdamTrainer_7update_epoch, METH_VARARGS|METH_KEYWORDS, 0},
  {"status", (PyCFunction)__pyx_pw_5pycnn_11AdamTrainer_9status, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_5pycnn_AdamTrainer = {
  PyVarObject_HEAD_INIT(0, 0)
  "pycnn.AdamTrainer", /*tp_name*/
  sizeof(struct __pyx_obj_5pycnn_AdamTrainer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5pycnn_AdamTrainer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_5pycnn_AdamTrainer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5pycnn_AdamTrainer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {"cg", (PyCFunction)__pyx_pw_5pycnn_5cg, METH_NOARGS, 0},
  {"cdiv", (PyCFunction)__pyx_pw_5pycnn_25cdiv, METH_VARARGS|METH_KEYWORDS, 0},
  {"colwise_add", (PyCFunction)__pyx_pw_5pycnn_27colwise_add, METH_VARARGS|METH_KEYWORDS, 0},
  {"trace_of_product", (PyCFunction)__pyx_pw_5pycnn_29trace_of_product, METH_VARARGS|METH_KEYWORDS, 0},
  {"cwise_multiply", (PyCFunction)__pyx_pw_5pycnn_31cwise_multiply, METH_VARARGS|METH_KEYWORDS, 0},
  {"dot_product", (PyCFunction)__pyx_pw_5pycnn_33dot_product, METH_VARARGS|METH_KEYWORDS, 0},
  {"squared_distance", (PyCFunction)__pyx_pw_5pycnn_35squared_distance, METH_VARARGS|METH_KEYWORDS, 0},
  {"l1_distance", (PyCFunction)__pyx_pw_5pycnn_37l1_distance, METH_VARARGS|METH_KEYWORDS, 0},
  {"binary_log_loss", (PyCFunction)__pyx_pw_5pycnn_39binary_log_loss, METH_VARARGS|METH_KEYWORDS, 0},
  {"conv1d_narrow", (PyCFunction)__pyx_pw_5pycnn_41conv1d_narrow, METH_VARARGS|METH_KEYWORDS, 0},
  {"conv1d_wide", (PyCFunction)__pyx_pw_5pycnn_43conv1d_wide, METH_VARARGS|METH_KEYWORDS, 0},
  {"tanh", (PyCFunction)__pyx_pw_5pycnn_45tanh, METH_O, 0},
  {"exp", (PyCFunction)__pyx_pw_5pycnn_47exp, METH_O, 0},
  {"square", (PyCFunction)__pyx_pw_5pycnn_49square, METH_O, 0},
  {"cube", (PyCFunction)__pyx_pw_5pycnn_51cube, METH_O, 0},
  {"log", (PyCFunction)__pyx_pw_5pycnn_53log, METH_O, 0},
  {"logistic", (PyCFunction)__pyx_pw_5pycnn_55logistic, METH_O, 0},
  {"rectify", (PyCFunction)__pyx_pw_5pycnn_57rectify, METH_O, 0},
  {"log_softmax", (PyCFunction)__pyx_pw_5pycnn_59log_softmax, METH_VARARGS|METH_KEYWORDS, 0},
  {"softmax", (PyCFunction)__pyx_pw_5pycnn_61softmax, METH_O, 0},
  {"softsign", (PyCFunction)__pyx_pw_5pycnn_63softsign, METH_O, 0},
  {"bmin", (PyCFunction)__pyx_pw_5pycnn_65bmin, METH_VARARGS|METH_KEYWORDS, 0},
  {"bmax", (PyCFunction)__pyx_pw_5pycnn_67bmax, METH_VARARGS|METH_KEYWORDS, 0},
  {"transpose", (PyCFunction)__pyx_pw_5pycnn_69transpose, METH_O, 0},
  {"sum_cols", (PyCFunction)__pyx_pw_5pycnn_71sum_cols, METH_O, 0},
  {"sum_batches", (PyCFunction)__pyx_pw_5pycnn_73sum_batches, METH_O, 0},
  {"fold_rows", (PyCFunction)__pyx_pw_5pycnn_75fold_rows, METH_VARARGS|METH_KEYWORDS, 0},
  {"pairwise_rank_loss", (PyCFunction)__pyx_pw_5pycnn_77pairwise_rank_loss, METH_VARARGS|METH_KEYWORDS, 0},
  {"poisson_loss", (PyCFunction)__pyx_pw_5pycnn_79poisson_loss, METH_VARARGS|METH_KEYWORDS, 0},
  {"huber_distance", (PyCFunction)__pyx_pw_5pycnn_81huber_distance, METH_VARARGS|METH_KEYWORDS, 0},
  {"kmax_pooling", (PyCFunction)__pyx_pw_5pycnn_83kmax_pooling, METH_VARARGS|METH_KEYWORDS, 0},
  {"pickneglogsoftmax", (PyCFunction)__pyx_pw_5pycnn_85pickneglogsoftmax, METH_VARARGS|METH_KEYWORDS, 0},
  {"pickneglogsoftmax_batch", (PyCFunction)__pyx_pw_5pycnn_87pickneglogsoftmax_batch, METH_VARARGS|METH_KEYWORDS, 0},
  {"kmh_ngram", (PyCFunction)__pyx_pw_5pycnn_89kmh_ngram, METH_VARARGS|METH_KEYWORDS, 0},
  {"pickrange", (PyCFunction)__pyx_pw_5pycnn_91pickrange, METH_VARARGS|METH_KEYWORDS, 0},
  {"noise", (PyCFunction)__pyx_pw_5pycnn_93noise, METH_VARARGS|METH_KEYWORDS, 0},
  {"dropout", (PyCFunction)__pyx_pw_5pycnn_95dropout, METH_VARARGS|METH_KEYWORDS, 0},
  {"block_dropout", (PyCFunction)__pyx_pw_5pycnn_97block_dropout, METH_VARARGS|METH_KEYWORDS, 0},
  {"reshape", (PyCFunction)__pyx_pw_5pycnn_99reshape, METH_VARARGS|METH_KEYWORDS, 0},
  {"esum", (PyCFunction)__pyx_pw_5pycnn_101esum, METH_O, 0},
  {"average", (PyCFunction)__pyx_pw_5pycnn_103average, METH_O, 0},
  {"emax", (PyCFunction)__pyx_pw_5pycnn_105emax, METH_O, 0},
  {"concatenate_cols", (PyCFunction)__pyx_pw_5pycnn_107concatenate_cols, METH_O, 0},
  {"concatenate", (PyCFunction)__pyx_pw_5pycnn_109concatenate, METH_O, 0},
  {"affine_transform", (PyCFunction)__pyx_pw_5pycnn_111affine_transform, METH_O, 0},
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "pycnn",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_Attempt_to_use_a_stale_expressio, __pyx_k_Attempt_to_use_a_stale_expressio, sizeof(__pyx_k_Attempt_to_use_a_stale_expressio), 0, 0, 1, 0},
  {&__pyx_kp_s_Attempt_to_use_a_stale_expressio_2, __pyx_k_Attempt_to_use_a_stale_expressio_2, sizeof(__pyx_k_Attempt_to_use_a_stale_expressio_2), 0, 0, 1, 0},
  {&__pyx_kp_s_Cannot_instantiate_RNNBuilder_di, __pyx_k_Cannot_instantiate_RNNBuilder_di, sizeof(__pyx_k_Cannot_instantiate_RNNBuilder_di), 0, 0, 1, 0},
  {&__pyx_kp_s_Do_not_instantiate_ComputationGr, __pyx_k_Do_not_instantiate_ComputationGr, sizeof(__pyx_k_Do_not_instantiate_ComputationGr), 0, 0, 1, 0},
  {&__pyx_n_s_Exception, __pyx_k_Exception, sizeof(__pyx_k_Exception), 0, 0, 1, 1},
  {&__pyx_n_s_F, __pyx_k_F, sizeof(__pyx_k_F), 0, 0, 1, 1},
  {&__pyx_n_s_LSTMBuilder, __pyx_k_LSTMBuilder, sizeof(__pyx_k_LSTMBuilder), 0, 0, 1, 1},
  {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s_PrintGraphviz, __pyx_k_PrintGraphviz, sizeof(__pyx_k_PrintGraphviz), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_SimpleRNNBuilder, __pyx_k_SimpleRNNBuilder, sizeof(__pyx_k_SimpleRNNBuilder), 0, 0, 1, 1},
  {&__pyx_kp_s_Stale_Expression_created_before, __pyx_k_Stale_Expression_created_before, sizeof(__pyx_k_Stale_Expression_created_before), 0, 0, 1, 0},
  {&__pyx_kp_s_Unsupported_dimension, __pyx_k_Unsupported_dimension, sizeof(__pyx_k_Unsupported_dimension), 0, 0, 1, 0},
  {&__pyx_kp_s_Using_stale_builder_Create_new_g, __pyx_k_Using_stale_builder_Create_new_g, sizeof(__pyx_k_Using_stale_builder_Create_new_g), 0, 0, 1, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_add_input, __pyx_k_add_input, sizeof(__pyx_k_add_input), 0, 0, 1, 1},
  {&__pyx_n_s_alpha, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_n_s_argv, __pyx_k_argv, sizeof(__pyx_k_argv), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_as_array, __pyx_k_as_array, sizeof(__pyx_k_as_array), 0, 0, 1, 1},
  {&__pyx_n_s_backward, __pyx_k_backward, sizeof(__pyx_k_backward), 0, 0, 1, 1},
  {&__pyx_n_s_batch, __pyx_k_batch, sizeof(__pyx_k_batch), 0, 0, 1, 1},
  {&__pyx_n_s_beta_1, __pyx_k_beta_1, sizeof(__pyx_k_beta_1), 0, 0, 1, 1},
  {&__pyx_n_s_beta_2, __pyx_k_beta_2, sizeof(__pyx_k_beta_2), 0, 0, 1, 1},
  {&__pyx_n_s_builder, __pyx_k_builder, sizeof(__pyx_k_builder), 0, 0, 1, 1},
  {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
  {&__pyx_n_s_cg_version, __pyx_k_cg_version, sizeof(__pyx_k_cg_version), 0, 0, 1, 1},
  {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {&__pyx_n_s_d1, __pyx_k_d1, sizeof(__pyx_k_d1), 0, 0, 1, 1},
  {&__pyx_n_s_d2, __pyx_k_d2, sizeof(__pyx_k_d2), 0, 0, 1, 1},
  {&__pyx_n_s_dim, __pyx_k_dim, sizeof(__pyx_k_dim), 0, 0, 1, 1},
  {&__pyx_kp_s_dim_mismatch, __pyx_k_dim_mismatch, sizeof(__pyx_k_dim_mismatch), 0, 0, 1, 0},
  {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {&__pyx_n_s_e0, __pyx_k_e0, sizeof(__pyx_k_e0), 0, 0, 1, 1},
  {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
  {&__pyx_n_s_eps, __pyx_k_eps, sizeof(__pyx_k_eps), 0, 0, 1, 1},
  {&__pyx_kp_s_exprssion_s_s, __pyx_k_exprssion_s_s, sizeof(__pyx_k_exprssion_s_s), 0, 0, 1, 0},
  {&__pyx_n_s_flatten, __pyx_k_flatten, sizeof(__pyx_k_flatten), 0, 0, 1, 1},
  {&__pyx_n_s_forward, __pyx_k_forward, sizeof(__pyx_k_forward), 0, 0, 1, 1},
  {&__pyx_n_s_forward_scalar, __pyx_k_forward_scalar, sizeof(__pyx_k_forward_scalar), 0, 0, 1, 1},
  {&__pyx_n_s_forward_vec, __pyx_k_forward_vec, sizeof(__pyx_k_forward_vec), 0, 0, 1, 1},
  {&__pyx_n_s_g, __pyx_k_g, sizeof(__pyx_k_g), 0, 0, 1, 1},
  {&__pyx_n_s_guard, __pyx_k_guard, sizeof(__pyx_k_guard), 0, 0, 1, 1},
  {&__pyx_n_s_h, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
  {&__pyx_n_s_hidden_dim, __pyx_k_hidden_dim, sizeof(__pyx_k_hidden_dim), 0, 0, 1, 1},
  {&__pyx_n_s_hinge, __pyx_k_hinge, sizeof(__pyx_k_hinge), 0, 0, 1, 1},
  {&__pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_k_home_gaito_App_cnn_pycnn_pycnn, sizeof(__pyx_k_home_gaito_App_cnn_pycnn_pycnn), 0, 0, 1, 0},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_inc_forward, __pyx_k_inc_forward, sizeof(__pyx_k_inc_forward), 0, 0, 1, 1},
  {&__pyx_n_s_inc_forward_scalar, __pyx_k_inc_forward_scalar, sizeof(__pyx_k_inc_forward_scalar), 0, 0, 1, 1},
  {&__pyx_n_s_inc_forward_vec, __pyx_k_inc_forward_vec, sizeof(__pyx_k_inc_forward_vec), 0, 0, 1, 1},
  {&__pyx_n_s_incremental_forward, __pyx_k_incremental_forward, sizeof(__pyx_k_incremental_forward), 0, 0, 1, 1},
  {&__pyx_n_s_index, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
  {&__pyx_n_s_indices, __pyx_k_indices, sizeof(__pyx_k_indices), 0, 0, 1, 1},
  {&__pyx_n_s_init_from_array, __pyx_k_init_from_array, sizeof(__pyx_k_init_from_array), 0, 0, 1, 1},
  {&__pyx_n_s_init_row, __pyx_k_init_row, sizeof(__pyx_k_init_row), 0, 0, 1, 1},
  {&__pyx_n_s_initial_state, __pyx_k_initial_state, sizeof(__pyx_k_initial_state), 0, 0, 1, 1},
  {&__pyx_n_s_initial_state_from_raw_vectors, __pyx_k_initial_state_from_raw_vectors, sizeof(__pyx_k_initial_state_from_raw_vectors), 0, 0, 1, 1},
  {&__pyx_n_s_input_dim, __pyx_k_input_dim, sizeof(__pyx_k_input_dim), 0, 0, 1, 1},
  {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
  {&__pyx_n_s_lam, __pyx_k_lam, sizeof(__pyx_k_lam), 0, 0, 1, 1},
  {&__pyx_n_s_layers, __pyx_k_layers, sizeof(__pyx_k_layers), 0, 0, 1, 1},
  {&__pyx_n_s_load_array, __pyx_k_load_array, sizeof(__pyx_k_load_array), 0, 0, 1, 1},
  {&__pyx_n_s_lookup, __pyx_k_lookup, sizeof(__pyx_k_lookup), 0, 0, 1, 1},
  {&__pyx_n_s_lookup_batch, __pyx_k_lookup_batch, sizeof(__pyx_k_lookup_batch), 0, 0, 1, 1},
  {&__pyx_n_s_m, __pyx_k_m, sizeof(__pyx_k_m), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_matInput, __pyx_k_matInput, sizeof(__pyx_k_matInput), 0, 0, 1, 1},
  {&__pyx_n_s_model, __pyx_k_model, sizeof(__pyx_k_model), 0, 0, 1, 1},
  {&__pyx_n_s_mom, __pyx_k_mom, sizeof(__pyx_k_mom), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_kp_s_name_already_registered, __pyx_k_name_already_registered, sizeof(__pyx_k_name_already_registered), 0, 0, 1, 0},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_npvalue, __pyx_k_npvalue, sizeof(__pyx_k_npvalue), 0, 0, 1, 1},
  {&__pyx_n_s_nrows, __pyx_k_nrows, sizeof(__pyx_k_nrows), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_n_s_order, __pyx_k_order, sizeof(__pyx_k_order), 0, 0, 1, 1},
  {&__pyx_n_s_out, __pyx_k_out, sizeof(__pyx_k_out), 0, 0, 1, 1},
  {&__pyx_n_s_output, __pyx_k_output, sizeof(__pyx_k_output), 0, 0, 1, 1},
  {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
  {&__pyx_n_s_parameter, __pyx_k_parameter, sizeof(__pyx_k_parameter), 0, 0, 1, 1},
  {&__pyx_n_s_pick, __pyx_k_pick, sizeof(__pyx_k_pick), 0, 0, 1, 1},
  {&__pyx_n_s_pick_batch, __pyx_k_pick_batch, sizeof(__pyx_k_pick_batch), 0, 0, 1, 1},
  {&__pyx_n_s_prev, __pyx_k_prev, sizeof(__pyx_k_prev), 0, 0, 1, 1},
  {&__pyx_n_s_prev_state, __pyx_k_prev_state, sizeof(__pyx_k_prev_state), 0, 0, 1, 1},
  {&__pyx_n_s_pycnn, __pyx_k_pycnn, sizeof(__pyx_k_pycnn), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_recalculate, __pyx_k_recalculate, sizeof(__pyx_k_recalculate), 0, 0, 1, 1},
  {&__pyx_n_s_renew, __pyx_k_renew, sizeof(__pyx_k_renew), 0, 0, 1, 1},
  {&__pyx_n_s_renew_cg, __pyx_k_renew_cg, sizeof(__pyx_k_renew_cg), 0, 0, 1, 1},
  {&__pyx_n_s_reshape, __pyx_k_reshape, sizeof(__pyx_k_reshape), 0, 0, 1, 1},
  {&__pyx_n_s_restrict, __pyx_k_restrict, sizeof(__pyx_k_restrict), 0, 0, 1, 1},
  {&__pyx_n_s_rho, __pyx_k_rho, sizeof(__pyx_k_rho), 0, 0, 1, 1},
  {&__pyx_n_s_row, __pyx_k_row, sizeof(__pyx_k_row), 0, 0, 1, 1},
  {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
  {&__pyx_n_s_scalarInput, __pyx_k_scalarInput, sizeof(__pyx_k_scalarInput), 0, 0, 1, 1},
  {&__pyx_n_s_scalar_value, __pyx_k_scalar_value, sizeof(__pyx_k_scalar_value), 0, 0, 1, 1},
  {&__pyx_n_s_scale, __pyx_k_scale, sizeof(__pyx_k_scale), 0, 0, 1, 1},
  {&__pyx_n_s_set, __pyx_k_set, sizeof(__pyx_k_set), 0, 0, 1, 1},
  {&__pyx_n_s_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
  {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
  {&__pyx_n_s_state_idx, __pyx_k_state_idx, sizeof(__pyx_k_state_idx), 0, 0, 1, 1},
  {&__pyx_n_s_states, __pyx_k_states, sizeof(__pyx_k_states), 0, 0, 1, 1},
  {&__pyx_n_s_status, __pyx_k_status, sizeof(__pyx_k_status), 0, 0, 1, 1},
  {&__pyx_n_s_stddev, __pyx_k_stddev, sizeof(__pyx_k_stddev), 0, 0, 1, 1},
  {&__pyx_n_s_sys, __pyx_k_sys, sizeof(__pyx_k_sys), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_kp_s_too_many_rows, __pyx_k_too_many_rows, sizeof(__pyx_k_too_many_rows), 0, 0, 1, 0},
  {&__pyx_n_s_transduce, __pyx_k_transduce, sizeof(__pyx_k_transduce), 0, 0, 1, 1},
  {&__pyx_n_s_u, __pyx_k_u, sizeof(__pyx_k_u), 0, 0, 1, 1},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_update_epoch, __pyx_k_update_epoch, sizeof(__pyx_k_update_epoch), 0, 0, 1, 1},
  {&__pyx_n_s_v, __pyx_k_v, sizeof(__pyx_k_v), 0, 0, 1, 1},
  {&__pyx_n_s_val, __pyx_k_val, sizeof(__pyx_k_val), 0, 0, 1, 1},
  {&__pyx_n_s_vals, __pyx_k_vals, sizeof(__pyx_k_vals), 0, 0, 1, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {&__pyx_n_s_vecInput, __pyx_k_vecInput, sizeof(__pyx_k_vecInput), 0, 0, 1, 1},
  {&__pyx_n_s_vec_value, __pyx_k_vec_value, sizeof(__pyx_k_vec_value), 0, 0, 1, 1},
  {&__pyx_n_s_vecs, __pyx_k_vecs, sizeof(__pyx_k_vecs), 0, 0, 1, 1},
  {&__pyx_n_s_version, __pyx_k_version, sizeof(__pyx_k_version), 0, 0, 1, 1},
  {&__pyx_n_s_vs, __pyx_k_vs, sizeof(__pyx_k_vs), 0, 0, 1, 1},
  {&__pyx_n_s_vstack, __pyx_k_vstack, sizeof(__pyx_k_vstack), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_xrange, __pyx_k_xrange, sizeof(__pyx_k_xrange), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) __PYX_ERR(0, 40, __pyx_L1_error)
  #if PY_MAJOR_VERSION >= 3
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_xrange) __PYX_ERR(0, 112, __pyx_L1_error)
  #else
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_xrange); if (!__pyx_builtin_xrange) __PYX_ERR(0, 112, __pyx_L1_error)
  #endif
  __pyx_builtin_Exception = __Pyx_GetBuiltinName(__pyx_n_s_Exception); if (!__pyx_builtin_Exception) __PYX_ERR(0, 128, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(0, 274, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 359, __pyx_L1_error)
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) __PYX_ERR(0, 454, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(1, 68, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "pycnn.pyx":128
 *     cpdef init_from_array(self, arr):
 *         if len(arr) > self.thisptr.values.size():
 *             raise Exception("too many rows")             # <<<<<<<<<<<<<<
 *         if arr.shape[1] != self.thisptr.values[0].d.rows():
 *             raise Exception("dim mismatch")
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_too_many_rows); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "pycnn.pyx":130
 *             raise Exception("too many rows")
 *         if arr.shape[1] != self.thisptr.values[0].d.rows():
 *             raise Exception("dim mismatch")             # <<<<<<<<<<<<<<
 *         cdef vector[float] r
 *         for i,row in enumerate(arr):
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_dim_mismatch); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "pycnn.pyx":155
 *         cdef vector[CTensor] vals
 *         vals = self.thisptr.values
 *         return np.vstack([c_tensor_as_np(t).reshape(1,-1,order='F') for t in vals])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__3 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_neg_1); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "pycnn.pyx":185
 *         assert(name not in self.named_params), "name already registered"
 *         cdef int nids = dim[0]
 *         rest = tuple(dim[1:])             # <<<<<<<<<<<<<<
 *         cdef CLookupParameters* p
 *         p = self.thisptr.add_lookup_parameters(nids, Dim(rest))
 */
  __pyx_slice__4 = PySlice_New(__pyx_int_1, Py_None, Py_None); if (unlikely(!__pyx_slice__4)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__4);
  __Pyx_GIVEREF(__pyx_slice__4);

  /* "pycnn.pyx":274
 *     cdef int _cg_version
 *     def __cinit__(self, int guard=0):
 *         if guard != SECRET: raise RuntimeError("Do not instantiate ComputationGraph directly. Use pycnn.cg()")             # <<<<<<<<<<<<<<
 *         self.thisptr = new CComputationGraph()
 *         self._inputs = []
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_Do_not_instantiate_ComputationGr); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "pycnn.pyx":359
 * #{{{ Expressions
 * cdef ensure_freshness(Expression a):
 *     if a.cg_version != _cg.version(): raise ValueError("Attempt to use a stale expression.")             # <<<<<<<<<<<<<<
 * 
 * cdef _add(Expression a, Expression b): ensure_freshness(b); return Expression.from_cexpr(a.cg_version, c_op_add(a.c(), b.c()))
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_Attempt_to_use_a_stale_expressio); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "pycnn.pyx":386
 *     @staticmethod
 *     cdef Expression from_cexpr(int cgv, CExpression cexpr):
 *         if cgv != _cg._cg_version: raise ValueError("Attempt to use a stale expression, from a previous Computation Graph.")             # <<<<<<<<<<<<<<
 *         self = Expression()
 *         #self.cg = cexpr.pg
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_Attempt_to_use_a_stale_expressio_2); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "pycnn.pyx":407
 * 
 *     cpdef scalar_value(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         if recalculate: self.cg().forward()
 *         return c_as_scalar(self.cgp().get_value(self.vindex))
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_Stale_Expression_created_before); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "pycnn.pyx":412
 * 
 *     cpdef vec_value(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         if recalculate: self.cg().forward()
 *         return c_as_vector(self.cgp().get_value(self.vindex))
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_Stale_Expression_created_before); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "pycnn.pyx":417
 * 
 *     cpdef npvalue(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         cdef CTensor t
 *         cdef CDim dim
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_Stale_Expression_created_before); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "pycnn.pyx":429
 * 
 *     cpdef value(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         cdef CTensor t
 *         if recalculate: self.cg().forward()
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_Stale_Expression_created_before); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 429, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "pycnn.pyx":441
 *     # TODO this runs incremental forward on the entire graph, may not be optimal in terms of efficiency.
 *     cpdef forward(self, recalculate=False):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         if recalculate: self.cg().forward()
 *         else: self.cg().incremental_forward()
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_Stale_Expression_created_before); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "pycnn.pyx":446
 * 
 *     cpdef backward(self):
 *         if self.cg_version != _cg._cg_version: raise RuntimeError("Stale Expression (created before renewing the Computation Graph).")             # <<<<<<<<<<<<<<
 *         self.cgp().backward(self.vindex)
 * 
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_kp_s_Stale_Expression_created_before); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 446, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "pycnn.pyx":738
 *     def __cinit_(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *         # TODO disable calling this directly.
 *         raise RuntimeError("Cannot instantiate RNNBuilder directly.")             # <<<<<<<<<<<<<<
 *     #def __cinit__(self, unsigned layers, unsigned input_dim, unsigned hidden_dim, Model model):
 *     #    self.thisptr = 0 #new CSimpleRNNBuilder(layers, input_dim, hidden_dim, model.thisptr)
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_s_Cannot_instantiate_RNNBuilder_di); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "pycnn.pyx":751
 * 
 *     cdef start_new_sequence(self, es=None):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         cdef vector[CExpression] ces = vector[CExpression]()
 *         cdef Expression e
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_Using_stale_builder_Create_new_g); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "pycnn.pyx":762
 *     cdef Expression add_input(self, Expression e):
 *         ensure_freshness(e)
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(e.c()))
 * 
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_Using_stale_builder_Create_new_g); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "pycnn.pyx":767
 *     cdef Expression add_input_to_prev(self, CRNNPointer prev, Expression e):
 *         ensure_freshness(e)
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.add_input(prev, e.c()))
 * 
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_Using_stale_builder_Create_new_g); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "pycnn.pyx":771
 * 
 *     cdef rewind_one_step(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         self.thisptr.rewind_one_step()
 * 
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_Using_stale_builder_Create_new_g); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "pycnn.pyx":775
 * 
 *     cdef Expression back(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         return Expression.from_cexpr(self.cg_version, self.thisptr.back())
 * 
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_Using_stale_builder_Create_new_g); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 775, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "pycnn.pyx":779
 * 
 *     cdef final_h(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         cdef list res = []
 *         cdef CExpression cexp
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_Using_stale_builder_Create_new_g); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "pycnn.pyx":788
 * 
 *     cdef final_s(self):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         cdef list res = []
 *         cdef CExpression cexp
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_Using_stale_builder_Create_new_g); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "pycnn.pyx":797
 * 
 *     cdef get_h(self, CRNNPointer i):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         cdef list res = []
 *         cdef CExpression cexp
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_Using_stale_builder_Create_new_g); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "pycnn.pyx":806
 * 
 *     cdef get_s(self, CRNNPointer i):
 *         if self.cg_version != _cg.version(): raise ValueError("Using stale builder. Create .new_graph() after computation graph is renewed.")             # <<<<<<<<<<<<<<
 *         cdef list res = []
 *         cdef CExpression cexp
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_Using_stale_builder_Create_new_g); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 806, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "pycnn.pyx":262
 * cdef ComputationGraph _cg = ComputationGraph(SECRET)
 * 
 * def cg_version(): return _cg._cg_version             # <<<<<<<<<<<<<<
 * def renew_cg(): return _cg.renew()
 * 
 */
  __pyx_codeobj__24 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_cg_version, 262, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__24)) __PYX_ERR(0, 262, __pyx_L1_error)

  /* "pycnn.pyx":263
 * 
 * def cg_version(): return _cg._cg_version
 * def renew_cg(): return _cg.renew()             # <<<<<<<<<<<<<<
 * 
 * cpdef ComputationGraph cg():
 */
  __pyx_codeobj__25 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_renew_cg, 263, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__25)) __PYX_ERR(0, 263, __pyx_L1_error)

  /* "pycnn.pyx":479
 *     return Expression.from_cexpr(g.version(), c_parameter(g.thisptr[0], p.thisptr))
 * 
 * def parameter(Parameters p): return _parameter(_cg, p)             # <<<<<<<<<<<<<<
 * 
 * # {{{ Mutable Expressions
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_n_s_p); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);
  __pyx_codeobj__27 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__26, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_parameter, 479, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__27)) __PYX_ERR(0, 479, __pyx_L1_error)

  /* "pycnn.pyx":498
 *         self.val.set(s)
 * 
 * def scalarInput(float s):             # <<<<<<<<<<<<<<
 *     return _cg.inputValue(s)
 * 
 */
  __pyx_tuple__28 = PyTuple_Pack(2, __pyx_n_s_s, __pyx_n_s_s); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 498, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);
  __pyx_codeobj__29 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__28, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_scalarInput, 498, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__29)) __PYX_ERR(0, 498, __pyx_L1_error)

  /* "pycnn.pyx":516
 *         self.val.set(data)
 * 
 * def vecInput(int dim):             # <<<<<<<<<<<<<<
 *     return _cg.inputVector(dim)
 * 
 */
  __pyx_tuple__30 = PyTuple_Pack(2, __pyx_n_s_dim, __pyx_n_s_dim); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);
  __pyx_codeobj__31 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__30, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_vecInput, 516, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__31)) __PYX_ERR(0, 516, __pyx_L1_error)

  /* "pycnn.pyx":519
 *     return _cg.inputVector(dim)
 * 
 * def matInput(int d1, int d2):             # <<<<<<<<<<<<<<
 *     return _cg.inputMatrix(d1, d2)
 * 
 */
  __pyx_tuple__32 = PyTuple_Pack(2, __pyx_n_s_d1, __pyx_n_s_d2); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);
  __pyx_codeobj__33 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__32, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_matInput, 519, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__33)) __PYX_ERR(0, 519, __pyx_L1_error)

  /* "pycnn.pyx":555
 *         self.val.set(i)
 * 
 * def lookup(LookupParameters p, unsigned index=0, update=True):             # <<<<<<<<<<<<<<
 *     return _cg.lookup(p, index, update)
 * 
 */
  __pyx_tuple__34 = PyTuple_Pack(3, __pyx_n_s_p, __pyx_n_s_index, __pyx_n_s_update); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);
  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_lookup, 555, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(0, 555, __pyx_L1_error)

  /* "pycnn.pyx":558
 *     return _cg.lookup(p, index, update)
 * 
 * def lookup_batch(LookupParameters p, vector[unsigned] indices, update=True):             # <<<<<<<<<<<<<<
 *     return _cg.lookup_batch(p, indices, update)
 * 
 */
  __pyx_tuple__36 = PyTuple_Pack(3, __pyx_n_s_p, __pyx_n_s_indices, __pyx_n_s_update); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);
  __pyx_codeobj__37 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__36, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_lookup_batch, 558, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__37)) __PYX_ERR(0, 558, __pyx_L1_error)

  /* "pycnn.pyx":575
 *         self.val.set(i)
 * 
 * def pick(Expression e, unsigned index=0):             # <<<<<<<<<<<<<<
 *     return _cg.outputPicker(e, index)
 * 
 */
  __pyx_tuple__38 = PyTuple_Pack(2, __pyx_n_s_e, __pyx_n_s_index); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(0, 575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);
  __pyx_codeobj__39 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__38, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_pick, 575, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__39)) __PYX_ERR(0, 575, __pyx_L1_error)

  /* "pycnn.pyx":591
 *         self.val.set(i)
 * 
 * def pick_batch(Expression e, vector[unsigned] indices):             # <<<<<<<<<<<<<<
 *     return _cg.outputBatchPicker(e, indices)
 * 
 */
  __pyx_tuple__40 = PyTuple_Pack(2, __pyx_n_s_e, __pyx_n_s_indices); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 591, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);
  __pyx_codeobj__41 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__40, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_pick_batch, 591, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__41)) __PYX_ERR(0, 591, __pyx_L1_error)

  /* "pycnn.pyx":608
 *         self.val.set(i)
 * 
 * def hinge(Expression x, unsigned index, float m=1.0):             # <<<<<<<<<<<<<<
 *     return _hingeExpression(_cg, x, index, m)
 * 
 */
  __pyx_tuple__42 = PyTuple_Pack(3, __pyx_n_s_x, __pyx_n_s_index, __pyx_n_s_m); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);
  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_gaito_App_cnn_pycnn_pycnn, __pyx_n_s_hinge, 608, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(0, 608, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_1eneg_8 = PyFloat_FromDouble(1e-8); if (unlikely(!__pyx_float_1eneg_8)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initpycnn(void); /*proto*/
PyMODINIT_FUNC initpycnn(void)
#else
PyMODINIT_FUNC PyInit_pycnn(void); /*proto*/
PyMODINIT_FUNC PyInit_pycnn(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_pycnn(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("pycnn", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_pycnn) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "pycnn")) {
      if (unlikely(PyDict_SetItemString(modules, "pycnn", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global init code ---*/
  __pyx_v_5pycnn__cg = ((struct __pyx_obj_5pycnn_ComputationGraph *)Py_None); Py_INCREF(Py_None);
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_5pycnn_Parameters = &__pyx_vtable_5pycnn_Parameters;
  __pyx_vtable_5pycnn_Parameters.wrap_ptr = (PyObject *(*)(cnn::Parameters *))__pyx_f_5pycnn_10Parameters_wrap_ptr;
  __pyx_vtable_5pycnn_Parameters.shape = (PyObject *(*)(struct __pyx_obj_5pycnn_Parameters *, int __pyx_skip_dispatch))__pyx_f_5pycnn_10Parameters_shape;
  __pyx_vtable_5pycnn_Parameters.as_array = (PyObject *(*)(struct __pyx_obj_5pycnn_Parameters *, int __pyx_skip_dispatch))__pyx_f_5pycnn_10Parameters_as_array;
  __pyx_vtable_5pycnn_Parameters.load_array = (PyObject *(*)(struct __pyx_obj_5pycnn_Parameters *, PyObject *, int __pyx_skip_dispatch))__pyx_f_5pycnn_10Parameters_load_array;
  if (PyType_Ready(&__pyx_type_5pycnn_Parameters) < 0) __PYX_ERR(0, 78, __pyx_L1_error)
  __pyx_type_5pycnn_Parameters.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_Parameters.tp_dict, __pyx_vtabptr_5pycnn_Parameters) < 0) __PYX_ERR(0, 78, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Parameters", (PyObject *)&__pyx_type_5pycnn_Parameters) < 0) __PYX_ERR(0, 78, __pyx_L1_error)
  __pyx_ptype_5pycnn_Parameters = &__pyx_type_5pycnn_Parameters;
  __pyx_vtabptr_5pycnn_LookupParameters = &__pyx_vtable_5pycnn_LookupParameters;
  __pyx_vtable_5pycnn_LookupParameters.wrap_ptr = (PyObject *(*)(cnn::LookupParameters *))__pyx_f_5pycnn_16LookupParameters_wrap_ptr;
  __pyx_vtable_5pycnn_LookupParameters.init_from_array = (PyObject *(*)(struct __pyx_obj_5pycnn_LookupParameters *, PyObject *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16LookupParameters_init_from_array;
  __pyx_vtable_5pycnn_LookupParameters.shape = (PyObject *(*)(struct __pyx_obj_5pycnn_LookupParameters *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16LookupParameters_shape;
  __pyx_vtable_5pycnn_LookupParameters.batch = (PyObject *(*)(struct __pyx_obj_5pycnn_LookupParameters *, std::vector<unsigned int> , int __pyx_skip_dispatch))__pyx_f_5pycnn_16LookupParameters_batch;
  __pyx_vtable_5pycnn_LookupParameters.init_row = (PyObject *(*)(struct __pyx_obj_5pycnn_LookupParameters *, unsigned int, std::vector<float> , int __pyx_skip_dispatch))__pyx_f_5pycnn_16LookupParameters_init_row;
  __pyx_vtable_5pycnn_LookupParameters.as_array = (PyObject *(*)(struct __pyx_obj_5pycnn_LookupParameters *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16LookupParameters_as_array;
  if (PyType_Ready(&__pyx_type_5pycnn_LookupParameters) < 0) __PYX_ERR(0, 116, __pyx_L1_error)
  __pyx_type_5pycnn_LookupParameters.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_LookupParameters.tp_dict, __pyx_vtabptr_5pycnn_LookupParameters) < 0) __PYX_ERR(0, 116, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "LookupParameters", (PyObject *)&__pyx_type_5pycnn_LookupParameters) < 0) __PYX_ERR(0, 116, __pyx_L1_error)
  __pyx_ptype_5pycnn_LookupParameters = &__pyx_type_5pycnn_LookupParameters;
  if (PyType_Ready(&__pyx_type_5pycnn_Model) < 0) __PYX_ERR(0, 158, __pyx_L1_error)
  __pyx_type_5pycnn_Model.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Model", (PyObject *)&__pyx_type_5pycnn_Model) < 0) __PYX_ERR(0, 158, __pyx_L1_error)
  __pyx_ptype_5pycnn_Model = &__pyx_type_5pycnn_Model;
  __pyx_vtabptr_5pycnn_UnsignedValue = &__pyx_vtable_5pycnn_UnsignedValue;
  __pyx_vtable_5pycnn_UnsignedValue.addr = (unsigned int *(*)(struct __pyx_obj_5pycnn_UnsignedValue *))__pyx_f_5pycnn_13UnsignedValue_addr;
  if (PyType_Ready(&__pyx_type_5pycnn_UnsignedValue) < 0) __PYX_ERR(0, 215, __pyx_L1_error)
  __pyx_type_5pycnn_UnsignedValue.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_UnsignedValue.tp_dict, __pyx_vtabptr_5pycnn_UnsignedValue) < 0) __PYX_ERR(0, 215, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "UnsignedValue", (PyObject *)&__pyx_type_5pycnn_UnsignedValue) < 0) __PYX_ERR(0, 215, __pyx_L1_error)
  __pyx_ptype_5pycnn_UnsignedValue = &__pyx_type_5pycnn_UnsignedValue;
  __pyx_vtabptr_5pycnn_FloatValue = &__pyx_vtable_5pycnn_FloatValue;
  __pyx_vtable_5pycnn_FloatValue.addr = (float *(*)(struct __pyx_obj_5pycnn_FloatValue *))__pyx_f_5pycnn_10FloatValue_addr;
  if (PyType_Ready(&__pyx_type_5pycnn_FloatValue) < 0) __PYX_ERR(0, 222, __pyx_L1_error)
  __pyx_type_5pycnn_FloatValue.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_FloatValue.tp_dict, __pyx_vtabptr_5pycnn_FloatValue) < 0) __PYX_ERR(0, 222, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "FloatValue", (PyObject *)&__pyx_type_5pycnn_FloatValue) < 0) __PYX_ERR(0, 222, __pyx_L1_error)
  __pyx_ptype_5pycnn_FloatValue = &__pyx_type_5pycnn_FloatValue;
  __pyx_vtabptr_5pycnn_UnsignedVectorValue = &__pyx_vtable_5pycnn_UnsignedVectorValue;
  __pyx_vtable_5pycnn_UnsignedVectorValue.addr = (std::vector<unsigned int>  *(*)(struct __pyx_obj_5pycnn_UnsignedVectorValue *))__pyx_f_5pycnn_19UnsignedVectorValue_addr;
  if (PyType_Ready(&__pyx_type_5pycnn_UnsignedVectorValue) < 0) __PYX_ERR(0, 229, __pyx_L1_error)
  __pyx_type_5pycnn_UnsignedVectorValue.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_UnsignedVectorValue.tp_dict, __pyx_vtabptr_5pycnn_UnsignedVectorValue) < 0) __PYX_ERR(0, 229, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "UnsignedVectorValue", (PyObject *)&__pyx_type_5pycnn_UnsignedVectorValue) < 0) __PYX_ERR(0, 229, __pyx_L1_error)
  __pyx_ptype_5pycnn_UnsignedVectorValue = &__pyx_type_5pycnn_UnsignedVectorValue;
  __pyx_vtabptr_5pycnn_FloatVectorValue = &__pyx_vtable_5pycnn_FloatVectorValue;
  __pyx_vtable_5pycnn_FloatVectorValue.addr = (std::vector<float>  *(*)(struct __pyx_obj_5pycnn_FloatVectorValue *))__pyx_f_5pycnn_16FloatVectorValue_addr;
  if (PyType_Ready(&__pyx_type_5pycnn_FloatVectorValue) < 0) __PYX_ERR(0, 243, __pyx_L1_error)
  __pyx_type_5pycnn_FloatVectorValue.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_FloatVectorValue.tp_dict, __pyx_vtabptr_5pycnn_FloatVectorValue) < 0) __PYX_ERR(0, 243, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "FloatVectorValue", (PyObject *)&__pyx_type_5pycnn_FloatVectorValue) < 0) __PYX_ERR(0, 243, __pyx_L1_error)
  __pyx_ptype_5pycnn_FloatVectorValue = &__pyx_type_5pycnn_FloatVectorValue;
  __pyx_vtabptr_5pycnn_ComputationGraph = &__pyx_vtable_5pycnn_ComputationGraph;
  __pyx_vtable_5pycnn_ComputationGraph.renew = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16ComputationGraph_renew;
  __pyx_vtable_5pycnn_ComputationGraph.version = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16ComputationGraph_version;
  __pyx_vtable_5pycnn_ComputationGraph.forward_scalar = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16ComputationGraph_forward_scalar;
  __pyx_vtable_5pycnn_ComputationGraph.inc_forward_scalar = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16ComputationGraph_inc_forward_scalar;
  __pyx_vtable_5pycnn_ComputationGraph.forward_vec = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16ComputationGraph_forward_vec;
  __pyx_vtable_5pycnn_ComputationGraph.inc_forward_vec = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16ComputationGraph_inc_forward_vec;
  __pyx_vtable_5pycnn_ComputationGraph.forward = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16ComputationGraph_forward;
  __pyx_vtable_5pycnn_ComputationGraph.inc_forward = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16ComputationGraph_inc_forward;
  __pyx_vtable_5pycnn_ComputationGraph.backward = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16ComputationGraph_backward;
  __pyx_vtable_5pycnn_ComputationGraph.PrintGraphviz = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16ComputationGraph_PrintGraphviz;
  __pyx_vtable_5pycnn_ComputationGraph.inputValue = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_opt_args_5pycnn_16ComputationGraph_inputValue *__pyx_optional_args))__pyx_f_5pycnn_16ComputationGraph_inputValue;
  __pyx_vtable_5pycnn_ComputationGraph.inputVector = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int))__pyx_f_5pycnn_16ComputationGraph_inputVector;
  __pyx_vtable_5pycnn_ComputationGraph.inputMatrix = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, int, int))__pyx_f_5pycnn_16ComputationGraph_inputMatrix;
  __pyx_vtable_5pycnn_ComputationGraph.lookup = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_obj_5pycnn_LookupParameters *, struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup *__pyx_optional_args))__pyx_f_5pycnn_16ComputationGraph_lookup;
  __pyx_vtable_5pycnn_ComputationGraph.lookup_batch = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_obj_5pycnn_LookupParameters *, std::vector<unsigned int> , struct __pyx_opt_args_5pycnn_16ComputationGraph_lookup_batch *__pyx_optional_args))__pyx_f_5pycnn_16ComputationGraph_lookup_batch;
  __pyx_vtable_5pycnn_ComputationGraph.outputPicker = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_obj_5pycnn_Expression *, struct __pyx_opt_args_5pycnn_16ComputationGraph_outputPicker *__pyx_optional_args))__pyx_f_5pycnn_16ComputationGraph_outputPicker;
  __pyx_vtable_5pycnn_ComputationGraph.outputBatchPicker = (PyObject *(*)(struct __pyx_obj_5pycnn_ComputationGraph *, struct __pyx_obj_5pycnn_Expression *, std::vector<unsigned int> ))__pyx_f_5pycnn_16ComputationGraph_outputBatchPicker;
  if (PyType_Ready(&__pyx_type_5pycnn_ComputationGraph) < 0) __PYX_ERR(0, 269, __pyx_L1_error)
  __pyx_type_5pycnn_ComputationGraph.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_ComputationGraph.tp_dict, __pyx_vtabptr_5pycnn_ComputationGraph) < 0) __PYX_ERR(0, 269, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "ComputationGraph", (PyObject *)&__pyx_type_5pycnn_ComputationGraph) < 0) __PYX_ERR(0, 269, __pyx_L1_error)
  __pyx_ptype_5pycnn_ComputationGraph = &__pyx_type_5pycnn_ComputationGraph;
  __pyx_vtabptr_5pycnn_Expression = &__pyx_vtable_5pycnn_Expression;
  __pyx_vtable_5pycnn_Expression.cg = (struct __pyx_obj_5pycnn_ComputationGraph *(*)(struct __pyx_obj_5pycnn_Expression *))__pyx_f_5pycnn_10Expression_cg;
  __pyx_vtable_5pycnn_Expression.cgp = (cnn::ComputationGraph *(*)(struct __pyx_obj_5pycnn_Expression *))__pyx_f_5pycnn_10Expression_cgp;
  __pyx_vtable_5pycnn_Expression.from_cexpr = (struct __pyx_obj_5pycnn_Expression *(*)(int, cnn::expr::Expression))__pyx_f_5pycnn_10Expression_from_cexpr;
  __pyx_vtable_5pycnn_Expression.c = (cnn::expr::Expression (*)(struct __pyx_obj_5pycnn_Expression *))__pyx_f_5pycnn_10Expression_c;
  __pyx_vtable_5pycnn_Expression.scalar_value = (PyObject *(*)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_scalar_value *__pyx_optional_args))__pyx_f_5pycnn_10Expression_scalar_value;
  __pyx_vtable_5pycnn_Expression.vec_value = (PyObject *(*)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_vec_value *__pyx_optional_args))__pyx_f_5pycnn_10Expression_vec_value;
  __pyx_vtable_5pycnn_Expression.npvalue = (PyObject *(*)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_npvalue *__pyx_optional_args))__pyx_f_5pycnn_10Expression_npvalue;
  __pyx_vtable_5pycnn_Expression.value = (PyObject *(*)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_value *__pyx_optional_args))__pyx_f_5pycnn_10Expression_value;
  __pyx_vtable_5pycnn_Expression.forward = (PyObject *(*)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10Expression_forward *__pyx_optional_args))__pyx_f_5pycnn_10Expression_forward;
  __pyx_vtable_5pycnn_Expression.backward = (PyObject *(*)(struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch))__pyx_f_5pycnn_10Expression_backward;
  if (PyType_Ready(&__pyx_type_5pycnn_Expression) < 0) __PYX_ERR(0, 369, __pyx_L1_error)
  __pyx_type_5pycnn_Expression.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_Expression.tp_dict, __pyx_vtabptr_5pycnn_Expression) < 0) __PYX_ERR(0, 369, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Expression", (PyObject *)&__pyx_type_5pycnn_Expression) < 0) __PYX_ERR(0, 369, __pyx_L1_error)
  __pyx_ptype_5pycnn_Expression = &__pyx_type_5pycnn_Expression;
  __pyx_vtabptr_5pycnn__inputExpression = &__pyx_vtable_5pycnn__inputExpression;
  __pyx_vtable_5pycnn__inputExpression.__pyx_base = *__pyx_vtabptr_5pycnn_Expression;
  __pyx_type_5pycnn__inputExpression.tp_base = __pyx_ptype_5pycnn_Expression;
  if (PyType_Ready(&__pyx_type_5pycnn__inputExpression) < 0) __PYX_ERR(0, 484, __pyx_L1_error)
  __pyx_type_5pycnn__inputExpression.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn__inputExpression.tp_dict, __pyx_vtabptr_5pycnn__inputExpression) < 0) __PYX_ERR(0, 484, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "_inputExpression", (PyObject *)&__pyx_type_5pycnn__inputExpression) < 0) __PYX_ERR(0, 484, __pyx_L1_error)
  __pyx_ptype_5pycnn__inputExpression = &__pyx_type_5pycnn__inputExpression;
  __pyx_vtabptr_5pycnn__vecInputExpression = &__pyx_vtable_5pycnn__vecInputExpression;
  __pyx_vtable_5pycnn__vecInputExpression.__pyx_base = *__pyx_vtabptr_5pycnn_Expression;
  __pyx_type_5pycnn__vecInputExpression.tp_base = __pyx_ptype_5pycnn_Expression;
  if (PyType_Ready(&__pyx_type_5pycnn__vecInputExpression) < 0) __PYX_ERR(0, 501, __pyx_L1_error)
  __pyx_type_5pycnn__vecInputExpression.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn__vecInputExpression.tp_dict, __pyx_vtabptr_5pycnn__vecInputExpression) < 0) __PYX_ERR(0, 501, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "_vecInputExpression", (PyObject *)&__pyx_type_5pycnn__vecInputExpression) < 0) __PYX_ERR(0, 501, __pyx_L1_error)
  __pyx_ptype_5pycnn__vecInputExpression = &__pyx_type_5pycnn__vecInputExpression;
  __pyx_vtabptr_5pycnn__lookupExpression = &__pyx_vtable_5pycnn__lookupExpression;
  __pyx_vtable_5pycnn__lookupExpression.__pyx_base = *__pyx_vtabptr_5pycnn_Expression;
  __pyx_type_5pycnn__lookupExpression.tp_base = __pyx_ptype_5pycnn_Expression;
  if (PyType_Ready(&__pyx_type_5pycnn__lookupExpression) < 0) __PYX_ERR(0, 522, __pyx_L1_error)
  __pyx_type_5pycnn__lookupExpression.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn__lookupExpression.tp_dict, __pyx_vtabptr_5pycnn__lookupExpression) < 0) __PYX_ERR(0, 522, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "_lookupExpression", (PyObject *)&__pyx_type_5pycnn__lookupExpression) < 0) __PYX_ERR(0, 522, __pyx_L1_error)
  __pyx_ptype_5pycnn__lookupExpression = &__pyx_type_5pycnn__lookupExpression;
  __pyx_vtabptr_5pycnn__lookupBatchExpression = &__pyx_vtable_5pycnn__lookupBatchExpression;
  __pyx_vtable_5pycnn__lookupBatchExpression.__pyx_base = *__pyx_vtabptr_5pycnn_Expression;
  __pyx_type_5pycnn__lookupBatchExpression.tp_base = __pyx_ptype_5pycnn_Expression;
  if (PyType_Ready(&__pyx_type_5pycnn__lookupBatchExpression) < 0) __PYX_ERR(0, 539, __pyx_L1_error)
  __pyx_type_5pycnn__lookupBatchExpression.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn__lookupBatchExpression.tp_dict, __pyx_vtabptr_5pycnn__lookupBatchExpression) < 0) __PYX_ERR(0, 539, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "_lookupBatchExpression", (PyObject *)&__pyx_type_5pycnn__lookupBatchExpression) < 0) __PYX_ERR(0, 539, __pyx_L1_error)
  __pyx_ptype_5pycnn__lookupBatchExpression = &__pyx_type_5pycnn__lookupBatchExpression;
  __pyx_vtabptr_5pycnn__pickerExpression = &__pyx_vtable_5pycnn__pickerExpression;
  __pyx_vtable_5pycnn__pickerExpression.__pyx_base = *__pyx_vtabptr_5pycnn_Expression;
  __pyx_type_5pycnn__pickerExpression.tp_base = __pyx_ptype_5pycnn_Expression;
  if (PyType_Ready(&__pyx_type_5pycnn__pickerExpression) < 0) __PYX_ERR(0, 561, __pyx_L1_error)
  __pyx_type_5pycnn__pickerExpression.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn__pickerExpression.tp_dict, __pyx_vtabptr_5pycnn__pickerExpression) < 0) __PYX_ERR(0, 561, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "_pickerExpression", (PyObject *)&__pyx_type_5pycnn__pickerExpression) < 0) __PYX_ERR(0, 561, __pyx_L1_error)
  __pyx_ptype_5pycnn__pickerExpression = &__pyx_type_5pycnn__pickerExpression;
  __pyx_vtabptr_5pycnn__pickerBatchExpression = &__pyx_vtable_5pycnn__pickerBatchExpression;
  __pyx_vtable_5pycnn__pickerBatchExpression.__pyx_base = *__pyx_vtabptr_5pycnn_Expression;
  __pyx_type_5pycnn__pickerBatchExpression.tp_base = __pyx_ptype_5pycnn_Expression;
  if (PyType_Ready(&__pyx_type_5pycnn__pickerBatchExpression) < 0) __PYX_ERR(0, 578, __pyx_L1_error)
  __pyx_type_5pycnn__pickerBatchExpression.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn__pickerBatchExpression.tp_dict, __pyx_vtabptr_5pycnn__pickerBatchExpression) < 0) __PYX_ERR(0, 578, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "_pickerBatchExpression", (PyObject *)&__pyx_type_5pycnn__pickerBatchExpression) < 0) __PYX_ERR(0, 578, __pyx_L1_error)
  __pyx_ptype_5pycnn__pickerBatchExpression = &__pyx_type_5pycnn__pickerBatchExpression;
  __pyx_vtabptr_5pycnn__hingeExpression = &__pyx_vtable_5pycnn__hingeExpression;
  __pyx_vtable_5pycnn__hingeExpression.__pyx_base = *__pyx_vtabptr_5pycnn_Expression;
  __pyx_type_5pycnn__hingeExpression.tp_base = __pyx_ptype_5pycnn_Expression;
  if (PyType_Ready(&__pyx_type_5pycnn__hingeExpression) < 0) __PYX_ERR(0, 594, __pyx_L1_error)
  __pyx_type_5pycnn__hingeExpression.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn__hingeExpression.tp_dict, __pyx_vtabptr_5pycnn__hingeExpression) < 0) __PYX_ERR(0, 594, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "_hingeExpression", (PyObject *)&__pyx_type_5pycnn__hingeExpression) < 0) __PYX_ERR(0, 594, __pyx_L1_error)
  __pyx_ptype_5pycnn__hingeExpression = &__pyx_type_5pycnn__hingeExpression;
  __pyx_vtabptr_5pycnn_RNNBuilder = &__pyx_vtable_5pycnn_RNNBuilder;
  __pyx_vtable_5pycnn_RNNBuilder.new_graph = (PyObject *(*)(struct __pyx_obj_5pycnn_RNNBuilder *))__pyx_f_5pycnn_10RNNBuilder_new_graph;
  __pyx_vtable_5pycnn_RNNBuilder.start_new_sequence = (PyObject *(*)(struct __pyx_obj_5pycnn_RNNBuilder *, struct __pyx_opt_args_5pycnn_10RNNBuilder_start_new_sequence *__pyx_optional_args))__pyx_f_5pycnn_10RNNBuilder_start_new_sequence;
  __pyx_vtable_5pycnn_RNNBuilder.add_input = (struct __pyx_obj_5pycnn_Expression *(*)(struct __pyx_obj_5pycnn_RNNBuilder *, struct __pyx_obj_5pycnn_Expression *))__pyx_f_5pycnn_10RNNBuilder_add_input;
  __pyx_vtable_5pycnn_RNNBuilder.add_input_to_prev = (struct __pyx_obj_5pycnn_Expression *(*)(struct __pyx_obj_5pycnn_RNNBuilder *, cnn::RNNPointer, struct __pyx_obj_5pycnn_Expression *))__pyx_f_5pycnn_10RNNBuilder_add_input_to_prev;
  __pyx_vtable_5pycnn_RNNBuilder.rewind_one_step = (PyObject *(*)(struct __pyx_obj_5pycnn_RNNBuilder *))__pyx_f_5pycnn_10RNNBuilder_rewind_one_step;
  __pyx_vtable_5pycnn_RNNBuilder.back = (struct __pyx_obj_5pycnn_Expression *(*)(struct __pyx_obj_5pycnn_RNNBuilder *))__pyx_f_5pycnn_10RNNBuilder_back;
  __pyx_vtable_5pycnn_RNNBuilder.final_h = (PyObject *(*)(struct __pyx_obj_5pycnn_RNNBuilder *))__pyx_f_5pycnn_10RNNBuilder_final_h;
  __pyx_vtable_5pycnn_RNNBuilder.final_s = (PyObject *(*)(struct __pyx_obj_5pycnn_RNNBuilder *))__pyx_f_5pycnn_10RNNBuilder_final_s;
  __pyx_vtable_5pycnn_RNNBuilder.get_h = (PyObject *(*)(struct __pyx_obj_5pycnn_RNNBuilder *, cnn::RNNPointer))__pyx_f_5pycnn_10RNNBuilder_get_h;
  __pyx_vtable_5pycnn_RNNBuilder.get_s = (PyObject *(*)(struct __pyx_obj_5pycnn_RNNBuilder *, cnn::RNNPointer))__pyx_f_5pycnn_10RNNBuilder_get_s;
  __pyx_vtable_5pycnn_RNNBuilder.initial_state = (struct __pyx_obj_5pycnn_RNNState *(*)(struct __pyx_obj_5pycnn_RNNBuilder *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state *__pyx_optional_args))__pyx_f_5pycnn_10RNNBuilder_initial_state;
  __pyx_vtable_5pycnn_RNNBuilder.initial_state_from_raw_vectors = (struct __pyx_obj_5pycnn_RNNState *(*)(struct __pyx_obj_5pycnn_RNNBuilder *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_10RNNBuilder_initial_state_from_raw_vectors *__pyx_optional_args))__pyx_f_5pycnn_10RNNBuilder_initial_state_from_raw_vectors;
  if (PyType_Ready(&__pyx_type_5pycnn_RNNBuilder) < 0) __PYX_ERR(0, 732, __pyx_L1_error)
  __pyx_type_5pycnn_RNNBuilder.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_RNNBuilder.tp_dict, __pyx_vtabptr_5pycnn_RNNBuilder) < 0) __PYX_ERR(0, 732, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "RNNBuilder", (PyObject *)&__pyx_type_5pycnn_RNNBuilder) < 0) __PYX_ERR(0, 732, __pyx_L1_error)
  __pyx_ptype_5pycnn_RNNBuilder = &__pyx_type_5pycnn_RNNBuilder;
  __pyx_vtabptr_5pycnn_SimpleRNNBuilder = &__pyx_vtable_5pycnn_SimpleRNNBuilder;
  __pyx_vtable_5pycnn_SimpleRNNBuilder.__pyx_base = *__pyx_vtabptr_5pycnn_RNNBuilder;
  __pyx_type_5pycnn_SimpleRNNBuilder.tp_base = __pyx_ptype_5pycnn_RNNBuilder;
  if (PyType_Ready(&__pyx_type_5pycnn_SimpleRNNBuilder) < 0) __PYX_ERR(0, 840, __pyx_L1_error)
  __pyx_type_5pycnn_SimpleRNNBuilder.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_SimpleRNNBuilder.tp_dict, __pyx_vtabptr_5pycnn_SimpleRNNBuilder) < 0) __PYX_ERR(0, 840, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "SimpleRNNBuilder", (PyObject *)&__pyx_type_5pycnn_SimpleRNNBuilder) < 0) __PYX_ERR(0, 840, __pyx_L1_error)
  __pyx_ptype_5pycnn_SimpleRNNBuilder = &__pyx_type_5pycnn_SimpleRNNBuilder;
  __pyx_vtabptr_5pycnn_LSTMBuilder = &__pyx_vtable_5pycnn_LSTMBuilder;
  __pyx_vtable_5pycnn_LSTMBuilder.__pyx_base = *__pyx_vtabptr_5pycnn_RNNBuilder;
  __pyx_type_5pycnn_LSTMBuilder.tp_base = __pyx_ptype_5pycnn_RNNBuilder;
  if (PyType_Ready(&__pyx_type_5pycnn_LSTMBuilder) < 0) __PYX_ERR(0, 848, __pyx_L1_error)
  __pyx_type_5pycnn_LSTMBuilder.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_LSTMBuilder.tp_dict, __pyx_vtabptr_5pycnn_LSTMBuilder) < 0) __PYX_ERR(0, 848, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "LSTMBuilder", (PyObject *)&__pyx_type_5pycnn_LSTMBuilder) < 0) __PYX_ERR(0, 848, __pyx_L1_error)
  __pyx_ptype_5pycnn_LSTMBuilder = &__pyx_type_5pycnn_LSTMBuilder;
  __pyx_vtabptr_5pycnn_RNNState = &__pyx_vtable_5pycnn_RNNState;
  __pyx_vtable_5pycnn_RNNState.add_input = (struct __pyx_obj_5pycnn_RNNState *(*)(struct __pyx_obj_5pycnn_RNNState *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch))__pyx_f_5pycnn_8RNNState_add_input;
  __pyx_vtable_5pycnn_RNNState.transduce = (PyObject *(*)(struct __pyx_obj_5pycnn_RNNState *, PyObject *, int __pyx_skip_dispatch))__pyx_f_5pycnn_8RNNState_transduce;
  __pyx_vtable_5pycnn_RNNState.output = (struct __pyx_obj_5pycnn_Expression *(*)(struct __pyx_obj_5pycnn_RNNState *, int __pyx_skip_dispatch))__pyx_f_5pycnn_8RNNState_output;
  __pyx_vtable_5pycnn_RNNState.h = (PyObject *(*)(struct __pyx_obj_5pycnn_RNNState *, int __pyx_skip_dispatch))__pyx_f_5pycnn_8RNNState_h;
  __pyx_vtable_5pycnn_RNNState.s = (PyObject *(*)(struct __pyx_obj_5pycnn_RNNState *, int __pyx_skip_dispatch))__pyx_f_5pycnn_8RNNState_s;
  __pyx_vtable_5pycnn_RNNState.prev = (struct __pyx_obj_5pycnn_RNNState *(*)(struct __pyx_obj_5pycnn_RNNState *, int __pyx_skip_dispatch))__pyx_f_5pycnn_8RNNState_prev;
  if (PyType_Ready(&__pyx_type_5pycnn_RNNState) < 0) __PYX_ERR(0, 856, __pyx_L1_error)
  __pyx_type_5pycnn_RNNState.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_RNNState.tp_dict, __pyx_vtabptr_5pycnn_RNNState) < 0) __PYX_ERR(0, 856, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "RNNState", (PyObject *)&__pyx_type_5pycnn_RNNState) < 0) __PYX_ERR(0, 856, __pyx_L1_error)
  __pyx_ptype_5pycnn_RNNState = &__pyx_type_5pycnn_RNNState;
  __pyx_vtabptr_5pycnn_StackedRNNState = &__pyx_vtable_5pycnn_StackedRNNState;
  __pyx_vtable_5pycnn_StackedRNNState.add_input = (struct __pyx_obj_5pycnn_StackedRNNState *(*)(struct __pyx_obj_5pycnn_StackedRNNState *, struct __pyx_obj_5pycnn_Expression *, int __pyx_skip_dispatch))__pyx_f_5pycnn_15StackedRNNState_add_input;
  if (PyType_Ready(&__pyx_type_5pycnn_StackedRNNState) < 0) __PYX_ERR(0, 957, __pyx_L1_error)
  __pyx_type_5pycnn_StackedRNNState.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_StackedRNNState.tp_dict, __pyx_vtabptr_5pycnn_StackedRNNState) < 0) __PYX_ERR(0, 957, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "StackedRNNState", (PyObject *)&__pyx_type_5pycnn_StackedRNNState) < 0) __PYX_ERR(0, 957, __pyx_L1_error)
  __pyx_ptype_5pycnn_StackedRNNState = &__pyx_type_5pycnn_StackedRNNState;
  __pyx_vtabptr_5pycnn_SimpleSGDTrainer = &__pyx_vtable_5pycnn_SimpleSGDTrainer;
  __pyx_vtable_5pycnn_SimpleSGDTrainer.update = (PyObject *(*)(struct __pyx_obj_5pycnn_SimpleSGDTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update *__pyx_optional_args))__pyx_f_5pycnn_16SimpleSGDTrainer_update;
  __pyx_vtable_5pycnn_SimpleSGDTrainer.update_epoch = (PyObject *(*)(struct __pyx_obj_5pycnn_SimpleSGDTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_16SimpleSGDTrainer_update_epoch *__pyx_optional_args))__pyx_f_5pycnn_16SimpleSGDTrainer_update_epoch;
  __pyx_vtable_5pycnn_SimpleSGDTrainer.status = (PyObject *(*)(struct __pyx_obj_5pycnn_SimpleSGDTrainer *, int __pyx_skip_dispatch))__pyx_f_5pycnn_16SimpleSGDTrainer_status;
  if (PyType_Ready(&__pyx_type_5pycnn_SimpleSGDTrainer) < 0) __PYX_ERR(0, 994, __pyx_L1_error)
  __pyx_type_5pycnn_SimpleSGDTrainer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_SimpleSGDTrainer.tp_dict, __pyx_vtabptr_5pycnn_SimpleSGDTrainer) < 0) __PYX_ERR(0, 994, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "SimpleSGDTrainer", (PyObject *)&__pyx_type_5pycnn_SimpleSGDTrainer) < 0) __PYX_ERR(0, 994, __pyx_L1_error)
  __pyx_ptype_5pycnn_SimpleSGDTrainer = &__pyx_type_5pycnn_SimpleSGDTrainer;
  __pyx_vtabptr_5pycnn_MomentumSGDTrainer = &__pyx_vtable_5pycnn_MomentumSGDTrainer;
  __pyx_vtable_5pycnn_MomentumSGDTrainer.update = (PyObject *(*)(struct __pyx_obj_5pycnn_MomentumSGDTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update *__pyx_optional_args))__pyx_f_5pycnn_18MomentumSGDTrainer_update;
  __pyx_vtable_5pycnn_MomentumSGDTrainer.update_epoch = (PyObject *(*)(struct __pyx_obj_5pycnn_MomentumSGDTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_18MomentumSGDTrainer_update_epoch *__pyx_optional_args))__pyx_f_5pycnn_18MomentumSGDTrainer_update_epoch;
  __pyx_vtable_5pycnn_MomentumSGDTrainer.status = (PyObject *(*)(struct __pyx_obj_5pycnn_MomentumSGDTrainer *, int __pyx_skip_dispatch))__pyx_f_5pycnn_18MomentumSGDTrainer_status;
  if (PyType_Ready(&__pyx_type_5pycnn_MomentumSGDTrainer) < 0) __PYX_ERR(0, 1007, __pyx_L1_error)
  __pyx_type_5pycnn_MomentumSGDTrainer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_MomentumSGDTrainer.tp_dict, __pyx_vtabptr_5pycnn_MomentumSGDTrainer) < 0) __PYX_ERR(0, 1007, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "MomentumSGDTrainer", (PyObject *)&__pyx_type_5pycnn_MomentumSGDTrainer) < 0) __PYX_ERR(0, 1007, __pyx_L1_error)
  __pyx_ptype_5pycnn_MomentumSGDTrainer = &__pyx_type_5pycnn_MomentumSGDTrainer;
  __pyx_vtabptr_5pycnn_AdagradTrainer = &__pyx_vtable_5pycnn_AdagradTrainer;
  __pyx_vtable_5pycnn_AdagradTrainer.update = (PyObject *(*)(struct __pyx_obj_5pycnn_AdagradTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_14AdagradTrainer_update *__pyx_optional_args))__pyx_f_5pycnn_14AdagradTrainer_update;
  __pyx_vtable_5pycnn_AdagradTrainer.update_epoch = (PyObject *(*)(struct __pyx_obj_5pycnn_AdagradTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_14AdagradTrainer_update_epoch *__pyx_optional_args))__pyx_f_5pycnn_14AdagradTrainer_update_epoch;
  __pyx_vtable_5pycnn_AdagradTrainer.status = (PyObject *(*)(struct __pyx_obj_5pycnn_AdagradTrainer *, int __pyx_skip_dispatch))__pyx_f_5pycnn_14AdagradTrainer_status;
  if (PyType_Ready(&__pyx_type_5pycnn_AdagradTrainer) < 0) __PYX_ERR(0, 1020, __pyx_L1_error)
  __pyx_type_5pycnn_AdagradTrainer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_AdagradTrainer.tp_dict, __pyx_vtabptr_5pycnn_AdagradTrainer) < 0) __PYX_ERR(0, 1020, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "AdagradTrainer", (PyObject *)&__pyx_type_5pycnn_AdagradTrainer) < 0) __PYX_ERR(0, 1020, __pyx_L1_error)
  __pyx_ptype_5pycnn_AdagradTrainer = &__pyx_type_5pycnn_AdagradTrainer;
  __pyx_vtabptr_5pycnn_AdadeltaTrainer = &__pyx_vtable_5pycnn_AdadeltaTrainer;
  __pyx_vtable_5pycnn_AdadeltaTrainer.update = (PyObject *(*)(struct __pyx_obj_5pycnn_AdadeltaTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update *__pyx_optional_args))__pyx_f_5pycnn_15AdadeltaTrainer_update;
  __pyx_vtable_5pycnn_AdadeltaTrainer.update_epoch = (PyObject *(*)(struct __pyx_obj_5pycnn_AdadeltaTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_15AdadeltaTrainer_update_epoch *__pyx_optional_args))__pyx_f_5pycnn_15AdadeltaTrainer_update_epoch;
  __pyx_vtable_5pycnn_AdadeltaTrainer.status = (PyObject *(*)(struct __pyx_obj_5pycnn_AdadeltaTrainer *, int __pyx_skip_dispatch))__pyx_f_5pycnn_15AdadeltaTrainer_status;
  if (PyType_Ready(&__pyx_type_5pycnn_AdadeltaTrainer) < 0) __PYX_ERR(0, 1033, __pyx_L1_error)
  __pyx_type_5pycnn_AdadeltaTrainer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_AdadeltaTrainer.tp_dict, __pyx_vtabptr_5pycnn_AdadeltaTrainer) < 0) __PYX_ERR(0, 1033, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "AdadeltaTrainer", (PyObject *)&__pyx_type_5pycnn_AdadeltaTrainer) < 0) __PYX_ERR(0, 1033, __pyx_L1_error)
  __pyx_ptype_5pycnn_AdadeltaTrainer = &__pyx_type_5pycnn_AdadeltaTrainer;
  __pyx_vtabptr_5pycnn_AdamTrainer = &__pyx_vtable_5pycnn_AdamTrainer;
  __pyx_vtable_5pycnn_AdamTrainer.update = (PyObject *(*)(struct __pyx_obj_5pycnn_AdamTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_11AdamTrainer_update *__pyx_optional_args))__pyx_f_5pycnn_11AdamTrainer_update;
  __pyx_vtable_5pycnn_AdamTrainer.update_epoch = (PyObject *(*)(struct __pyx_obj_5pycnn_AdamTrainer *, int __pyx_skip_dispatch, struct __pyx_opt_args_5pycnn_11AdamTrainer_update_epoch *__pyx_optional_args))__pyx_f_5pycnn_11AdamTrainer_update_epoch;
  __pyx_vtable_5pycnn_AdamTrainer.status = (PyObject *(*)(struct __pyx_obj_5pycnn_AdamTrainer *, int __pyx_skip_dispatch))__pyx_f_5pycnn_11AdamTrainer_status;
  if (PyType_Ready(&__pyx_type_5pycnn_AdamTrainer) < 0) __PYX_ERR(0, 1046, __pyx_L1_error)
  __pyx_type_5pycnn_AdamTrainer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_5pycnn_AdamTrainer.tp_dict, __pyx_vtabptr_5pycnn_AdamTrainer) < 0) __PYX_ERR(0, 1046, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "AdamTrainer", (PyObject *)&__pyx_type_5pycnn_AdamTrainer) < 0) __PYX_ERR(0, 1046, __pyx_L1_error)
  __pyx_ptype_5pycnn_AdamTrainer = &__pyx_type_5pycnn_AdamTrainer;
  /*--- Type import code ---*/
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "pycnn.pyx":3
 * # on numpy arrays, see: https://github.com/cython/cython/wiki/tutorials-NumpyPointerToC
 * 
 * import sys             # <<<<<<<<<<<<<<
 * from cython.operator cimport dereference as deref
 * from libc.stdlib cimport malloc, free
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_sys, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sys, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":6
 * from cython.operator cimport dereference as deref
 * from libc.stdlib cimport malloc, free
 * import numpy as np             # <<<<<<<<<<<<<<
 * # TODO:
 * #  - set random seed (in CNN)
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":50
 *     free(c_argv)
 * 
 * init() # TODO: allow different random seeds             # <<<<<<<<<<<<<<
 * 
 * cdef CDim Dim(dim):
 */
  __pyx_t_1 = __pyx_f_5pycnn_init(NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":259
 * # }}}
 * 
 * cdef int SECRET = 923148             # <<<<<<<<<<<<<<
 * cdef ComputationGraph _cg = ComputationGraph(SECRET)
 * 
 */
  __pyx_v_5pycnn_SECRET = 0xE160C;

  /* "pycnn.pyx":260
 * 
 * cdef int SECRET = 923148
 * cdef ComputationGraph _cg = ComputationGraph(SECRET)             # <<<<<<<<<<<<<<
 * 
 * def cg_version(): return _cg._cg_version
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_5pycnn_SECRET); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5pycnn_ComputationGraph), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_XGOTREF(((PyObject *)__pyx_v_5pycnn__cg));
  __Pyx_DECREF_SET(__pyx_v_5pycnn__cg, ((struct __pyx_obj_5pycnn_ComputationGraph *)__pyx_t_1));
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pycnn.pyx":262
 * cdef ComputationGraph _cg = ComputationGraph(SECRET)
 * 
 * def cg_version(): return _cg._cg_version             # <<<<<<<<<<<<<<
 * def renew_cg(): return _cg.renew()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_1cg_version, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_cg_version, __pyx_t_1) < 0) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":263
 * 
 * def cg_version(): return _cg._cg_version
 * def renew_cg(): return _cg.renew()             # <<<<<<<<<<<<<<
 * 
 * cpdef ComputationGraph cg():
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_3renew_cg, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_renew_cg, __pyx_t_1) < 0) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":479
 *     return Expression.from_cexpr(g.version(), c_parameter(g.thisptr[0], p.thisptr))
 * 
 * def parameter(Parameters p): return _parameter(_cg, p)             # <<<<<<<<<<<<<<
 * 
 * # {{{ Mutable Expressions
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_7parameter, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_parameter, __pyx_t_1) < 0) __PYX_ERR(0, 479, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":498
 *         self.val.set(s)
 * 
 * def scalarInput(float s):             # <<<<<<<<<<<<<<
 *     return _cg.inputValue(s)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_9scalarInput, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 498, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_scalarInput, __pyx_t_1) < 0) __PYX_ERR(0, 498, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":516
 *         self.val.set(data)
 * 
 * def vecInput(int dim):             # <<<<<<<<<<<<<<
 *     return _cg.inputVector(dim)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_11vecInput, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_vecInput, __pyx_t_1) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":519
 *     return _cg.inputVector(dim)
 * 
 * def matInput(int d1, int d2):             # <<<<<<<<<<<<<<
 *     return _cg.inputMatrix(d1, d2)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_13matInput, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_matInput, __pyx_t_1) < 0) __PYX_ERR(0, 519, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":555
 *         self.val.set(i)
 * 
 * def lookup(LookupParameters p, unsigned index=0, update=True):             # <<<<<<<<<<<<<<
 *     return _cg.lookup(p, index, update)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_15lookup, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_lookup, __pyx_t_1) < 0) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":558
 *     return _cg.lookup(p, index, update)
 * 
 * def lookup_batch(LookupParameters p, vector[unsigned] indices, update=True):             # <<<<<<<<<<<<<<
 *     return _cg.lookup_batch(p, indices, update)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_17lookup_batch, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_lookup_batch, __pyx_t_1) < 0) __PYX_ERR(0, 558, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":575
 *         self.val.set(i)
 * 
 * def pick(Expression e, unsigned index=0):             # <<<<<<<<<<<<<<
 *     return _cg.outputPicker(e, index)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_19pick, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pick, __pyx_t_1) < 0) __PYX_ERR(0, 575, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":591
 *         self.val.set(i)
 * 
 * def pick_batch(Expression e, vector[unsigned] indices):             # <<<<<<<<<<<<<<
 *     return _cg.outputBatchPicker(e, indices)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_21pick_batch, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 591, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pick_batch, __pyx_t_1) < 0) __PYX_ERR(0, 591, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":608
 *         self.val.set(i)
 * 
 * def hinge(Expression x, unsigned index, float m=1.0):             # <<<<<<<<<<<<<<
 *     return _hingeExpression(_cg, x, index, m)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_5pycnn_23hinge, NULL, __pyx_n_s_pycnn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_hinge, __pyx_t_1) < 0) __PYX_ERR(0, 608, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pycnn.pyx":1
 * # on numpy arrays, see: https://github.com/cython/cython/wiki/tutorials-NumpyPointerToC             # <<<<<<<<<<<<<<
 * 
 * import sys
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.to_py":67
 * 
 * @cname("__pyx_convert_vector_to_py_unsigned_int")
 * cdef object __pyx_convert_vector_to_py_unsigned_int(vector[X]& v):             # <<<<<<<<<<<<<<
 *     return [X_to_py(v[i]) for i in range(v.size())]
 * 
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init pycnn", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init pycnn");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* GetModuleGlobalName */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

/* PyObjectCall */
  #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyIntBinop */
  #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    }
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyIntBinop */
  #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) {
            Py_RETURN_TRUE;
        } else {
            Py_RETURN_FALSE;
        }
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS && PY_MAJOR_VERSION >= 3
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a;
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    }
                #if PyLong_SHIFT < 30 && PyLong_SHIFT != 15
                default: return PyLong_Type.tp_richcompare(op1, op2, Py_EQ);
                #else
                default: Py_RETURN_FALSE;
                #endif
            }
        }
            if (a == b) {
                Py_RETURN_TRUE;
            } else {
                Py_RETURN_FALSE;
            }
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            if ((double)a == (double)b) {
                Py_RETURN_TRUE;
            } else {
                Py_RETURN_FALSE;
            }
    }
    return PyObject_RichCompare(op1, op2, Py_EQ);
}
#endif

/* PyErrFetchRestore */
  #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
  #if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* WriteUnraisableException */
    static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* PyObjectCallMethO */
    #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
    #if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* RaiseArgTupleInvalid */
      static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* KeywordStringCheck */
      static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* PyObjectCallNoArg */
      #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* GetItemInt */
        static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* RaiseDoubleKeywords */
        static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
        static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* ExtTypeTest */
        static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* PyObjectCallMethod1 */
        static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *args;
            PyObject *function = PyMethod_GET_FUNCTION(method);
            args = PyTuple_New(2);
            if (unlikely(!args)) goto bad;
            Py_INCREF(self);
            PyTuple_SET_ITEM(args, 0, self);
            Py_INCREF(arg);
            PyTuple_SET_ITEM(args, 1, arg);
            Py_INCREF(function);
            Py_DECREF(method); method = NULL;
            result = __Pyx_PyObject_Call(function, args, NULL);
            Py_DECREF(args);
            Py_DECREF(function);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallOneArg(method, arg);
bad:
    Py_XDECREF(method);
    return result;
}

/* append */
        static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* SliceObject */
        static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_COMPILING_IN_CPYTHON
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object is unsliceable", Py_TYPE(obj)->tp_name);
bad:
    return NULL;
}

/* ArgTypeTest */
        static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

/* None */
        static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

/* CallNextTpTraverse */
        static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

/* CallNextTpClear */
        static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

/* SetVTable */
        static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* Import */
        static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* CodeObjectCache */
        static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
        #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
        #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(unsigned int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
        static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *x) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 2 * PyLong_SHIFT) {
                            return (unsigned int) (((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 3 * PyLong_SHIFT) {
                            return (unsigned int) (((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 4 * PyLong_SHIFT) {
                            return (unsigned int) (((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) ((((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, long, PyLong_AsLong(x))
            } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned int) -1;
        }
    } else {
        unsigned int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (unsigned int) -1;
        val = __Pyx_PyInt_As_unsigned_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned int");
    return (unsigned int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned int");
    return (unsigned int) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CheckBinaryVersion */
        static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
        static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
